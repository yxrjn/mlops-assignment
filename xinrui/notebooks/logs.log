2025-02-27 16:20:56,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:20:56,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:20:56,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:20:56,715:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:09,548:INFO:PyCaret ClassificationExperiment
2025-02-27 16:22:09,548:INFO:Logging name: wheatclassification
2025-02-27 16:22:09,548:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 16:22:09,552:INFO:version 3.3.2
2025-02-27 16:22:09,552:INFO:Initializing setup()
2025-02-27 16:22:09,552:INFO:self.USI: 3b06
2025-02-27 16:22:09,552:INFO:self._variable_keys: {'USI', 'is_multiclass', 'pipeline', 'logging_param', 'fold_shuffle_param', 'y_test', 'target_param', '_ml_usecase', 'log_plots_param', 'X_train', 'y', 'fold_generator', 'memory', 'gpu_param', 'y_train', 'html_param', 'X_test', 'exp_id', 'seed', 'n_jobs_param', 'X', 'fold_groups_param', '_available_plots', 'gpu_n_jobs_param', 'exp_name_log', 'data', 'idx', 'fix_imbalance'}
2025-02-27 16:22:09,552:INFO:Checking environment
2025-02-27 16:22:09,552:INFO:python_version: 3.11.11
2025-02-27 16:22:09,552:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-27 16:22:09,552:INFO:machine: AMD64
2025-02-27 16:22:09,552:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-27 16:22:09,552:INFO:Memory: svmem(total=16855433216, available=6693117952, percent=60.3, used=10162315264, free=6693117952)
2025-02-27 16:22:09,552:INFO:Physical Core: 10
2025-02-27 16:22:09,552:INFO:Logical Core: 16
2025-02-27 16:22:09,552:INFO:Checking libraries
2025-02-27 16:22:09,552:INFO:System:
2025-02-27 16:22:09,554:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-27 16:22:09,554:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-27 16:22:09,554:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-27 16:22:09,554:INFO:PyCaret required dependencies:
2025-02-27 16:22:10,003:INFO:                 pip: 25.0
2025-02-27 16:22:10,003:INFO:          setuptools: 75.8.2
2025-02-27 16:22:10,003:INFO:             pycaret: 3.3.2
2025-02-27 16:22:10,003:INFO:             IPython: 8.32.0
2025-02-27 16:22:10,003:INFO:          ipywidgets: 8.1.5
2025-02-27 16:22:10,003:INFO:                tqdm: 4.67.1
2025-02-27 16:22:10,005:INFO:               numpy: 1.26.4
2025-02-27 16:22:10,005:INFO:              pandas: 1.5.3
2025-02-27 16:22:10,005:INFO:              jinja2: 3.1.5
2025-02-27 16:22:10,005:INFO:               scipy: 1.11.4
2025-02-27 16:22:10,005:INFO:              joblib: 1.3.2
2025-02-27 16:22:10,005:INFO:             sklearn: 1.4.2
2025-02-27 16:22:10,005:INFO:                pyod: 2.0.3
2025-02-27 16:22:10,005:INFO:            imblearn: 0.13.0
2025-02-27 16:22:10,005:INFO:   category_encoders: 2.7.0
2025-02-27 16:22:10,005:INFO:            lightgbm: 4.6.0
2025-02-27 16:22:10,005:INFO:               numba: 0.61.0
2025-02-27 16:22:10,005:INFO:            requests: 2.32.3
2025-02-27 16:22:10,005:INFO:          matplotlib: 3.7.5
2025-02-27 16:22:10,007:INFO:          scikitplot: 0.3.7
2025-02-27 16:22:10,007:INFO:         yellowbrick: 1.5
2025-02-27 16:22:10,007:INFO:              plotly: 5.24.1
2025-02-27 16:22:10,007:INFO:    plotly-resampler: Not installed
2025-02-27 16:22:10,007:INFO:             kaleido: 0.2.1
2025-02-27 16:22:10,007:INFO:           schemdraw: 0.15
2025-02-27 16:22:10,007:INFO:         statsmodels: 0.14.4
2025-02-27 16:22:10,007:INFO:              sktime: 0.26.0
2025-02-27 16:22:10,007:INFO:               tbats: 1.1.3
2025-02-27 16:22:10,007:INFO:            pmdarima: 2.0.4
2025-02-27 16:22:10,007:INFO:              psutil: 7.0.0
2025-02-27 16:22:10,009:INFO:          markupsafe: 3.0.2
2025-02-27 16:22:10,009:INFO:             pickle5: Not installed
2025-02-27 16:22:10,009:INFO:         cloudpickle: 3.1.1
2025-02-27 16:22:10,009:INFO:         deprecation: 2.1.0
2025-02-27 16:22:10,009:INFO:              xxhash: 3.5.0
2025-02-27 16:22:10,009:INFO:           wurlitzer: Not installed
2025-02-27 16:22:10,009:INFO:PyCaret optional dependencies:
2025-02-27 16:22:10,047:INFO:                shap: Not installed
2025-02-27 16:22:10,047:INFO:           interpret: Not installed
2025-02-27 16:22:10,047:INFO:                umap: Not installed
2025-02-27 16:22:10,047:INFO:     ydata_profiling: Not installed
2025-02-27 16:22:10,047:INFO:  explainerdashboard: Not installed
2025-02-27 16:22:10,047:INFO:             autoviz: Not installed
2025-02-27 16:22:10,047:INFO:           fairlearn: Not installed
2025-02-27 16:22:10,047:INFO:          deepchecks: Not installed
2025-02-27 16:22:10,047:INFO:             xgboost: Not installed
2025-02-27 16:22:10,047:INFO:            catboost: 1.2.3
2025-02-27 16:22:10,047:INFO:              kmodes: Not installed
2025-02-27 16:22:10,047:INFO:             mlxtend: Not installed
2025-02-27 16:22:10,047:INFO:       statsforecast: Not installed
2025-02-27 16:22:10,063:INFO:        tune_sklearn: Not installed
2025-02-27 16:22:10,063:INFO:                 ray: Not installed
2025-02-27 16:22:10,063:INFO:            hyperopt: Not installed
2025-02-27 16:22:10,063:INFO:              optuna: Not installed
2025-02-27 16:22:10,063:INFO:               skopt: Not installed
2025-02-27 16:22:10,063:INFO:              mlflow: 2.20.2
2025-02-27 16:22:10,063:INFO:              gradio: Not installed
2025-02-27 16:22:10,063:INFO:             fastapi: Not installed
2025-02-27 16:22:10,063:INFO:             uvicorn: Not installed
2025-02-27 16:22:10,063:INFO:              m2cgen: Not installed
2025-02-27 16:22:10,063:INFO:           evidently: Not installed
2025-02-27 16:22:10,063:INFO:               fugue: Not installed
2025-02-27 16:22:10,063:INFO:           streamlit: 1.42.2
2025-02-27 16:22:10,063:INFO:             prophet: Not installed
2025-02-27 16:22:10,063:INFO:None
2025-02-27 16:22:10,063:INFO:Set up data.
2025-02-27 16:22:10,079:INFO:Set up folding strategy.
2025-02-27 16:22:10,079:INFO:Set up train/test split.
2025-02-27 16:22:10,094:INFO:Set up index.
2025-02-27 16:22:10,094:INFO:Assigning column types.
2025-02-27 16:22:10,112:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:22:10,361:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:10,375:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:22:10,542:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:10,542:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:10,848:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:10,854:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:22:10,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:10,997:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:11,000:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:22:11,221:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:22:11,363:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:11,363:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:11,604:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:22:11,757:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:11,757:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:11,757:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 16:22:12,125:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:12,125:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:12,511:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:12,511:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:12,525:INFO:Preparing preprocessing pipeline...
2025-02-27 16:22:12,528:INFO:Set up label encoding.
2025-02-27 16:22:12,528:INFO:Set up simple imputation.
2025-02-27 16:22:12,528:INFO:Set up binning of numerical features.
2025-02-27 16:22:12,533:INFO:Set up feature normalization.
2025-02-27 16:22:12,533:INFO:Set up feature selection.
2025-02-27 16:22:12,885:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:12,885:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:12,995:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:22:14,132:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:22:14,178:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:22:14,178:INFO:Creating final display dataframe.
2025-02-27 16:22:14,785:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target                 Type
2                   Target type           Multiclass
3                Target mapping     1: 0, 2: 1, 3: 2
4           Original data shape             (199, 8)
5        Transformed data shape             (199, 2)
6   Transformed train set shape             (139, 2)
7    Transformed test set shape              (60, 2)
8              Numeric features                    7
9                    Preprocess                 True
10              Imputation type               simple
11           Numeric imputation                 mean
12       Categorical imputation                 mode
13                    Normalize                 True
14             Normalize method               zscore
15            Feature selection                 True
16     Feature selection method              classic
17  Feature selection estimator             lightgbm
18  Number of features selected                  0.2
19               Fold Generator      StratifiedKFold
20                  Fold Number                   10
21                     CPU Jobs                   -1
22                      Use GPU                False
23               Log Experiment         MlflowLogger
24              Experiment Name  wheatclassification
25                          USI                 3b06
2025-02-27 16:22:15,208:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:15,208:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:15,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:15,583:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:15,583:INFO:Logging experiment in loggers
2025-02-27 16:22:16,494:INFO:SubProcess save_model() called ==================================
2025-02-27 16:22:16,590:INFO:Initializing save_model()
2025-02-27 16:22:16,590:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), model_name=C:\Users\JUPYTE~1\AppData\Local\Temp\tmp4iocx_vn\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 16:22:16,590:INFO:Adding model into prep_pipe
2025-02-27 16:22:16,590:WARNING:Only Model saved as it was a pipeline.
2025-02-27 16:22:16,622:INFO:C:\Users\JUPYTE~1\AppData\Local\Temp\tmp4iocx_vn\Transformation Pipeline.pkl saved in current working directory
2025-02-27 16:22:16,669:INFO:Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:22:16,669:INFO:save_model() successfully completed......................................
2025-02-27 16:22:16,843:INFO:SubProcess save_model() end ==================================
2025-02-27 16:22:34,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:34,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:34,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:34,166:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:22:38,933:INFO:PyCaret ClassificationExperiment
2025-02-27 16:22:38,933:INFO:Logging name: wheatclassification
2025-02-27 16:22:38,933:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 16:22:38,933:INFO:version 3.3.2
2025-02-27 16:22:38,933:INFO:Initializing setup()
2025-02-27 16:22:38,933:INFO:self.USI: 3699
2025-02-27 16:22:38,935:INFO:self._variable_keys: {'n_jobs_param', 'data', 'logging_param', 'fold_generator', 'USI', 'X_test', '_available_plots', 'memory', 'y_test', 'X', 'exp_id', 'fold_groups_param', 'gpu_param', 'fold_shuffle_param', 'pipeline', 'idx', 'target_param', 'y', 'is_multiclass', '_ml_usecase', 'y_train', 'X_train', 'seed', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'html_param', 'fix_imbalance'}
2025-02-27 16:22:38,935:INFO:Checking environment
2025-02-27 16:22:38,935:INFO:python_version: 3.11.11
2025-02-27 16:22:38,935:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-27 16:22:38,935:INFO:machine: AMD64
2025-02-27 16:22:38,935:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-27 16:22:38,935:INFO:Memory: svmem(total=16855433216, available=6694260736, percent=60.3, used=10161172480, free=6694260736)
2025-02-27 16:22:38,935:INFO:Physical Core: 10
2025-02-27 16:22:38,935:INFO:Logical Core: 16
2025-02-27 16:22:38,935:INFO:Checking libraries
2025-02-27 16:22:38,935:INFO:System:
2025-02-27 16:22:38,935:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-27 16:22:38,935:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-27 16:22:38,935:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-27 16:22:38,935:INFO:PyCaret required dependencies:
2025-02-27 16:22:39,132:INFO:                 pip: 25.0
2025-02-27 16:22:39,135:INFO:          setuptools: 75.8.2
2025-02-27 16:22:39,135:INFO:             pycaret: 3.3.2
2025-02-27 16:22:39,135:INFO:             IPython: 8.32.0
2025-02-27 16:22:39,135:INFO:          ipywidgets: 8.1.5
2025-02-27 16:22:39,135:INFO:                tqdm: 4.67.1
2025-02-27 16:22:39,135:INFO:               numpy: 1.26.4
2025-02-27 16:22:39,135:INFO:              pandas: 1.5.3
2025-02-27 16:22:39,135:INFO:              jinja2: 3.1.5
2025-02-27 16:22:39,135:INFO:               scipy: 1.11.4
2025-02-27 16:22:39,135:INFO:              joblib: 1.3.2
2025-02-27 16:22:39,135:INFO:             sklearn: 1.4.2
2025-02-27 16:22:39,135:INFO:                pyod: 2.0.3
2025-02-27 16:22:39,135:INFO:            imblearn: 0.13.0
2025-02-27 16:22:39,135:INFO:   category_encoders: 2.7.0
2025-02-27 16:22:39,135:INFO:            lightgbm: 4.6.0
2025-02-27 16:22:39,135:INFO:               numba: 0.61.0
2025-02-27 16:22:39,135:INFO:            requests: 2.32.3
2025-02-27 16:22:39,135:INFO:          matplotlib: 3.7.5
2025-02-27 16:22:39,135:INFO:          scikitplot: 0.3.7
2025-02-27 16:22:39,135:INFO:         yellowbrick: 1.5
2025-02-27 16:22:39,135:INFO:              plotly: 5.24.1
2025-02-27 16:22:39,135:INFO:    plotly-resampler: Not installed
2025-02-27 16:22:39,135:INFO:             kaleido: 0.2.1
2025-02-27 16:22:39,135:INFO:           schemdraw: 0.15
2025-02-27 16:22:39,135:INFO:         statsmodels: 0.14.4
2025-02-27 16:22:39,135:INFO:              sktime: 0.26.0
2025-02-27 16:22:39,135:INFO:               tbats: 1.1.3
2025-02-27 16:22:39,135:INFO:            pmdarima: 2.0.4
2025-02-27 16:22:39,135:INFO:              psutil: 7.0.0
2025-02-27 16:22:39,135:INFO:          markupsafe: 3.0.2
2025-02-27 16:22:39,135:INFO:             pickle5: Not installed
2025-02-27 16:22:39,137:INFO:         cloudpickle: 3.1.1
2025-02-27 16:22:39,137:INFO:         deprecation: 2.1.0
2025-02-27 16:22:39,137:INFO:              xxhash: 3.5.0
2025-02-27 16:22:39,137:INFO:           wurlitzer: Not installed
2025-02-27 16:22:39,137:INFO:PyCaret optional dependencies:
2025-02-27 16:22:39,153:INFO:                shap: Not installed
2025-02-27 16:22:39,153:INFO:           interpret: Not installed
2025-02-27 16:22:39,153:INFO:                umap: Not installed
2025-02-27 16:22:39,153:INFO:     ydata_profiling: Not installed
2025-02-27 16:22:39,155:INFO:  explainerdashboard: Not installed
2025-02-27 16:22:39,155:INFO:             autoviz: Not installed
2025-02-27 16:22:39,155:INFO:           fairlearn: Not installed
2025-02-27 16:22:39,155:INFO:          deepchecks: Not installed
2025-02-27 16:22:39,155:INFO:             xgboost: Not installed
2025-02-27 16:22:39,155:INFO:            catboost: 1.2.3
2025-02-27 16:22:39,155:INFO:              kmodes: Not installed
2025-02-27 16:22:39,155:INFO:             mlxtend: Not installed
2025-02-27 16:22:39,155:INFO:       statsforecast: Not installed
2025-02-27 16:22:39,155:INFO:        tune_sklearn: Not installed
2025-02-27 16:22:39,155:INFO:                 ray: Not installed
2025-02-27 16:22:39,155:INFO:            hyperopt: Not installed
2025-02-27 16:22:39,155:INFO:              optuna: Not installed
2025-02-27 16:22:39,155:INFO:               skopt: Not installed
2025-02-27 16:22:39,155:INFO:              mlflow: 2.20.2
2025-02-27 16:22:39,155:INFO:              gradio: Not installed
2025-02-27 16:22:39,155:INFO:             fastapi: Not installed
2025-02-27 16:22:39,155:INFO:             uvicorn: Not installed
2025-02-27 16:22:39,155:INFO:              m2cgen: Not installed
2025-02-27 16:22:39,155:INFO:           evidently: Not installed
2025-02-27 16:22:39,155:INFO:               fugue: Not installed
2025-02-27 16:22:39,155:INFO:           streamlit: 1.42.2
2025-02-27 16:22:39,155:INFO:             prophet: Not installed
2025-02-27 16:22:39,155:INFO:None
2025-02-27 16:22:39,155:INFO:Set up data.
2025-02-27 16:22:39,164:INFO:Set up folding strategy.
2025-02-27 16:22:39,164:INFO:Set up train/test split.
2025-02-27 16:22:39,164:INFO:Set up index.
2025-02-27 16:22:39,164:INFO:Assigning column types.
2025-02-27 16:22:39,180:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:22:39,254:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:39,262:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:22:39,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:39,323:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:39,456:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:22:39,458:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:22:39,499:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:39,499:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:39,499:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:22:39,577:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:22:39,628:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:39,628:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:39,694:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:22:39,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:39,755:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:39,755:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 16:22:39,877:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:39,877:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:40,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:40,007:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:40,013:INFO:Preparing preprocessing pipeline...
2025-02-27 16:22:40,014:INFO:Set up label encoding.
2025-02-27 16:22:40,014:INFO:Set up simple imputation.
2025-02-27 16:22:40,014:INFO:Set up binning of numerical features.
2025-02-27 16:22:40,014:INFO:Set up feature normalization.
2025-02-27 16:22:40,014:INFO:Set up feature selection.
2025-02-27 16:22:40,137:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:40,137:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:40,285:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:22:40,330:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:22:40,330:INFO:Creating final display dataframe.
2025-02-27 16:22:40,603:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target                 Type
2                   Target type           Multiclass
3                Target mapping     1: 0, 2: 1, 3: 2
4           Original data shape             (199, 8)
5        Transformed data shape             (199, 2)
6   Transformed train set shape             (139, 2)
7    Transformed test set shape              (60, 2)
8              Numeric features                    7
9                    Preprocess                 True
10              Imputation type               simple
11           Numeric imputation                 mean
12       Categorical imputation                 mode
13                    Normalize                 True
14             Normalize method               zscore
15            Feature selection                 True
16     Feature selection method              classic
17  Feature selection estimator             lightgbm
18  Number of features selected                  0.2
19               Fold Generator      StratifiedKFold
20                  Fold Number                   10
21                     CPU Jobs                   -1
22                      Use GPU                False
23               Log Experiment         MlflowLogger
24              Experiment Name  wheatclassification
25                          USI                 3699
2025-02-27 16:22:40,779:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:40,779:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:40,961:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:22:40,961:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:22:40,967:INFO:Logging experiment in loggers
2025-02-27 16:22:41,451:INFO:SubProcess save_model() called ==================================
2025-02-27 16:22:41,506:INFO:Initializing save_model()
2025-02-27 16:22:41,509:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), model_name=C:\Users\JUPYTE~1\AppData\Local\Temp\tmp2vlr54i4\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 16:22:41,509:INFO:Adding model into prep_pipe
2025-02-27 16:22:41,509:WARNING:Only Model saved as it was a pipeline.
2025-02-27 16:22:41,529:INFO:C:\Users\JUPYTE~1\AppData\Local\Temp\tmp2vlr54i4\Transformation Pipeline.pkl saved in current working directory
2025-02-27 16:22:41,556:INFO:Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:22:41,556:INFO:save_model() successfully completed......................................
2025-02-27 16:22:41,722:INFO:SubProcess save_model() end ==================================
2025-02-27 16:25:18,850:INFO:PyCaret ClassificationExperiment
2025-02-27 16:25:18,850:INFO:Logging name: wheatclassification
2025-02-27 16:25:18,851:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 16:25:18,851:INFO:version 3.3.2
2025-02-27 16:25:18,851:INFO:Initializing setup()
2025-02-27 16:25:18,851:INFO:self.USI: 8198
2025-02-27 16:25:18,851:INFO:self._variable_keys: {'n_jobs_param', 'data', 'logging_param', 'fold_generator', 'USI', 'X_test', '_available_plots', 'memory', 'y_test', 'X', 'exp_id', 'fold_groups_param', 'gpu_param', 'fold_shuffle_param', 'pipeline', 'idx', 'target_param', 'y', 'is_multiclass', '_ml_usecase', 'y_train', 'X_train', 'seed', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'html_param', 'fix_imbalance'}
2025-02-27 16:25:18,851:INFO:Checking environment
2025-02-27 16:25:18,851:INFO:python_version: 3.11.11
2025-02-27 16:25:18,851:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-27 16:25:18,851:INFO:machine: AMD64
2025-02-27 16:25:18,851:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-27 16:25:18,851:INFO:Memory: svmem(total=16855433216, available=6491774976, percent=61.5, used=10363658240, free=6491774976)
2025-02-27 16:25:18,851:INFO:Physical Core: 10
2025-02-27 16:25:18,851:INFO:Logical Core: 16
2025-02-27 16:25:18,851:INFO:Checking libraries
2025-02-27 16:25:18,851:INFO:System:
2025-02-27 16:25:18,851:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-27 16:25:18,851:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-27 16:25:18,851:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-27 16:25:18,851:INFO:PyCaret required dependencies:
2025-02-27 16:25:18,851:INFO:                 pip: 25.0
2025-02-27 16:25:18,851:INFO:          setuptools: 75.8.2
2025-02-27 16:25:18,851:INFO:             pycaret: 3.3.2
2025-02-27 16:25:18,851:INFO:             IPython: 8.32.0
2025-02-27 16:25:18,851:INFO:          ipywidgets: 8.1.5
2025-02-27 16:25:18,851:INFO:                tqdm: 4.67.1
2025-02-27 16:25:18,851:INFO:               numpy: 1.26.4
2025-02-27 16:25:18,851:INFO:              pandas: 1.5.3
2025-02-27 16:25:18,851:INFO:              jinja2: 3.1.5
2025-02-27 16:25:18,851:INFO:               scipy: 1.11.4
2025-02-27 16:25:18,851:INFO:              joblib: 1.3.2
2025-02-27 16:25:18,851:INFO:             sklearn: 1.4.2
2025-02-27 16:25:18,851:INFO:                pyod: 2.0.3
2025-02-27 16:25:18,851:INFO:            imblearn: 0.13.0
2025-02-27 16:25:18,851:INFO:   category_encoders: 2.7.0
2025-02-27 16:25:18,857:INFO:            lightgbm: 4.6.0
2025-02-27 16:25:18,857:INFO:               numba: 0.61.0
2025-02-27 16:25:18,857:INFO:            requests: 2.32.3
2025-02-27 16:25:18,857:INFO:          matplotlib: 3.7.5
2025-02-27 16:25:18,857:INFO:          scikitplot: 0.3.7
2025-02-27 16:25:18,857:INFO:         yellowbrick: 1.5
2025-02-27 16:25:18,857:INFO:              plotly: 5.24.1
2025-02-27 16:25:18,857:INFO:    plotly-resampler: Not installed
2025-02-27 16:25:18,857:INFO:             kaleido: 0.2.1
2025-02-27 16:25:18,857:INFO:           schemdraw: 0.15
2025-02-27 16:25:18,857:INFO:         statsmodels: 0.14.4
2025-02-27 16:25:18,857:INFO:              sktime: 0.26.0
2025-02-27 16:25:18,857:INFO:               tbats: 1.1.3
2025-02-27 16:25:18,857:INFO:            pmdarima: 2.0.4
2025-02-27 16:25:18,859:INFO:              psutil: 7.0.0
2025-02-27 16:25:18,859:INFO:          markupsafe: 3.0.2
2025-02-27 16:25:18,859:INFO:             pickle5: Not installed
2025-02-27 16:25:18,859:INFO:         cloudpickle: 3.1.1
2025-02-27 16:25:18,859:INFO:         deprecation: 2.1.0
2025-02-27 16:25:18,859:INFO:              xxhash: 3.5.0
2025-02-27 16:25:18,859:INFO:           wurlitzer: Not installed
2025-02-27 16:25:18,859:INFO:PyCaret optional dependencies:
2025-02-27 16:25:18,859:INFO:                shap: Not installed
2025-02-27 16:25:18,859:INFO:           interpret: Not installed
2025-02-27 16:25:18,859:INFO:                umap: Not installed
2025-02-27 16:25:18,859:INFO:     ydata_profiling: Not installed
2025-02-27 16:25:18,859:INFO:  explainerdashboard: Not installed
2025-02-27 16:25:18,859:INFO:             autoviz: Not installed
2025-02-27 16:25:18,859:INFO:           fairlearn: Not installed
2025-02-27 16:25:18,859:INFO:          deepchecks: Not installed
2025-02-27 16:25:18,859:INFO:             xgboost: Not installed
2025-02-27 16:25:18,859:INFO:            catboost: 1.2.3
2025-02-27 16:25:18,859:INFO:              kmodes: Not installed
2025-02-27 16:25:18,859:INFO:             mlxtend: Not installed
2025-02-27 16:25:18,859:INFO:       statsforecast: Not installed
2025-02-27 16:25:18,859:INFO:        tune_sklearn: Not installed
2025-02-27 16:25:18,859:INFO:                 ray: Not installed
2025-02-27 16:25:18,859:INFO:            hyperopt: Not installed
2025-02-27 16:25:18,859:INFO:              optuna: Not installed
2025-02-27 16:25:18,863:INFO:               skopt: Not installed
2025-02-27 16:25:18,863:INFO:              mlflow: 2.20.2
2025-02-27 16:25:18,864:INFO:              gradio: Not installed
2025-02-27 16:25:18,864:INFO:             fastapi: Not installed
2025-02-27 16:25:18,864:INFO:             uvicorn: Not installed
2025-02-27 16:25:18,864:INFO:              m2cgen: Not installed
2025-02-27 16:25:18,864:INFO:           evidently: Not installed
2025-02-27 16:25:18,864:INFO:               fugue: Not installed
2025-02-27 16:25:18,864:INFO:           streamlit: 1.42.2
2025-02-27 16:25:18,864:INFO:             prophet: Not installed
2025-02-27 16:25:18,864:INFO:None
2025-02-27 16:25:18,864:INFO:Set up data.
2025-02-27 16:25:18,878:INFO:Set up folding strategy.
2025-02-27 16:25:18,878:INFO:Set up train/test split.
2025-02-27 16:25:18,891:INFO:Set up index.
2025-02-27 16:25:18,891:INFO:Assigning column types.
2025-02-27 16:25:18,903:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:25:19,162:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:25:19,164:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:25:19,316:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:25:19,316:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:25:19,574:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:25:19,579:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:25:19,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:25:19,735:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:25:19,739:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:25:20,003:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:25:20,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:25:20,165:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:25:20,420:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:25:20,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:25:20,553:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:25:20,553:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 16:25:20,957:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:25:20,957:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:25:21,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:25:21,356:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:25:21,362:INFO:Preparing preprocessing pipeline...
2025-02-27 16:25:21,364:INFO:Set up label encoding.
2025-02-27 16:25:21,364:INFO:Set up simple imputation.
2025-02-27 16:25:21,364:INFO:Set up binning of numerical features.
2025-02-27 16:25:21,364:INFO:Set up feature normalization.
2025-02-27 16:25:21,369:INFO:Set up feature selection.
2025-02-27 16:25:21,771:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:25:21,771:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:25:21,935:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:25:21,982:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:25:21,982:INFO:Creating final display dataframe.
2025-02-27 16:25:22,444:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target                 Type
2                   Target type           Multiclass
3                Target mapping     1: 0, 2: 1, 3: 2
4           Original data shape             (199, 8)
5        Transformed data shape             (199, 2)
6   Transformed train set shape             (139, 2)
7    Transformed test set shape              (60, 2)
8              Numeric features                    7
9                    Preprocess                 True
10              Imputation type               simple
11           Numeric imputation                 mean
12       Categorical imputation                 mode
13                    Normalize                 True
14             Normalize method               zscore
15            Feature selection                 True
16     Feature selection method              classic
17  Feature selection estimator             lightgbm
18  Number of features selected                  0.2
19               Fold Generator      StratifiedKFold
20                  Fold Number                   10
21                     CPU Jobs                   -1
22                      Use GPU                False
23               Log Experiment         MlflowLogger
24              Experiment Name  wheatclassification
25                          USI                 8198
2025-02-27 16:25:22,918:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:25:22,920:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:25:23,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:25:23,346:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:25:23,352:INFO:Logging experiment in loggers
2025-02-27 16:25:23,855:INFO:SubProcess save_model() called ==================================
2025-02-27 16:25:23,955:INFO:Initializing save_model()
2025-02-27 16:25:23,955:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), model_name=C:\Users\JUPYTE~1\AppData\Local\Temp\tmpdwku4b_k\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 16:25:23,955:INFO:Adding model into prep_pipe
2025-02-27 16:25:23,955:WARNING:Only Model saved as it was a pipeline.
2025-02-27 16:25:23,986:INFO:C:\Users\JUPYTE~1\AppData\Local\Temp\tmpdwku4b_k\Transformation Pipeline.pkl saved in current working directory
2025-02-27 16:25:24,036:INFO:Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:25:24,036:INFO:save_model() successfully completed......................................
2025-02-27 16:25:24,343:INFO:SubProcess save_model() end ==================================
2025-02-27 16:35:32,026:INFO:PyCaret ClassificationExperiment
2025-02-27 16:35:32,028:INFO:Logging name: wheatclassification
2025-02-27 16:35:32,028:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 16:35:32,029:INFO:version 3.3.2
2025-02-27 16:35:32,029:INFO:Initializing setup()
2025-02-27 16:35:32,029:INFO:self.USI: b95a
2025-02-27 16:35:32,029:INFO:self._variable_keys: {'n_jobs_param', 'data', 'logging_param', 'fold_generator', 'USI', 'X_test', '_available_plots', 'memory', 'y_test', 'X', 'exp_id', 'fold_groups_param', 'gpu_param', 'fold_shuffle_param', 'pipeline', 'idx', 'target_param', 'y', 'is_multiclass', '_ml_usecase', 'y_train', 'X_train', 'seed', 'exp_name_log', 'log_plots_param', 'gpu_n_jobs_param', 'html_param', 'fix_imbalance'}
2025-02-27 16:35:32,029:INFO:Checking environment
2025-02-27 16:35:32,029:INFO:python_version: 3.11.11
2025-02-27 16:35:32,029:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-27 16:35:32,029:INFO:machine: AMD64
2025-02-27 16:35:32,029:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-27 16:35:32,029:INFO:Memory: svmem(total=16855433216, available=7251132416, percent=57.0, used=9604300800, free=7251132416)
2025-02-27 16:35:32,029:INFO:Physical Core: 10
2025-02-27 16:35:32,029:INFO:Logical Core: 16
2025-02-27 16:35:32,030:INFO:Checking libraries
2025-02-27 16:35:32,030:INFO:System:
2025-02-27 16:35:32,030:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-27 16:35:32,030:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-27 16:35:32,030:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-27 16:35:32,030:INFO:PyCaret required dependencies:
2025-02-27 16:35:32,030:INFO:                 pip: 25.0
2025-02-27 16:35:32,030:INFO:          setuptools: 75.8.2
2025-02-27 16:35:32,030:INFO:             pycaret: 3.3.2
2025-02-27 16:35:32,030:INFO:             IPython: 8.32.0
2025-02-27 16:35:32,030:INFO:          ipywidgets: 8.1.5
2025-02-27 16:35:32,030:INFO:                tqdm: 4.67.1
2025-02-27 16:35:32,030:INFO:               numpy: 1.26.4
2025-02-27 16:35:32,030:INFO:              pandas: 1.5.3
2025-02-27 16:35:32,030:INFO:              jinja2: 3.1.5
2025-02-27 16:35:32,030:INFO:               scipy: 1.11.4
2025-02-27 16:35:32,030:INFO:              joblib: 1.3.2
2025-02-27 16:35:32,030:INFO:             sklearn: 1.4.2
2025-02-27 16:35:32,030:INFO:                pyod: 2.0.3
2025-02-27 16:35:32,030:INFO:            imblearn: 0.13.0
2025-02-27 16:35:32,030:INFO:   category_encoders: 2.7.0
2025-02-27 16:35:32,030:INFO:            lightgbm: 4.6.0
2025-02-27 16:35:32,030:INFO:               numba: 0.61.0
2025-02-27 16:35:32,030:INFO:            requests: 2.32.3
2025-02-27 16:35:32,030:INFO:          matplotlib: 3.7.5
2025-02-27 16:35:32,030:INFO:          scikitplot: 0.3.7
2025-02-27 16:35:32,030:INFO:         yellowbrick: 1.5
2025-02-27 16:35:32,030:INFO:              plotly: 5.24.1
2025-02-27 16:35:32,030:INFO:    plotly-resampler: Not installed
2025-02-27 16:35:32,030:INFO:             kaleido: 0.2.1
2025-02-27 16:35:32,030:INFO:           schemdraw: 0.15
2025-02-27 16:35:32,030:INFO:         statsmodels: 0.14.4
2025-02-27 16:35:32,030:INFO:              sktime: 0.26.0
2025-02-27 16:35:32,030:INFO:               tbats: 1.1.3
2025-02-27 16:35:32,030:INFO:            pmdarima: 2.0.4
2025-02-27 16:35:32,030:INFO:              psutil: 7.0.0
2025-02-27 16:35:32,030:INFO:          markupsafe: 3.0.2
2025-02-27 16:35:32,030:INFO:             pickle5: Not installed
2025-02-27 16:35:32,030:INFO:         cloudpickle: 3.1.1
2025-02-27 16:35:32,030:INFO:         deprecation: 2.1.0
2025-02-27 16:35:32,030:INFO:              xxhash: 3.5.0
2025-02-27 16:35:32,030:INFO:           wurlitzer: Not installed
2025-02-27 16:35:32,030:INFO:PyCaret optional dependencies:
2025-02-27 16:35:32,030:INFO:                shap: Not installed
2025-02-27 16:35:32,030:INFO:           interpret: Not installed
2025-02-27 16:35:32,030:INFO:                umap: Not installed
2025-02-27 16:35:32,030:INFO:     ydata_profiling: Not installed
2025-02-27 16:35:32,030:INFO:  explainerdashboard: Not installed
2025-02-27 16:35:32,030:INFO:             autoviz: Not installed
2025-02-27 16:35:32,030:INFO:           fairlearn: Not installed
2025-02-27 16:35:32,030:INFO:          deepchecks: Not installed
2025-02-27 16:35:32,030:INFO:             xgboost: Not installed
2025-02-27 16:35:32,030:INFO:            catboost: 1.2.3
2025-02-27 16:35:32,030:INFO:              kmodes: Not installed
2025-02-27 16:35:32,030:INFO:             mlxtend: Not installed
2025-02-27 16:35:32,030:INFO:       statsforecast: Not installed
2025-02-27 16:35:32,030:INFO:        tune_sklearn: Not installed
2025-02-27 16:35:32,030:INFO:                 ray: Not installed
2025-02-27 16:35:32,030:INFO:            hyperopt: Not installed
2025-02-27 16:35:32,030:INFO:              optuna: Not installed
2025-02-27 16:35:32,030:INFO:               skopt: Not installed
2025-02-27 16:35:32,030:INFO:              mlflow: 2.20.2
2025-02-27 16:35:32,030:INFO:              gradio: Not installed
2025-02-27 16:35:32,030:INFO:             fastapi: Not installed
2025-02-27 16:35:32,030:INFO:             uvicorn: Not installed
2025-02-27 16:35:32,030:INFO:              m2cgen: Not installed
2025-02-27 16:35:32,030:INFO:           evidently: Not installed
2025-02-27 16:35:32,030:INFO:               fugue: Not installed
2025-02-27 16:35:32,030:INFO:           streamlit: 1.42.2
2025-02-27 16:35:32,030:INFO:             prophet: Not installed
2025-02-27 16:35:32,030:INFO:None
2025-02-27 16:35:32,030:INFO:Set up data.
2025-02-27 16:35:32,043:INFO:Set up folding strategy.
2025-02-27 16:35:32,043:INFO:Set up train/test split.
2025-02-27 16:35:32,045:INFO:Set up index.
2025-02-27 16:35:32,045:INFO:Assigning column types.
2025-02-27 16:35:32,051:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:35:32,203:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:35:32,206:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:35:32,341:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:35:32,343:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:35:32,517:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:35:32,518:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:35:32,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:35:32,636:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:35:32,638:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:35:32,845:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:35:32,945:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:35:32,945:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:35:33,024:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:35:33,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:35:33,071:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:35:33,074:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 16:35:33,334:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:35:33,336:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:35:33,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:35:33,549:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:35:33,549:INFO:Preparing preprocessing pipeline...
2025-02-27 16:35:33,549:INFO:Set up label encoding.
2025-02-27 16:35:33,549:INFO:Set up simple imputation.
2025-02-27 16:35:33,549:INFO:Set up binning of numerical features.
2025-02-27 16:35:33,549:INFO:Set up feature normalization.
2025-02-27 16:35:33,549:INFO:Set up feature selection.
2025-02-27 16:35:33,762:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:35:33,762:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:35:33,908:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:35:33,948:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:35:33,948:INFO:Creating final display dataframe.
2025-02-27 16:35:34,070:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target                 Type
2                   Target type           Multiclass
3                Target mapping     1: 0, 2: 1, 3: 2
4           Original data shape             (199, 8)
5        Transformed data shape             (199, 2)
6   Transformed train set shape             (139, 2)
7    Transformed test set shape              (60, 2)
8              Numeric features                    7
9                    Preprocess                 True
10              Imputation type               simple
11           Numeric imputation                 mean
12       Categorical imputation                 mode
13                    Normalize                 True
14             Normalize method               zscore
15            Feature selection                 True
16     Feature selection method              classic
17  Feature selection estimator             lightgbm
18  Number of features selected                  0.2
19               Fold Generator      StratifiedKFold
20                  Fold Number                   10
21                     CPU Jobs                   -1
22                      Use GPU                False
23               Log Experiment         MlflowLogger
24              Experiment Name  wheatclassification
25                          USI                 b95a
2025-02-27 16:35:34,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:35:34,238:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:35:34,620:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:35:34,622:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:35:34,626:INFO:Logging experiment in loggers
2025-02-27 16:35:34,946:INFO:SubProcess save_model() called ==================================
2025-02-27 16:35:35,045:INFO:Initializing save_model()
2025-02-27 16:35:35,045:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), model_name=C:\Users\JUPYTE~1\AppData\Local\Temp\tmpttl4l0ae\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 16:35:35,045:INFO:Adding model into prep_pipe
2025-02-27 16:35:35,045:WARNING:Only Model saved as it was a pipeline.
2025-02-27 16:35:35,075:INFO:C:\Users\JUPYTE~1\AppData\Local\Temp\tmpttl4l0ae\Transformation Pipeline.pkl saved in current working directory
2025-02-27 16:35:35,148:INFO:Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:35:35,148:INFO:save_model() successfully completed......................................
2025-02-27 16:35:35,510:INFO:SubProcess save_model() end ==================================
2025-02-27 16:35:35,579:INFO:setup() successfully completed in 2.65s...............
2025-02-27 16:35:38,311:INFO:Initializing compare_models()
2025-02-27 16:35:38,311:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-02-27 16:35:38,311:INFO:Checking exceptions
2025-02-27 16:35:38,318:INFO:Preparing display monitor
2025-02-27 16:35:38,381:INFO:Initializing Logistic Regression
2025-02-27 16:35:38,381:INFO:Total runtime is 0.0 minutes
2025-02-27 16:35:38,389:INFO:SubProcess create_model() called ==================================
2025-02-27 16:35:38,390:INFO:Initializing create_model()
2025-02-27 16:35:38,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:35:38,390:INFO:Checking exceptions
2025-02-27 16:35:38,390:INFO:Importing libraries
2025-02-27 16:35:38,390:INFO:Copying training dataset
2025-02-27 16:35:38,400:INFO:Defining folds
2025-02-27 16:35:38,400:INFO:Declaring metric variables
2025-02-27 16:35:38,407:INFO:Importing untrained model
2025-02-27 16:35:38,413:INFO:Logistic Regression Imported successfully
2025-02-27 16:35:38,426:INFO:Starting cross validation
2025-02-27 16:35:38,450:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:35:44,129:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:44,134:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:44,145:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:44,224:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:44,238:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:44,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:44,261:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:44,272:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:44,274:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:44,278:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:45,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,321:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,328:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,331:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,341:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,341:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,342:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,347:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,347:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,347:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,352:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,352:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,354:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,356:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,358:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,359:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,370:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,392:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,399:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,409:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,518:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,522:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,526:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,529:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,537:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,537:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,543:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,543:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,547:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,547:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,553:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,558:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:45,561:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,564:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,564:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:45,579:INFO:Calculating mean and std
2025-02-27 16:35:45,579:INFO:Creating metrics dataframe
2025-02-27 16:35:45,592:INFO:Uploading results into container
2025-02-27 16:35:45,594:INFO:Uploading model into container now
2025-02-27 16:35:45,595:INFO:_master_model_container: 1
2025-02-27 16:35:45,595:INFO:_display_container: 2
2025-02-27 16:35:45,596:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-27 16:35:45,596:INFO:create_model() successfully completed......................................
2025-02-27 16:35:45,925:INFO:SubProcess create_model() end ==================================
2025-02-27 16:35:45,925:INFO:Creating metrics dataframe
2025-02-27 16:35:45,951:INFO:Initializing K Neighbors Classifier
2025-02-27 16:35:45,951:INFO:Total runtime is 0.12616830269495646 minutes
2025-02-27 16:35:45,963:INFO:SubProcess create_model() called ==================================
2025-02-27 16:35:45,967:INFO:Initializing create_model()
2025-02-27 16:35:45,968:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:35:45,968:INFO:Checking exceptions
2025-02-27 16:35:45,969:INFO:Importing libraries
2025-02-27 16:35:45,969:INFO:Copying training dataset
2025-02-27 16:35:45,982:INFO:Defining folds
2025-02-27 16:35:45,983:INFO:Declaring metric variables
2025-02-27 16:35:45,991:INFO:Importing untrained model
2025-02-27 16:35:46,002:INFO:K Neighbors Classifier Imported successfully
2025-02-27 16:35:46,017:INFO:Starting cross validation
2025-02-27 16:35:46,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:35:46,124:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:46,134:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:46,138:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:46,142:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:48,505:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,514:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,586:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,594:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,601:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,774:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,780:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,788:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,788:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,797:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:48,801:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:52,426:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:52,426:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:52,453:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:52,506:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:52,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:52,606:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:53,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,368:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,373:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,379:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,435:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,443:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,451:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,518:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,533:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,575:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,582:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,633:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,640:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,648:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:53,670:INFO:Calculating mean and std
2025-02-27 16:35:53,672:INFO:Creating metrics dataframe
2025-02-27 16:35:53,679:INFO:Uploading results into container
2025-02-27 16:35:53,681:INFO:Uploading model into container now
2025-02-27 16:35:53,681:INFO:_master_model_container: 2
2025-02-27 16:35:53,683:INFO:_display_container: 2
2025-02-27 16:35:53,683:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-27 16:35:53,683:INFO:create_model() successfully completed......................................
2025-02-27 16:35:54,044:INFO:SubProcess create_model() end ==================================
2025-02-27 16:35:54,044:INFO:Creating metrics dataframe
2025-02-27 16:35:54,077:INFO:Initializing Naive Bayes
2025-02-27 16:35:54,077:INFO:Total runtime is 0.261595877011617 minutes
2025-02-27 16:35:54,090:INFO:SubProcess create_model() called ==================================
2025-02-27 16:35:54,090:INFO:Initializing create_model()
2025-02-27 16:35:54,091:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:35:54,091:INFO:Checking exceptions
2025-02-27 16:35:54,091:INFO:Importing libraries
2025-02-27 16:35:54,092:INFO:Copying training dataset
2025-02-27 16:35:54,108:INFO:Defining folds
2025-02-27 16:35:54,108:INFO:Declaring metric variables
2025-02-27 16:35:54,120:INFO:Importing untrained model
2025-02-27 16:35:54,128:INFO:Naive Bayes Imported successfully
2025-02-27 16:35:54,150:INFO:Starting cross validation
2025-02-27 16:35:54,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:35:54,228:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:54,245:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:54,259:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:54,266:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:54,284:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:54,287:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:54,291:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:54,296:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:54,303:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:54,315:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:55,229:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,235:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,239:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,245:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,252:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,257:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,264:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,271:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,275:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,301:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,304:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,308:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,342:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,347:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,353:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,391:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,395:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,411:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,422:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,441:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,446:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,452:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,490:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,494:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,499:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:55,517:INFO:Calculating mean and std
2025-02-27 16:35:55,522:INFO:Creating metrics dataframe
2025-02-27 16:35:55,531:INFO:Uploading results into container
2025-02-27 16:35:55,531:INFO:Uploading model into container now
2025-02-27 16:35:55,531:INFO:_master_model_container: 3
2025-02-27 16:35:55,531:INFO:_display_container: 2
2025-02-27 16:35:55,531:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:35:55,531:INFO:create_model() successfully completed......................................
2025-02-27 16:35:55,810:INFO:SubProcess create_model() end ==================================
2025-02-27 16:35:55,810:INFO:Creating metrics dataframe
2025-02-27 16:35:55,842:INFO:Initializing Decision Tree Classifier
2025-02-27 16:35:55,849:INFO:Total runtime is 0.2911344885826111 minutes
2025-02-27 16:35:55,855:INFO:SubProcess create_model() called ==================================
2025-02-27 16:35:55,860:INFO:Initializing create_model()
2025-02-27 16:35:55,860:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:35:55,860:INFO:Checking exceptions
2025-02-27 16:35:55,860:INFO:Importing libraries
2025-02-27 16:35:55,860:INFO:Copying training dataset
2025-02-27 16:35:55,867:INFO:Defining folds
2025-02-27 16:35:55,867:INFO:Declaring metric variables
2025-02-27 16:35:55,877:INFO:Importing untrained model
2025-02-27 16:35:55,883:INFO:Decision Tree Classifier Imported successfully
2025-02-27 16:35:55,894:INFO:Starting cross validation
2025-02-27 16:35:55,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:35:55,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:55,976:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:55,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:56,002:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:56,008:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:56,016:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:56,022:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:56,027:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:56,034:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,134:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,141:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,147:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,152:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,157:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,164:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,189:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,192:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,194:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,199:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,201:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,205:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,293:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,303:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,316:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,323:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,327:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,332:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,338:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,351:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,356:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,372:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,379:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,384:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,393:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,398:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:57,414:INFO:Calculating mean and std
2025-02-27 16:35:57,414:INFO:Creating metrics dataframe
2025-02-27 16:35:57,420:INFO:Uploading results into container
2025-02-27 16:35:57,425:INFO:Uploading model into container now
2025-02-27 16:35:57,425:INFO:_master_model_container: 4
2025-02-27 16:35:57,425:INFO:_display_container: 2
2025-02-27 16:35:57,425:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-02-27 16:35:57,425:INFO:create_model() successfully completed......................................
2025-02-27 16:35:57,705:INFO:SubProcess create_model() end ==================================
2025-02-27 16:35:57,705:INFO:Creating metrics dataframe
2025-02-27 16:35:57,739:INFO:Initializing SVM - Linear Kernel
2025-02-27 16:35:57,740:INFO:Total runtime is 0.32264856894810995 minutes
2025-02-27 16:35:57,751:INFO:SubProcess create_model() called ==================================
2025-02-27 16:35:57,751:INFO:Initializing create_model()
2025-02-27 16:35:57,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:35:57,753:INFO:Checking exceptions
2025-02-27 16:35:57,753:INFO:Importing libraries
2025-02-27 16:35:57,753:INFO:Copying training dataset
2025-02-27 16:35:57,759:INFO:Defining folds
2025-02-27 16:35:57,759:INFO:Declaring metric variables
2025-02-27 16:35:57,777:INFO:Importing untrained model
2025-02-27 16:35:57,818:INFO:SVM - Linear Kernel Imported successfully
2025-02-27 16:35:57,838:INFO:Starting cross validation
2025-02-27 16:35:57,862:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:35:57,911:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,915:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,917:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,928:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,933:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,954:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,957:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,964:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,967:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:57,971:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:58,974:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:58,978:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:58,981:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:58,983:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:58,985:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:58,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:35:58,991:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:58,993:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:35:58,995:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:58,997:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,013:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:59,017:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,023:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,025:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:35:59,032:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,038:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:59,042:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,050:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,052:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:35:59,056:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,058:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:59,062:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,064:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:59,068:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,068:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,071:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,074:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,076:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:59,078:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,078:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,084:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,090:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,101:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:59,105:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,112:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,114:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:35:59,116:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,130:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:59,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,138:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,144:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,196:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:35:59,201:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,210:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,212:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:35:59,214:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:35:59,241:INFO:Calculating mean and std
2025-02-27 16:35:59,244:INFO:Creating metrics dataframe
2025-02-27 16:35:59,244:INFO:Uploading results into container
2025-02-27 16:35:59,256:INFO:Uploading model into container now
2025-02-27 16:35:59,258:INFO:_master_model_container: 5
2025-02-27 16:35:59,258:INFO:_display_container: 2
2025-02-27 16:35:59,260:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-27 16:35:59,260:INFO:create_model() successfully completed......................................
2025-02-27 16:35:59,479:INFO:SubProcess create_model() end ==================================
2025-02-27 16:35:59,479:INFO:Creating metrics dataframe
2025-02-27 16:35:59,497:INFO:Initializing Ridge Classifier
2025-02-27 16:35:59,497:INFO:Total runtime is 0.3519372701644897 minutes
2025-02-27 16:35:59,504:INFO:SubProcess create_model() called ==================================
2025-02-27 16:35:59,504:INFO:Initializing create_model()
2025-02-27 16:35:59,504:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:35:59,504:INFO:Checking exceptions
2025-02-27 16:35:59,504:INFO:Importing libraries
2025-02-27 16:35:59,504:INFO:Copying training dataset
2025-02-27 16:35:59,510:INFO:Defining folds
2025-02-27 16:35:59,510:INFO:Declaring metric variables
2025-02-27 16:35:59,518:INFO:Importing untrained model
2025-02-27 16:35:59,524:INFO:Ridge Classifier Imported successfully
2025-02-27 16:35:59,537:INFO:Starting cross validation
2025-02-27 16:35:59,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:35:59,599:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:59,601:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:59,603:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:59,615:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:59,617:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:59,621:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:59,629:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:59,634:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:59,636:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:35:59,647:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:00,767:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,771:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,777:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,780:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:00,789:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,791:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,796:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,802:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,806:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,809:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,813:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,817:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:00,819:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:00,821:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,823:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,828:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,833:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,839:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,849:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,867:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,872:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,878:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,881:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:00,884:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,888:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,891:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,897:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,902:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,905:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,909:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,914:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,918:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:00,921:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,964:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,969:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,974:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,976:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:00,980:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,981:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,985:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,992:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,993:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:00,995:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:00,997:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:01,001:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:01,006:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:01,024:INFO:Calculating mean and std
2025-02-27 16:36:01,026:INFO:Creating metrics dataframe
2025-02-27 16:36:01,033:INFO:Uploading results into container
2025-02-27 16:36:01,035:INFO:Uploading model into container now
2025-02-27 16:36:01,035:INFO:_master_model_container: 6
2025-02-27 16:36:01,035:INFO:_display_container: 2
2025-02-27 16:36:01,037:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-02-27 16:36:01,037:INFO:create_model() successfully completed......................................
2025-02-27 16:36:01,309:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:01,309:INFO:Creating metrics dataframe
2025-02-27 16:36:01,354:INFO:Initializing Random Forest Classifier
2025-02-27 16:36:01,357:INFO:Total runtime is 0.38293201923370357 minutes
2025-02-27 16:36:01,367:INFO:SubProcess create_model() called ==================================
2025-02-27 16:36:01,367:INFO:Initializing create_model()
2025-02-27 16:36:01,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:01,367:INFO:Checking exceptions
2025-02-27 16:36:01,367:INFO:Importing libraries
2025-02-27 16:36:01,367:INFO:Copying training dataset
2025-02-27 16:36:01,378:INFO:Defining folds
2025-02-27 16:36:01,380:INFO:Declaring metric variables
2025-02-27 16:36:01,389:INFO:Importing untrained model
2025-02-27 16:36:01,397:INFO:Random Forest Classifier Imported successfully
2025-02-27 16:36:01,415:INFO:Starting cross validation
2025-02-27 16:36:01,434:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:36:01,484:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:01,488:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:01,490:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:01,502:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:01,506:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:01,520:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:01,540:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:01,540:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:01,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:01,550:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:02,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:02,981:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:02,986:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,027:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,028:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,039:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,039:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,045:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,052:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,058:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,084:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,091:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,098:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,142:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,148:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,148:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,154:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,154:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,159:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,264:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,264:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,270:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,276:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,283:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,291:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:03,312:INFO:Calculating mean and std
2025-02-27 16:36:03,316:INFO:Creating metrics dataframe
2025-02-27 16:36:03,327:INFO:Uploading results into container
2025-02-27 16:36:03,327:INFO:Uploading model into container now
2025-02-27 16:36:03,327:INFO:_master_model_container: 7
2025-02-27 16:36:03,327:INFO:_display_container: 2
2025-02-27 16:36:03,327:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 16:36:03,327:INFO:create_model() successfully completed......................................
2025-02-27 16:36:03,613:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:03,613:INFO:Creating metrics dataframe
2025-02-27 16:36:03,641:INFO:Initializing Quadratic Discriminant Analysis
2025-02-27 16:36:03,646:INFO:Total runtime is 0.4210753639539082 minutes
2025-02-27 16:36:03,651:INFO:SubProcess create_model() called ==================================
2025-02-27 16:36:03,654:INFO:Initializing create_model()
2025-02-27 16:36:03,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:03,655:INFO:Checking exceptions
2025-02-27 16:36:03,655:INFO:Importing libraries
2025-02-27 16:36:03,655:INFO:Copying training dataset
2025-02-27 16:36:03,661:INFO:Defining folds
2025-02-27 16:36:03,661:INFO:Declaring metric variables
2025-02-27 16:36:03,674:INFO:Importing untrained model
2025-02-27 16:36:03,682:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-27 16:36:03,698:INFO:Starting cross validation
2025-02-27 16:36:03,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:36:03,773:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:03,770:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:03,773:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:03,786:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:03,790:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:03,792:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:03,806:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:03,808:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:03,810:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:03,823:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:04,831:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:04,835:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:04,840:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,840:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,851:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,853:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,865:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:04,867:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,874:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,879:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,898:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:04,902:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,906:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,911:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:04,913:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,915:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,922:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,927:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:04,927:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,929:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,935:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,941:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,951:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:04,955:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,963:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,968:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,979:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:04,981:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,986:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:04,992:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:05,017:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:05,019:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:05,023:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:05,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:05,036:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:05,038:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:05,043:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:05,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:05,064:INFO:Calculating mean and std
2025-02-27 16:36:05,066:INFO:Creating metrics dataframe
2025-02-27 16:36:05,074:INFO:Uploading results into container
2025-02-27 16:36:05,076:INFO:Uploading model into container now
2025-02-27 16:36:05,076:INFO:_master_model_container: 8
2025-02-27 16:36:05,076:INFO:_display_container: 2
2025-02-27 16:36:05,077:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-27 16:36:05,077:INFO:create_model() successfully completed......................................
2025-02-27 16:36:05,336:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:05,336:INFO:Creating metrics dataframe
2025-02-27 16:36:05,372:INFO:Initializing Ada Boost Classifier
2025-02-27 16:36:05,372:INFO:Total runtime is 0.44984137614568065 minutes
2025-02-27 16:36:05,381:INFO:SubProcess create_model() called ==================================
2025-02-27 16:36:05,383:INFO:Initializing create_model()
2025-02-27 16:36:05,383:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:05,383:INFO:Checking exceptions
2025-02-27 16:36:05,383:INFO:Importing libraries
2025-02-27 16:36:05,383:INFO:Copying training dataset
2025-02-27 16:36:05,390:INFO:Defining folds
2025-02-27 16:36:05,391:INFO:Declaring metric variables
2025-02-27 16:36:05,393:INFO:Importing untrained model
2025-02-27 16:36:05,406:INFO:Ada Boost Classifier Imported successfully
2025-02-27 16:36:05,418:INFO:Starting cross validation
2025-02-27 16:36:05,436:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:36:05,493:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:05,495:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:05,497:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:05,509:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:05,511:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:05,527:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:05,529:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:05,542:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:05,543:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:05,547:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:06,435:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:06,435:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:06,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:06,481:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:06,501:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:06,561:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:06,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:06,676:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,680:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:06,682:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,683:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,689:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,689:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,696:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:06,741:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,745:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:06,747:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,754:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,758:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,760:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:06,760:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,764:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,767:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,769:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,775:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,779:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:06,808:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:06,815:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:06,818:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,825:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,827:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:06,830:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:06,867:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:36:07,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:07,031:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,031:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:07,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,038:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,038:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,040:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,059:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:07,061:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,065:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,067:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,139:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:07,143:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,151:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,160:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:07,178:INFO:Calculating mean and std
2025-02-27 16:36:07,182:INFO:Creating metrics dataframe
2025-02-27 16:36:07,184:INFO:Uploading results into container
2025-02-27 16:36:07,195:INFO:Uploading model into container now
2025-02-27 16:36:07,195:INFO:_master_model_container: 9
2025-02-27 16:36:07,195:INFO:_display_container: 2
2025-02-27 16:36:07,197:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-27 16:36:07,198:INFO:create_model() successfully completed......................................
2025-02-27 16:36:07,468:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:07,468:INFO:Creating metrics dataframe
2025-02-27 16:36:07,512:INFO:Initializing Gradient Boosting Classifier
2025-02-27 16:36:07,512:INFO:Total runtime is 0.48551588058471673 minutes
2025-02-27 16:36:07,520:INFO:SubProcess create_model() called ==================================
2025-02-27 16:36:07,520:INFO:Initializing create_model()
2025-02-27 16:36:07,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:07,520:INFO:Checking exceptions
2025-02-27 16:36:07,520:INFO:Importing libraries
2025-02-27 16:36:07,520:INFO:Copying training dataset
2025-02-27 16:36:07,530:INFO:Defining folds
2025-02-27 16:36:07,530:INFO:Declaring metric variables
2025-02-27 16:36:07,538:INFO:Importing untrained model
2025-02-27 16:36:07,545:INFO:Gradient Boosting Classifier Imported successfully
2025-02-27 16:36:07,560:INFO:Starting cross validation
2025-02-27 16:36:07,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:36:07,684:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:07,687:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:07,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:07,712:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:07,719:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:07,721:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:07,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:07,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:07,750:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:07,761:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:09,376:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:09,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,387:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,393:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,399:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:09,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,411:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,417:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,429:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:09,432:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,434:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:09,437:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,443:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,446:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,448:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,452:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,502:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:09,504:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,512:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,517:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,612:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:09,622:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,626:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:09,628:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,047:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:10,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:10,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,057:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,058:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,060:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,089:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:10,093:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,097:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,100:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,120:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:10,124:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,131:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,137:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:10,149:INFO:Calculating mean and std
2025-02-27 16:36:10,149:INFO:Creating metrics dataframe
2025-02-27 16:36:10,159:INFO:Uploading results into container
2025-02-27 16:36:10,159:INFO:Uploading model into container now
2025-02-27 16:36:10,159:INFO:_master_model_container: 10
2025-02-27 16:36:10,159:INFO:_display_container: 2
2025-02-27 16:36:10,159:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-27 16:36:10,159:INFO:create_model() successfully completed......................................
2025-02-27 16:36:10,415:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:10,415:INFO:Creating metrics dataframe
2025-02-27 16:36:10,463:INFO:Initializing Linear Discriminant Analysis
2025-02-27 16:36:10,463:INFO:Total runtime is 0.5346953471501668 minutes
2025-02-27 16:36:10,472:INFO:SubProcess create_model() called ==================================
2025-02-27 16:36:10,472:INFO:Initializing create_model()
2025-02-27 16:36:10,473:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:10,473:INFO:Checking exceptions
2025-02-27 16:36:10,473:INFO:Importing libraries
2025-02-27 16:36:10,473:INFO:Copying training dataset
2025-02-27 16:36:10,480:INFO:Defining folds
2025-02-27 16:36:10,480:INFO:Declaring metric variables
2025-02-27 16:36:10,487:INFO:Importing untrained model
2025-02-27 16:36:10,495:INFO:Linear Discriminant Analysis Imported successfully
2025-02-27 16:36:10,509:INFO:Starting cross validation
2025-02-27 16:36:10,529:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:36:10,577:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:10,582:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:10,587:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:10,598:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:10,604:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:10,613:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:10,615:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:10,622:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:10,633:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:11,575:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,578:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,584:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,589:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,600:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,604:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,610:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,617:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,622:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,624:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,630:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,635:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,642:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,646:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,652:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,659:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,662:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,675:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,678:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,680:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,687:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,693:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,703:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,706:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,712:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,717:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,733:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,740:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,746:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,789:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,793:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,797:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,802:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,839:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:36:11,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,845:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,851:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:11,861:INFO:Calculating mean and std
2025-02-27 16:36:11,864:INFO:Creating metrics dataframe
2025-02-27 16:36:11,870:INFO:Uploading results into container
2025-02-27 16:36:11,872:INFO:Uploading model into container now
2025-02-27 16:36:11,874:INFO:_master_model_container: 11
2025-02-27 16:36:11,874:INFO:_display_container: 2
2025-02-27 16:36:11,874:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-27 16:36:11,874:INFO:create_model() successfully completed......................................
2025-02-27 16:36:12,134:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:12,134:INFO:Creating metrics dataframe
2025-02-27 16:36:12,165:INFO:Initializing Extra Trees Classifier
2025-02-27 16:36:12,165:INFO:Total runtime is 0.5630731463432311 minutes
2025-02-27 16:36:12,181:INFO:SubProcess create_model() called ==================================
2025-02-27 16:36:12,181:INFO:Initializing create_model()
2025-02-27 16:36:12,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:12,181:INFO:Checking exceptions
2025-02-27 16:36:12,181:INFO:Importing libraries
2025-02-27 16:36:12,184:INFO:Copying training dataset
2025-02-27 16:36:12,189:INFO:Defining folds
2025-02-27 16:36:12,189:INFO:Declaring metric variables
2025-02-27 16:36:12,203:INFO:Importing untrained model
2025-02-27 16:36:12,213:INFO:Extra Trees Classifier Imported successfully
2025-02-27 16:36:12,229:INFO:Starting cross validation
2025-02-27 16:36:12,246:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:36:12,294:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:12,296:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:12,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:12,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:12,331:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:12,346:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:12,348:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:12,348:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:12,359:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:12,359:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:13,718:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,725:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,736:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,749:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,751:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,751:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,751:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,756:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,756:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,759:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,761:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,763:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,765:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,765:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,769:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,791:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,806:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,837:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,853:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,994:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:13,999:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:14,003:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:14,022:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:14,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:14,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:14,036:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:14,041:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:14,059:INFO:Calculating mean and std
2025-02-27 16:36:14,061:INFO:Creating metrics dataframe
2025-02-27 16:36:14,067:INFO:Uploading results into container
2025-02-27 16:36:14,067:INFO:Uploading model into container now
2025-02-27 16:36:14,069:INFO:_master_model_container: 12
2025-02-27 16:36:14,069:INFO:_display_container: 2
2025-02-27 16:36:14,069:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-02-27 16:36:14,069:INFO:create_model() successfully completed......................................
2025-02-27 16:36:14,272:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:14,272:INFO:Creating metrics dataframe
2025-02-27 16:36:14,304:INFO:Initializing Light Gradient Boosting Machine
2025-02-27 16:36:14,304:INFO:Total runtime is 0.5987116654713948 minutes
2025-02-27 16:36:14,323:INFO:SubProcess create_model() called ==================================
2025-02-27 16:36:14,349:INFO:Initializing create_model()
2025-02-27 16:36:14,349:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:14,349:INFO:Checking exceptions
2025-02-27 16:36:14,349:INFO:Importing libraries
2025-02-27 16:36:14,349:INFO:Copying training dataset
2025-02-27 16:36:14,355:INFO:Defining folds
2025-02-27 16:36:14,369:INFO:Declaring metric variables
2025-02-27 16:36:14,374:INFO:Importing untrained model
2025-02-27 16:36:14,385:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 16:36:14,391:INFO:Starting cross validation
2025-02-27 16:36:14,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:36:14,465:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:14,467:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:14,469:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:14,480:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:14,480:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:14,492:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:14,501:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:14,508:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:14,516:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:14,522:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:16,800:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,807:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,813:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,877:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,883:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,889:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,916:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,922:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,928:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,953:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,957:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:16,964:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,020:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,024:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,057:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,062:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,071:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,096:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,096:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,101:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,101:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,106:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,108:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,121:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,201:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,206:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,210:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:17,224:INFO:Calculating mean and std
2025-02-27 16:36:17,226:INFO:Creating metrics dataframe
2025-02-27 16:36:17,233:INFO:Uploading results into container
2025-02-27 16:36:17,235:INFO:Uploading model into container now
2025-02-27 16:36:17,236:INFO:_master_model_container: 13
2025-02-27 16:36:17,236:INFO:_display_container: 2
2025-02-27 16:36:17,237:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-27 16:36:17,237:INFO:create_model() successfully completed......................................
2025-02-27 16:36:17,470:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:17,470:INFO:Creating metrics dataframe
2025-02-27 16:36:17,503:INFO:Initializing CatBoost Classifier
2025-02-27 16:36:17,503:INFO:Total runtime is 0.6520365993181864 minutes
2025-02-27 16:36:17,518:INFO:SubProcess create_model() called ==================================
2025-02-27 16:36:17,518:INFO:Initializing create_model()
2025-02-27 16:36:17,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:17,521:INFO:Checking exceptions
2025-02-27 16:36:17,521:INFO:Importing libraries
2025-02-27 16:36:17,521:INFO:Copying training dataset
2025-02-27 16:36:17,529:INFO:Defining folds
2025-02-27 16:36:17,529:INFO:Declaring metric variables
2025-02-27 16:36:17,529:INFO:Importing untrained model
2025-02-27 16:36:17,545:INFO:CatBoost Classifier Imported successfully
2025-02-27 16:36:17,564:INFO:Starting cross validation
2025-02-27 16:36:17,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:36:18,814:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:18,826:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:18,836:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:18,839:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:18,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:18,855:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:18,879:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:18,879:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:18,907:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:18,945:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:23,239:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,246:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,262:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,412:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,440:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,442:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,446:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,448:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,452:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,452:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,454:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,460:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,470:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,496:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,501:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,508:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,520:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,526:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,532:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,643:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,651:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,658:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,660:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,661:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:23,668:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:24,656:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:24,668:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:24,683:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:24,704:INFO:Calculating mean and std
2025-02-27 16:36:24,709:INFO:Creating metrics dataframe
2025-02-27 16:36:24,730:INFO:Uploading results into container
2025-02-27 16:36:24,732:INFO:Uploading model into container now
2025-02-27 16:36:24,732:INFO:_master_model_container: 14
2025-02-27 16:36:24,732:INFO:_display_container: 2
2025-02-27 16:36:24,732:INFO:<catboost.core.CatBoostClassifier object at 0x00000129E47CF410>
2025-02-27 16:36:24,734:INFO:create_model() successfully completed......................................
2025-02-27 16:36:25,144:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:25,144:INFO:Creating metrics dataframe
2025-02-27 16:36:25,188:INFO:Initializing Dummy Classifier
2025-02-27 16:36:25,188:INFO:Total runtime is 0.780118695894877 minutes
2025-02-27 16:36:25,198:INFO:SubProcess create_model() called ==================================
2025-02-27 16:36:25,198:INFO:Initializing create_model()
2025-02-27 16:36:25,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000129E37900D0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:25,198:INFO:Checking exceptions
2025-02-27 16:36:25,198:INFO:Importing libraries
2025-02-27 16:36:25,198:INFO:Copying training dataset
2025-02-27 16:36:25,204:INFO:Defining folds
2025-02-27 16:36:25,204:INFO:Declaring metric variables
2025-02-27 16:36:25,213:INFO:Importing untrained model
2025-02-27 16:36:25,221:INFO:Dummy Classifier Imported successfully
2025-02-27 16:36:25,238:INFO:Starting cross validation
2025-02-27 16:36:25,267:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:36:25,315:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:25,318:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:25,319:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:25,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:25,335:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:25,350:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:25,367:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:25,369:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:25,376:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:25,379:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:26,277:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,282:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,284:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,289:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,300:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,304:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,309:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,324:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,332:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,334:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,356:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,363:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,370:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,390:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,398:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,407:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,407:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,411:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,418:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,423:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,425:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,425:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,429:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,431:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,434:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,437:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,496:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,503:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,505:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,508:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,508:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,513:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,516:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:36:26,518:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:26,534:INFO:Calculating mean and std
2025-02-27 16:36:26,536:INFO:Creating metrics dataframe
2025-02-27 16:36:26,543:INFO:Uploading results into container
2025-02-27 16:36:26,546:INFO:Uploading model into container now
2025-02-27 16:36:26,546:INFO:_master_model_container: 15
2025-02-27 16:36:26,547:INFO:_display_container: 2
2025-02-27 16:36:26,547:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-02-27 16:36:26,547:INFO:create_model() successfully completed......................................
2025-02-27 16:36:26,877:INFO:SubProcess create_model() end ==================================
2025-02-27 16:36:26,877:INFO:Creating metrics dataframe
2025-02-27 16:36:26,950:INFO:Initializing create_model()
2025-02-27 16:36:26,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:36:26,950:INFO:Checking exceptions
2025-02-27 16:36:26,954:INFO:Importing libraries
2025-02-27 16:36:26,954:INFO:Copying training dataset
2025-02-27 16:36:26,959:INFO:Defining folds
2025-02-27 16:36:26,959:INFO:Declaring metric variables
2025-02-27 16:36:26,959:INFO:Importing untrained model
2025-02-27 16:36:26,959:INFO:Declaring custom model
2025-02-27 16:36:26,959:INFO:Naive Bayes Imported successfully
2025-02-27 16:36:26,980:INFO:Cross validation set to False
2025-02-27 16:36:26,980:INFO:Fitting Model
2025-02-27 16:36:26,993:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:36:27,300:INFO:[LightGBM] [Info] Auto-choosing row-wise multi-threading, the overhead of testing was 0.000074 seconds.
2025-02-27 16:36:27,300:INFO:You can set `force_row_wise=true` to remove the overhead.
2025-02-27 16:36:27,300:INFO:And if memory is not enough, you can set `force_col_wise=true`.
2025-02-27 16:36:27,300:INFO:[LightGBM] [Info] Total Bins 124
2025-02-27 16:36:27,301:INFO:[LightGBM] [Info] Number of data points in the train set: 139, number of used features: 7
2025-02-27 16:36:27,301:INFO:[LightGBM] [Info] Start training from score -1.105833
2025-02-27 16:36:27,301:INFO:[LightGBM] [Info] Start training from score -1.063273
2025-02-27 16:36:27,301:INFO:[LightGBM] [Info] Start training from score -1.127811
2025-02-27 16:36:27,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,302:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,304:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,305:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,306:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,307:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,309:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,311:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,312:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,313:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,314:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,315:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,318:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,319:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,320:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,322:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,323:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,324:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,326:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,327:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,329:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,331:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,334:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,335:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,337:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,338:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,340:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,341:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,343:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,345:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,346:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,347:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,350:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,351:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,353:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,355:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,357:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,359:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,361:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,362:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,363:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,365:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,367:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,368:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,369:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,370:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,372:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,374:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,375:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,376:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,377:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,381:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,382:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,384:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,386:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,388:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,392:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,394:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,398:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,400:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,402:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,403:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,406:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,408:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,410:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,413:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,415:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,416:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,416:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,417:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,418:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,422:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,424:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,433:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,435:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,437:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:36:27,466:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:36:27,466:INFO:create_model() successfully completed......................................
2025-02-27 16:36:27,719:INFO:Creating Dashboard logs
2025-02-27 16:36:27,725:INFO:Model: Naive Bayes
2025-02-27 16:36:27,849:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-02-27 16:36:28,434:INFO:Initializing predict_model()
2025-02-27 16:36:28,434:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000129E39FA980>)
2025-02-27 16:36:28,434:INFO:Checking exceptions
2025-02-27 16:36:28,434:INFO:Preloading libraries
2025-02-27 16:36:28,513:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:28,513:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:28,513:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:28,841:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-02-27 16:36:28,913:ERROR:_log_model() for GaussianNB(priors=None, var_smoothing=1e-09) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:28,913:INFO:Creating Dashboard logs
2025-02-27 16:36:28,913:INFO:Model: Quadratic Discriminant Analysis
2025-02-27 16:36:28,973:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2025-02-27 16:36:29,410:ERROR:_log_model() for QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:29,425:INFO:Creating Dashboard logs
2025-02-27 16:36:29,425:INFO:Model: Ridge Classifier
2025-02-27 16:36:29,471:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 42, 'solver': 'auto', 'tol': 0.0001}
2025-02-27 16:36:29,999:ERROR:_log_model() for RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:30,000:INFO:Creating Dashboard logs
2025-02-27 16:36:30,006:INFO:Model: Logistic Regression
2025-02-27 16:36:30,054:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-02-27 16:36:30,646:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:30,649:INFO:Creating Dashboard logs
2025-02-27 16:36:30,653:INFO:Model: Linear Discriminant Analysis
2025-02-27 16:36:30,702:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2025-02-27 16:36:31,500:ERROR:_log_model() for LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:31,506:INFO:Creating Dashboard logs
2025-02-27 16:36:31,509:INFO:Model: Ada Boost Classifier
2025-02-27 16:36:31,585:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 42}
2025-02-27 16:36:32,452:ERROR:_log_model() for AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:32,459:INFO:Creating Dashboard logs
2025-02-27 16:36:32,460:INFO:Model: Decision Tree Classifier
2025-02-27 16:36:32,511:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-02-27 16:36:33,292:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:33,292:INFO:Creating Dashboard logs
2025-02-27 16:36:33,301:INFO:Model: Random Forest Classifier
2025-02-27 16:36:33,348:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
2025-02-27 16:36:34,188:ERROR:_log_model() for RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:34,188:INFO:Creating Dashboard logs
2025-02-27 16:36:34,195:INFO:Model: Gradient Boosting Classifier
2025-02-27 16:36:34,244:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 42, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-02-27 16:36:35,272:ERROR:_log_model() for GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:35,272:INFO:Creating Dashboard logs
2025-02-27 16:36:35,281:INFO:Model: Extra Trees Classifier
2025-02-27 16:36:35,325:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
2025-02-27 16:36:36,285:ERROR:_log_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:36,285:INFO:Creating Dashboard logs
2025-02-27 16:36:36,300:INFO:Model: CatBoost Classifier
2025-02-27 16:36:36,340:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\catboost\core.py", line 3476, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-02-27 16:36:36,340:INFO:Logged params: {}
2025-02-27 16:36:37,522:ERROR:_log_model() for <catboost.core.CatBoostClassifier object at 0x00000129E47CF410> raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:37,528:INFO:Creating Dashboard logs
2025-02-27 16:36:37,530:INFO:Model: SVM - Linear Kernel
2025-02-27 16:36:37,584:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 42, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-02-27 16:36:38,803:ERROR:_log_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:38,806:INFO:Creating Dashboard logs
2025-02-27 16:36:38,813:INFO:Model: K Neighbors Classifier
2025-02-27 16:36:38,853:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-02-27 16:36:40,291:ERROR:_log_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:40,297:INFO:Creating Dashboard logs
2025-02-27 16:36:40,307:INFO:Model: Light Gradient Boosting Machine
2025-02-27 16:36:40,379:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 42, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-02-27 16:36:41,772:ERROR:_log_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:41,774:INFO:Creating Dashboard logs
2025-02-27 16:36:41,781:INFO:Model: Dummy Classifier
2025-02-27 16:36:41,841:INFO:Logged params: {'constant': None, 'random_state': 42, 'strategy': 'prior'}
2025-02-27 16:36:43,188:ERROR:_log_model() for DummyClassifier(constant=None, random_state=42, strategy='prior') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:36:43,226:INFO:_master_model_container: 15
2025-02-27 16:36:43,226:INFO:_display_container: 2
2025-02-27 16:36:43,227:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:36:43,228:INFO:compare_models() successfully completed......................................
2025-02-27 16:36:43,238:INFO:Initializing evaluate_model()
2025-02-27 16:36:43,238:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-27 16:36:43,255:INFO:Initializing plot_model()
2025-02-27 16:36:43,256:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-27 16:36:43,256:INFO:Checking exceptions
2025-02-27 16:36:43,259:INFO:Preloading libraries
2025-02-27 16:36:43,259:INFO:Copying training dataset
2025-02-27 16:36:43,259:INFO:Plot type: pipeline
2025-02-27 16:36:43,745:INFO:Visual Rendered Successfully
2025-02-27 16:36:43,993:INFO:plot_model() successfully completed......................................
2025-02-27 16:36:44,008:INFO:Initializing plot_model()
2025-02-27 16:36:44,008:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-27 16:36:44,008:INFO:Checking exceptions
2025-02-27 16:36:44,016:INFO:Preloading libraries
2025-02-27 16:36:44,016:INFO:Copying training dataset
2025-02-27 16:36:44,016:INFO:Plot type: confusion_matrix
2025-02-27 16:36:44,142:INFO:Fitting Model
2025-02-27 16:36:44,146:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-02-27 16:36:44,146:INFO:Scoring test/hold-out set
2025-02-27 16:36:44,405:INFO:Visual Rendered Successfully
2025-02-27 16:36:44,678:INFO:plot_model() successfully completed......................................
2025-02-27 16:36:44,681:INFO:Initializing plot_model()
2025-02-27 16:36:44,681:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-27 16:36:44,681:INFO:Checking exceptions
2025-02-27 16:36:44,689:INFO:Preloading libraries
2025-02-27 16:36:44,689:INFO:Copying training dataset
2025-02-27 16:36:44,691:INFO:Plot type: auc
2025-02-27 16:36:44,808:INFO:Fitting Model
2025-02-27 16:36:44,808:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-02-27 16:36:44,810:INFO:Scoring test/hold-out set
2025-02-27 16:36:45,362:INFO:Visual Rendered Successfully
2025-02-27 16:36:45,606:INFO:plot_model() successfully completed......................................
2025-02-27 16:36:45,641:INFO:Initializing predict_model()
2025-02-27 16:36:45,641:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000129DDA75250>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000129DF11DA80>)
2025-02-27 16:36:45,641:INFO:Checking exceptions
2025-02-27 16:36:45,641:INFO:Preloading libraries
2025-02-27 16:36:45,751:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:45,755:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:36:45,759:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:07,246:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_a9d876d9cae244e78ef883ec7337970c
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,246:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_f813ef507ea141cc829e9355b09fe0af_a854ca40cc914aa895c6dd09bd8bd2a8
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,246:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_de6ff88652e24048bc041095be51f078
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,246:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_935be0d6079343af8b85a0eb3d2a3d67_527bde863b2e4e7698851ee17b013436
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,246:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_5a12c87dd4d6431f976a410fed151745
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,246:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_dd82387028204455bb0c2e0b9c6075e1_d41201aba44a4397a4a18819045a250d
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_7dfda76227da437fac6680db9b7185cb
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_4d98bf397c4d4b6f95e659a9991edbe3_1329cae4bd2144758db930cc285075f1
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_0a4286a1a3b64647832e9633a4f90614
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_b871d315480c454e839ecb68f0214cc2_a75a6dc91c3e4b0da86fa50554222de2
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_29f141251c8742978f427ddba1a93907
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_ffb682f581704875a51734cb5f0fc1a5_5b868a81a4d34cf5ad33402c4c358e45
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_4fc49c2858f24b778e1fb6f31dc6aa46
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_86591705b88a476791252aa52b9c308f_c25df4ffefda4d438b12f3fc68d084b2
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_b99e5a5a660d43c8a579a15bca17e392
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_61238b840be54c0a95333624c0138e5d_81e8904842c540639215aa5735de9064
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_1f0deb47a78e481eb193c1afb5e856ba
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_f88eaaa372d941e0b7f52972f3186c66_8f32105ce1184d69a136a3b49cb0711b
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_b763ab2aa9804287a803afd19a18f561
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_da73c092acf3411aa29ca357f2d14580_846c3c0d2b7b4931bdc29b68a544f83c
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_a6cc74cacb5e4cd783186c29be8709fa
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_22b0064dfd92419a9e1c14d741f4e414_643359013197421f8e4cbe8c71788099
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_ca39950770b248f183288639082de500
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_88af1b3eac4a42adb719ef0d6c7744f3_6f672f7ef6d047158773911ee9facc12
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_7c76ab9cbd5245ccb6c4793b0d76c06f
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_e419b896001e4428b3785eca142dafe2_8b5aa5f85d1b4395b9b25751c563487f
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_ef2df6c3e8cf424b99132ba8457d0d70
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_3a81d93f3921472ba4b9a1b4055d99e4_cc16f030d8f24be482227bf70b179f7f
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_2d39f07490ee4c9aa3ced7d2319c0078
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:07,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\joblib\_memmapping_reducer.py:598: UserWarning: Failed to delete temporary folder: C:\Users\JUPYTE~1\AppData\Local\Temp\joblib_memmapping_folder_5316_65d01c6bc5854fc6b9b2937e6588073a_3347de79edab4677bee9a5c38fa3e3a1
  warnings.warn("Failed to delete temporary folder: {}"

2025-02-27 16:40:17,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:40:17,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:40:17,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:40:17,955:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:40:20,212:INFO:PyCaret ClassificationExperiment
2025-02-27 16:40:20,212:INFO:Logging name: wheatclassification
2025-02-27 16:40:20,212:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 16:40:20,212:INFO:version 3.3.2
2025-02-27 16:40:20,214:INFO:Initializing setup()
2025-02-27 16:40:20,214:INFO:self.USI: 3d88
2025-02-27 16:40:20,214:INFO:self._variable_keys: {'memory', 'USI', 'y_train', 'pipeline', 'gpu_n_jobs_param', 'is_multiclass', 'X_train', 'n_jobs_param', 'fix_imbalance', 'seed', 'exp_id', 'logging_param', 'y', 'X', 'y_test', '_ml_usecase', 'exp_name_log', 'fold_shuffle_param', 'fold_generator', 'idx', 'html_param', 'target_param', 'gpu_param', 'fold_groups_param', '_available_plots', 'data', 'X_test', 'log_plots_param'}
2025-02-27 16:40:20,214:INFO:Checking environment
2025-02-27 16:40:20,214:INFO:python_version: 3.11.11
2025-02-27 16:40:20,214:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-27 16:40:20,214:INFO:machine: AMD64
2025-02-27 16:40:20,214:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-27 16:40:20,214:INFO:Memory: svmem(total=16855433216, available=7646457856, percent=54.6, used=9208975360, free=7646457856)
2025-02-27 16:40:20,214:INFO:Physical Core: 10
2025-02-27 16:40:20,216:INFO:Logical Core: 16
2025-02-27 16:40:20,216:INFO:Checking libraries
2025-02-27 16:40:20,216:INFO:System:
2025-02-27 16:40:20,216:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-27 16:40:20,216:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-27 16:40:20,216:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-27 16:40:20,216:INFO:PyCaret required dependencies:
2025-02-27 16:40:20,542:INFO:                 pip: 25.0
2025-02-27 16:40:20,542:INFO:          setuptools: 75.8.2
2025-02-27 16:40:20,542:INFO:             pycaret: 3.3.2
2025-02-27 16:40:20,542:INFO:             IPython: 8.32.0
2025-02-27 16:40:20,542:INFO:          ipywidgets: 8.1.5
2025-02-27 16:40:20,542:INFO:                tqdm: 4.67.1
2025-02-27 16:40:20,542:INFO:               numpy: 1.26.4
2025-02-27 16:40:20,542:INFO:              pandas: 1.5.3
2025-02-27 16:40:20,542:INFO:              jinja2: 3.1.5
2025-02-27 16:40:20,543:INFO:               scipy: 1.11.4
2025-02-27 16:40:20,543:INFO:              joblib: 1.3.2
2025-02-27 16:40:20,543:INFO:             sklearn: 1.4.2
2025-02-27 16:40:20,543:INFO:                pyod: 2.0.3
2025-02-27 16:40:20,543:INFO:            imblearn: 0.13.0
2025-02-27 16:40:20,543:INFO:   category_encoders: 2.7.0
2025-02-27 16:40:20,543:INFO:            lightgbm: 4.6.0
2025-02-27 16:40:20,543:INFO:               numba: 0.61.0
2025-02-27 16:40:20,543:INFO:            requests: 2.32.3
2025-02-27 16:40:20,543:INFO:          matplotlib: 3.7.5
2025-02-27 16:40:20,543:INFO:          scikitplot: 0.3.7
2025-02-27 16:40:20,543:INFO:         yellowbrick: 1.5
2025-02-27 16:40:20,543:INFO:              plotly: 5.24.1
2025-02-27 16:40:20,543:INFO:    plotly-resampler: Not installed
2025-02-27 16:40:20,543:INFO:             kaleido: 0.2.1
2025-02-27 16:40:20,543:INFO:           schemdraw: 0.15
2025-02-27 16:40:20,543:INFO:         statsmodels: 0.14.4
2025-02-27 16:40:20,543:INFO:              sktime: 0.26.0
2025-02-27 16:40:20,543:INFO:               tbats: 1.1.3
2025-02-27 16:40:20,543:INFO:            pmdarima: 2.0.4
2025-02-27 16:40:20,543:INFO:              psutil: 7.0.0
2025-02-27 16:40:20,543:INFO:          markupsafe: 3.0.2
2025-02-27 16:40:20,543:INFO:             pickle5: Not installed
2025-02-27 16:40:20,543:INFO:         cloudpickle: 3.1.1
2025-02-27 16:40:20,543:INFO:         deprecation: 2.1.0
2025-02-27 16:40:20,543:INFO:              xxhash: 3.5.0
2025-02-27 16:40:20,543:INFO:           wurlitzer: Not installed
2025-02-27 16:40:20,543:INFO:PyCaret optional dependencies:
2025-02-27 16:40:20,581:INFO:                shap: Not installed
2025-02-27 16:40:20,581:INFO:           interpret: Not installed
2025-02-27 16:40:20,581:INFO:                umap: Not installed
2025-02-27 16:40:20,581:INFO:     ydata_profiling: Not installed
2025-02-27 16:40:20,581:INFO:  explainerdashboard: Not installed
2025-02-27 16:40:20,581:INFO:             autoviz: Not installed
2025-02-27 16:40:20,581:INFO:           fairlearn: Not installed
2025-02-27 16:40:20,581:INFO:          deepchecks: Not installed
2025-02-27 16:40:20,581:INFO:             xgboost: Not installed
2025-02-27 16:40:20,581:INFO:            catboost: 1.2.3
2025-02-27 16:40:20,581:INFO:              kmodes: Not installed
2025-02-27 16:40:20,581:INFO:             mlxtend: Not installed
2025-02-27 16:40:20,582:INFO:       statsforecast: Not installed
2025-02-27 16:40:20,582:INFO:        tune_sklearn: Not installed
2025-02-27 16:40:20,582:INFO:                 ray: Not installed
2025-02-27 16:40:20,582:INFO:            hyperopt: Not installed
2025-02-27 16:40:20,582:INFO:              optuna: Not installed
2025-02-27 16:40:20,582:INFO:               skopt: Not installed
2025-02-27 16:40:20,582:INFO:              mlflow: 2.20.2
2025-02-27 16:40:20,582:INFO:              gradio: Not installed
2025-02-27 16:40:20,582:INFO:             fastapi: Not installed
2025-02-27 16:40:20,582:INFO:             uvicorn: Not installed
2025-02-27 16:40:20,582:INFO:              m2cgen: Not installed
2025-02-27 16:40:20,582:INFO:           evidently: Not installed
2025-02-27 16:40:20,582:INFO:               fugue: Not installed
2025-02-27 16:40:20,582:INFO:           streamlit: 1.42.2
2025-02-27 16:40:20,582:INFO:             prophet: Not installed
2025-02-27 16:40:20,584:INFO:None
2025-02-27 16:40:20,584:INFO:Set up data.
2025-02-27 16:40:20,595:INFO:Set up folding strategy.
2025-02-27 16:40:20,595:INFO:Set up train/test split.
2025-02-27 16:40:20,601:INFO:Set up index.
2025-02-27 16:40:20,601:INFO:Assigning column types.
2025-02-27 16:40:20,608:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:40:20,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:40:20,686:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:40:20,758:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:40:20,758:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:40:21,018:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:40:21,018:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:40:21,167:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:40:21,169:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:40:21,171:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:40:21,397:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:40:21,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:40:21,538:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:40:21,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:40:21,744:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:40:21,744:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:40:21,744:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 16:40:21,911:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:40:21,913:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:40:22,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:40:22,190:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:40:22,199:INFO:Preparing preprocessing pipeline...
2025-02-27 16:40:22,201:INFO:Set up label encoding.
2025-02-27 16:40:22,201:INFO:Set up simple imputation.
2025-02-27 16:40:22,201:INFO:Set up binning of numerical features.
2025-02-27 16:40:22,205:INFO:Set up feature normalization.
2025-02-27 16:40:22,205:INFO:Set up feature selection.
2025-02-27 16:40:22,555:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:40:22,555:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:40:22,751:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:40:22,781:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:40:22,781:INFO:Creating final display dataframe.
2025-02-27 16:40:22,907:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target                 Type
2                   Target type           Multiclass
3                Target mapping     1: 0, 2: 1, 3: 2
4           Original data shape             (199, 8)
5        Transformed data shape             (199, 2)
6   Transformed train set shape             (139, 2)
7    Transformed test set shape              (60, 2)
8              Numeric features                    7
9                    Preprocess                 True
10              Imputation type               simple
11           Numeric imputation                 mean
12       Categorical imputation                 mode
13                    Normalize                 True
14             Normalize method               zscore
15            Feature selection                 True
16     Feature selection method              classic
17  Feature selection estimator             lightgbm
18  Number of features selected                  0.2
19               Fold Generator      StratifiedKFold
20                  Fold Number                   10
21                     CPU Jobs                   -1
22                      Use GPU                False
23               Log Experiment         MlflowLogger
24              Experiment Name  wheatclassification
25                          USI                 3d88
2025-02-27 16:40:23,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:40:23,146:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:40:23,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:40:23,525:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:40:23,531:INFO:Logging experiment in loggers
2025-02-27 16:40:24,217:INFO:SubProcess save_model() called ==================================
2025-02-27 16:40:24,284:INFO:Initializing save_model()
2025-02-27 16:40:24,284:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), model_name=C:\Users\JUPYTE~1\AppData\Local\Temp\tmpx71t34id\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 16:40:24,284:INFO:Adding model into prep_pipe
2025-02-27 16:40:24,284:WARNING:Only Model saved as it was a pipeline.
2025-02-27 16:40:24,299:INFO:C:\Users\JUPYTE~1\AppData\Local\Temp\tmpx71t34id\Transformation Pipeline.pkl saved in current working directory
2025-02-27 16:40:24,315:INFO:Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:40:24,315:INFO:save_model() successfully completed......................................
2025-02-27 16:40:24,425:INFO:SubProcess save_model() end ==================================
2025-02-27 16:40:24,472:INFO:setup() successfully completed in 3.37s...............
2025-02-27 16:40:24,494:INFO:Initializing compare_models()
2025-02-27 16:40:24,494:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-02-27 16:40:24,496:INFO:Checking exceptions
2025-02-27 16:40:24,496:INFO:Preparing display monitor
2025-02-27 16:40:24,530:INFO:Initializing Logistic Regression
2025-02-27 16:40:24,530:INFO:Total runtime is 0.0 minutes
2025-02-27 16:40:24,545:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:24,545:INFO:Initializing create_model()
2025-02-27 16:40:24,545:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:24,545:INFO:Checking exceptions
2025-02-27 16:40:24,545:INFO:Importing libraries
2025-02-27 16:40:24,545:INFO:Copying training dataset
2025-02-27 16:40:24,548:INFO:Defining folds
2025-02-27 16:40:24,548:INFO:Declaring metric variables
2025-02-27 16:40:24,548:INFO:Importing untrained model
2025-02-27 16:40:24,564:INFO:Logistic Regression Imported successfully
2025-02-27 16:40:24,569:INFO:Starting cross validation
2025-02-27 16:40:24,594:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:29,935:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:29,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:30,000:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:30,103:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:30,131:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:30,138:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:30,151:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:30,154:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:30,157:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:30,173:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:31,025:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,030:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,040:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,072:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,077:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,077:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,082:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,082:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,088:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,089:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,095:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,126:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,126:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,135:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,140:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,140:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,145:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,145:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,178:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,182:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,188:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,193:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,231:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,236:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,242:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,249:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,273:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,276:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,283:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,285:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,285:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,300:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:31,300:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,304:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,304:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:31,314:INFO:Calculating mean and std
2025-02-27 16:40:31,318:INFO:Creating metrics dataframe
2025-02-27 16:40:31,329:INFO:Uploading results into container
2025-02-27 16:40:31,329:INFO:Uploading model into container now
2025-02-27 16:40:31,329:INFO:_master_model_container: 1
2025-02-27 16:40:31,329:INFO:_display_container: 2
2025-02-27 16:40:31,329:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-27 16:40:31,329:INFO:create_model() successfully completed......................................
2025-02-27 16:40:31,534:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:31,534:INFO:Creating metrics dataframe
2025-02-27 16:40:31,563:INFO:Initializing K Neighbors Classifier
2025-02-27 16:40:31,563:INFO:Total runtime is 0.11722815036773682 minutes
2025-02-27 16:40:31,573:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:31,573:INFO:Initializing create_model()
2025-02-27 16:40:31,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:31,573:INFO:Checking exceptions
2025-02-27 16:40:31,579:INFO:Importing libraries
2025-02-27 16:40:31,579:INFO:Copying training dataset
2025-02-27 16:40:31,592:INFO:Defining folds
2025-02-27 16:40:31,592:INFO:Declaring metric variables
2025-02-27 16:40:31,607:INFO:Importing untrained model
2025-02-27 16:40:31,619:INFO:K Neighbors Classifier Imported successfully
2025-02-27 16:40:31,635:INFO:Starting cross validation
2025-02-27 16:40:31,657:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:31,708:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:31,708:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:31,708:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:31,741:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:33,724:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:33,730:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:33,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:33,971:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:33,978:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:33,983:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:33,998:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:34,003:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:34,010:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:34,106:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:34,113:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:34,120:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:37,560:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:37,655:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:37,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:37,750:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:37,866:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:37,960:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:38,516:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,568:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,574:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,580:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,624:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,628:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,630:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,635:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,638:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,642:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,765:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,772:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,778:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,831:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,838:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:38,852:INFO:Calculating mean and std
2025-02-27 16:40:38,854:INFO:Creating metrics dataframe
2025-02-27 16:40:38,854:INFO:Uploading results into container
2025-02-27 16:40:38,854:INFO:Uploading model into container now
2025-02-27 16:40:38,863:INFO:_master_model_container: 2
2025-02-27 16:40:38,863:INFO:_display_container: 2
2025-02-27 16:40:38,863:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-27 16:40:38,863:INFO:create_model() successfully completed......................................
2025-02-27 16:40:39,060:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:39,060:INFO:Creating metrics dataframe
2025-02-27 16:40:39,091:INFO:Initializing Naive Bayes
2025-02-27 16:40:39,091:INFO:Total runtime is 0.24269437392552692 minutes
2025-02-27 16:40:39,091:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:39,091:INFO:Initializing create_model()
2025-02-27 16:40:39,104:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:39,104:INFO:Checking exceptions
2025-02-27 16:40:39,104:INFO:Importing libraries
2025-02-27 16:40:39,104:INFO:Copying training dataset
2025-02-27 16:40:39,113:INFO:Defining folds
2025-02-27 16:40:39,113:INFO:Declaring metric variables
2025-02-27 16:40:39,120:INFO:Importing untrained model
2025-02-27 16:40:39,137:INFO:Naive Bayes Imported successfully
2025-02-27 16:40:39,155:INFO:Starting cross validation
2025-02-27 16:40:39,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:39,218:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:39,218:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:39,233:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:39,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:39,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:39,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:39,295:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:39,311:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:39,311:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:39,311:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,261:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,268:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,274:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,274:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,288:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,319:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,342:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,342:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,347:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,423:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,425:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,429:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,431:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,436:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,440:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,457:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,461:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,461:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,465:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,465:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,465:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,470:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,472:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,476:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:40,496:INFO:Calculating mean and std
2025-02-27 16:40:40,498:INFO:Creating metrics dataframe
2025-02-27 16:40:40,506:INFO:Uploading results into container
2025-02-27 16:40:40,509:INFO:Uploading model into container now
2025-02-27 16:40:40,509:INFO:_master_model_container: 3
2025-02-27 16:40:40,509:INFO:_display_container: 2
2025-02-27 16:40:40,509:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:40:40,509:INFO:create_model() successfully completed......................................
2025-02-27 16:40:40,625:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:40,625:INFO:Creating metrics dataframe
2025-02-27 16:40:40,665:INFO:Initializing Decision Tree Classifier
2025-02-27 16:40:40,665:INFO:Total runtime is 0.2689234217007955 minutes
2025-02-27 16:40:40,674:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:40,677:INFO:Initializing create_model()
2025-02-27 16:40:40,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:40,677:INFO:Checking exceptions
2025-02-27 16:40:40,677:INFO:Importing libraries
2025-02-27 16:40:40,677:INFO:Copying training dataset
2025-02-27 16:40:40,682:INFO:Defining folds
2025-02-27 16:40:40,683:INFO:Declaring metric variables
2025-02-27 16:40:40,693:INFO:Importing untrained model
2025-02-27 16:40:40,700:INFO:Decision Tree Classifier Imported successfully
2025-02-27 16:40:40,718:INFO:Starting cross validation
2025-02-27 16:40:40,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:40,772:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,783:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,815:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,830:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,830:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,830:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,846:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,846:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:40,846:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,010:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,014:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,016:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,021:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,023:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,055:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,067:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,073:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,087:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,091:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,093:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,098:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,100:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,104:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,104:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,110:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,116:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,134:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,140:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,143:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,199:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,205:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,211:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,217:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,225:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,230:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,242:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,246:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,252:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:42,270:INFO:Calculating mean and std
2025-02-27 16:40:42,272:INFO:Creating metrics dataframe
2025-02-27 16:40:42,276:INFO:Uploading results into container
2025-02-27 16:40:42,276:INFO:Uploading model into container now
2025-02-27 16:40:42,283:INFO:_master_model_container: 4
2025-02-27 16:40:42,283:INFO:_display_container: 2
2025-02-27 16:40:42,283:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-02-27 16:40:42,283:INFO:create_model() successfully completed......................................
2025-02-27 16:40:42,444:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:42,444:INFO:Creating metrics dataframe
2025-02-27 16:40:42,471:INFO:Initializing SVM - Linear Kernel
2025-02-27 16:40:42,471:INFO:Total runtime is 0.2990272005399068 minutes
2025-02-27 16:40:42,482:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:42,482:INFO:Initializing create_model()
2025-02-27 16:40:42,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:42,485:INFO:Checking exceptions
2025-02-27 16:40:42,485:INFO:Importing libraries
2025-02-27 16:40:42,485:INFO:Copying training dataset
2025-02-27 16:40:42,495:INFO:Defining folds
2025-02-27 16:40:42,495:INFO:Declaring metric variables
2025-02-27 16:40:42,505:INFO:Importing untrained model
2025-02-27 16:40:42,517:INFO:SVM - Linear Kernel Imported successfully
2025-02-27 16:40:42,535:INFO:Starting cross validation
2025-02-27 16:40:42,561:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:42,631:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,634:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,639:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,642:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,660:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,666:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,668:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:42,670:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:43,725:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,726:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,731:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,733:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,737:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,739:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,741:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:43,743:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:43,743:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,746:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,764:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,770:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,778:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,782:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,812:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,815:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,815:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,817:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,822:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,824:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,826:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:43,826:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:43,829:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,829:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,838:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,843:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,854:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,859:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,879:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,881:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,887:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,893:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,946:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,947:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,951:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:43,953:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,953:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,956:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:43,958:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,960:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,962:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:43,965:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:43,976:INFO:Calculating mean and std
2025-02-27 16:40:43,979:INFO:Creating metrics dataframe
2025-02-27 16:40:43,990:INFO:Uploading results into container
2025-02-27 16:40:43,993:INFO:Uploading model into container now
2025-02-27 16:40:43,995:INFO:_master_model_container: 5
2025-02-27 16:40:43,995:INFO:_display_container: 2
2025-02-27 16:40:43,995:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-27 16:40:43,995:INFO:create_model() successfully completed......................................
2025-02-27 16:40:44,122:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:44,122:INFO:Creating metrics dataframe
2025-02-27 16:40:44,153:INFO:Initializing Ridge Classifier
2025-02-27 16:40:44,153:INFO:Total runtime is 0.3270578304926554 minutes
2025-02-27 16:40:44,175:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:44,175:INFO:Initializing create_model()
2025-02-27 16:40:44,175:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:44,175:INFO:Checking exceptions
2025-02-27 16:40:44,175:INFO:Importing libraries
2025-02-27 16:40:44,175:INFO:Copying training dataset
2025-02-27 16:40:44,182:INFO:Defining folds
2025-02-27 16:40:44,182:INFO:Declaring metric variables
2025-02-27 16:40:44,196:INFO:Importing untrained model
2025-02-27 16:40:44,203:INFO:Ridge Classifier Imported successfully
2025-02-27 16:40:44,217:INFO:Starting cross validation
2025-02-27 16:40:44,231:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:44,271:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:44,271:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:44,283:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:44,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:44,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:44,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:44,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:44,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:44,332:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:44,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:45,403:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,405:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,412:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:45,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,470:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,473:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,481:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:45,489:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,506:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,509:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,514:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,521:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,521:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,527:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,529:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,535:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,537:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,537:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,537:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:45,541:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,543:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,550:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,553:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,558:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,564:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,573:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,576:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,582:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,585:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:45,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,623:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,625:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,632:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,636:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:45,639:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,656:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:45,658:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,663:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,665:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:40:45,669:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:45,683:INFO:Calculating mean and std
2025-02-27 16:40:45,683:INFO:Creating metrics dataframe
2025-02-27 16:40:45,686:INFO:Uploading results into container
2025-02-27 16:40:45,686:INFO:Uploading model into container now
2025-02-27 16:40:45,686:INFO:_master_model_container: 6
2025-02-27 16:40:45,686:INFO:_display_container: 2
2025-02-27 16:40:45,686:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-02-27 16:40:45,686:INFO:create_model() successfully completed......................................
2025-02-27 16:40:45,837:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:45,837:INFO:Creating metrics dataframe
2025-02-27 16:40:45,877:INFO:Initializing Random Forest Classifier
2025-02-27 16:40:45,877:INFO:Total runtime is 0.35578101873397827 minutes
2025-02-27 16:40:45,887:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:45,891:INFO:Initializing create_model()
2025-02-27 16:40:45,891:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:45,891:INFO:Checking exceptions
2025-02-27 16:40:45,891:INFO:Importing libraries
2025-02-27 16:40:45,891:INFO:Copying training dataset
2025-02-27 16:40:45,901:INFO:Defining folds
2025-02-27 16:40:45,901:INFO:Declaring metric variables
2025-02-27 16:40:45,905:INFO:Importing untrained model
2025-02-27 16:40:45,919:INFO:Random Forest Classifier Imported successfully
2025-02-27 16:40:45,942:INFO:Starting cross validation
2025-02-27 16:40:45,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:46,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:46,037:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:46,041:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:46,047:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:46,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:46,049:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:46,055:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:46,065:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:46,076:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:46,078:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:47,456:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,464:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,470:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,494:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,495:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,499:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,504:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,506:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,511:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,519:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,526:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,533:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,539:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,539:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,547:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,550:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,557:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,647:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,655:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,687:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,697:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,707:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,746:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,752:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,763:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,839:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,849:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,855:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:47,875:INFO:Calculating mean and std
2025-02-27 16:40:47,878:INFO:Creating metrics dataframe
2025-02-27 16:40:47,891:INFO:Uploading results into container
2025-02-27 16:40:47,894:INFO:Uploading model into container now
2025-02-27 16:40:47,894:INFO:_master_model_container: 7
2025-02-27 16:40:47,894:INFO:_display_container: 2
2025-02-27 16:40:47,896:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 16:40:47,896:INFO:create_model() successfully completed......................................
2025-02-27 16:40:48,134:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:48,134:INFO:Creating metrics dataframe
2025-02-27 16:40:48,169:INFO:Initializing Quadratic Discriminant Analysis
2025-02-27 16:40:48,169:INFO:Total runtime is 0.39398434162139895 minutes
2025-02-27 16:40:48,181:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:48,182:INFO:Initializing create_model()
2025-02-27 16:40:48,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:48,182:INFO:Checking exceptions
2025-02-27 16:40:48,182:INFO:Importing libraries
2025-02-27 16:40:48,183:INFO:Copying training dataset
2025-02-27 16:40:48,191:INFO:Defining folds
2025-02-27 16:40:48,191:INFO:Declaring metric variables
2025-02-27 16:40:48,206:INFO:Importing untrained model
2025-02-27 16:40:48,217:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-27 16:40:48,232:INFO:Starting cross validation
2025-02-27 16:40:48,249:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:48,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:48,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:48,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:48,348:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:48,351:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:48,358:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:48,369:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:48,376:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:48,384:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:48,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:49,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,413:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,418:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,422:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,424:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,428:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,434:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,451:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,454:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,458:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,465:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,475:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,477:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,482:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,487:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,544:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,547:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,553:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,557:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,559:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,561:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,565:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,573:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,577:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,580:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,585:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,592:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,603:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,606:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,612:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,612:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,615:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,617:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,619:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,626:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,634:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:49,638:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,643:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,648:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:49,665:INFO:Calculating mean and std
2025-02-27 16:40:49,668:INFO:Creating metrics dataframe
2025-02-27 16:40:49,675:INFO:Uploading results into container
2025-02-27 16:40:49,675:INFO:Uploading model into container now
2025-02-27 16:40:49,677:INFO:_master_model_container: 8
2025-02-27 16:40:49,677:INFO:_display_container: 2
2025-02-27 16:40:49,677:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-27 16:40:49,677:INFO:create_model() successfully completed......................................
2025-02-27 16:40:49,845:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:49,845:INFO:Creating metrics dataframe
2025-02-27 16:40:49,880:INFO:Initializing Ada Boost Classifier
2025-02-27 16:40:49,880:INFO:Total runtime is 0.4225005388259888 minutes
2025-02-27 16:40:49,893:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:49,893:INFO:Initializing create_model()
2025-02-27 16:40:49,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:49,894:INFO:Checking exceptions
2025-02-27 16:40:49,894:INFO:Importing libraries
2025-02-27 16:40:49,894:INFO:Copying training dataset
2025-02-27 16:40:49,904:INFO:Defining folds
2025-02-27 16:40:49,904:INFO:Declaring metric variables
2025-02-27 16:40:49,918:INFO:Importing untrained model
2025-02-27 16:40:49,929:INFO:Ada Boost Classifier Imported successfully
2025-02-27 16:40:49,939:INFO:Starting cross validation
2025-02-27 16:40:49,972:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:50,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,038:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,046:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,048:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,048:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,051:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,055:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,058:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,071:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,072:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:50,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:50,868:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:50,920:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:50,945:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:50,972:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:50,991:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:51,092:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,096:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,103:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,109:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,120:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,138:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,147:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,159:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:51,194:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,199:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,206:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,213:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,215:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:51,221:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,224:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,230:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,238:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,242:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:51,249:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,254:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,259:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,266:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,266:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,269:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,275:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,280:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,304:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:40:51,419:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,426:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,433:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,434:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,467:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,468:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,475:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,477:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,485:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,489:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,583:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:51,586:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,594:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,606:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:51,622:INFO:Calculating mean and std
2025-02-27 16:40:51,629:INFO:Creating metrics dataframe
2025-02-27 16:40:51,638:INFO:Uploading results into container
2025-02-27 16:40:51,642:INFO:Uploading model into container now
2025-02-27 16:40:51,643:INFO:_master_model_container: 9
2025-02-27 16:40:51,643:INFO:_display_container: 2
2025-02-27 16:40:51,643:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-27 16:40:51,643:INFO:create_model() successfully completed......................................
2025-02-27 16:40:51,842:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:51,842:INFO:Creating metrics dataframe
2025-02-27 16:40:51,878:INFO:Initializing Gradient Boosting Classifier
2025-02-27 16:40:51,878:INFO:Total runtime is 0.4557971040407817 minutes
2025-02-27 16:40:51,886:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:51,886:INFO:Initializing create_model()
2025-02-27 16:40:51,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:51,888:INFO:Checking exceptions
2025-02-27 16:40:51,888:INFO:Importing libraries
2025-02-27 16:40:51,888:INFO:Copying training dataset
2025-02-27 16:40:51,901:INFO:Defining folds
2025-02-27 16:40:51,901:INFO:Declaring metric variables
2025-02-27 16:40:51,912:INFO:Importing untrained model
2025-02-27 16:40:51,919:INFO:Gradient Boosting Classifier Imported successfully
2025-02-27 16:40:51,934:INFO:Starting cross validation
2025-02-27 16:40:51,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:52,002:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:52,004:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:52,011:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:52,025:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:52,040:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:52,048:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:52,052:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:52,054:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:52,065:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:52,067:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:53,704:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:53,706:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:53,713:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,713:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,718:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,720:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:53,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,744:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:53,745:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,748:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,750:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,752:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:53,752:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,757:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,760:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,763:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,769:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,780:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:53,784:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,786:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,794:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,934:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:53,936:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,941:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:53,945:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,055:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:54,058:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,059:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,069:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,338:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:54,338:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,342:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,353:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,447:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:54,450:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,456:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,460:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:54,471:INFO:Calculating mean and std
2025-02-27 16:40:54,474:INFO:Creating metrics dataframe
2025-02-27 16:40:54,479:INFO:Uploading results into container
2025-02-27 16:40:54,481:INFO:Uploading model into container now
2025-02-27 16:40:54,482:INFO:_master_model_container: 10
2025-02-27 16:40:54,482:INFO:_display_container: 2
2025-02-27 16:40:54,482:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-27 16:40:54,482:INFO:create_model() successfully completed......................................
2025-02-27 16:40:54,602:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:54,602:INFO:Creating metrics dataframe
2025-02-27 16:40:54,622:INFO:Initializing Linear Discriminant Analysis
2025-02-27 16:40:54,622:INFO:Total runtime is 0.5015449523925782 minutes
2025-02-27 16:40:54,629:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:54,630:INFO:Initializing create_model()
2025-02-27 16:40:54,630:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:54,630:INFO:Checking exceptions
2025-02-27 16:40:54,630:INFO:Importing libraries
2025-02-27 16:40:54,630:INFO:Copying training dataset
2025-02-27 16:40:54,636:INFO:Defining folds
2025-02-27 16:40:54,636:INFO:Declaring metric variables
2025-02-27 16:40:54,642:INFO:Importing untrained model
2025-02-27 16:40:54,647:INFO:Linear Discriminant Analysis Imported successfully
2025-02-27 16:40:54,657:INFO:Starting cross validation
2025-02-27 16:40:54,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:54,721:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:54,721:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:54,725:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:54,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:54,742:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:54,745:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:54,760:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:54,762:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:54,764:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:54,801:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:55,719:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,721:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,726:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,732:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,740:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,742:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,749:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,754:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,773:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,787:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,791:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,793:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,794:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,798:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,800:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,803:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,805:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,807:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,813:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,820:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,824:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,827:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,833:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,839:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,844:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,851:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,856:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,888:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,892:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,899:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,905:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,950:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,953:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,956:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,963:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,969:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:40:55,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,978:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:55,982:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:56,002:INFO:Calculating mean and std
2025-02-27 16:40:56,004:INFO:Creating metrics dataframe
2025-02-27 16:40:56,013:INFO:Uploading results into container
2025-02-27 16:40:56,015:INFO:Uploading model into container now
2025-02-27 16:40:56,015:INFO:_master_model_container: 11
2025-02-27 16:40:56,016:INFO:_display_container: 2
2025-02-27 16:40:56,016:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-27 16:40:56,016:INFO:create_model() successfully completed......................................
2025-02-27 16:40:56,196:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:56,196:INFO:Creating metrics dataframe
2025-02-27 16:40:56,238:INFO:Initializing Extra Trees Classifier
2025-02-27 16:40:56,238:INFO:Total runtime is 0.528465755780538 minutes
2025-02-27 16:40:56,246:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:56,246:INFO:Initializing create_model()
2025-02-27 16:40:56,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:56,246:INFO:Checking exceptions
2025-02-27 16:40:56,246:INFO:Importing libraries
2025-02-27 16:40:56,246:INFO:Copying training dataset
2025-02-27 16:40:56,258:INFO:Defining folds
2025-02-27 16:40:56,258:INFO:Declaring metric variables
2025-02-27 16:40:56,265:INFO:Importing untrained model
2025-02-27 16:40:56,280:INFO:Extra Trees Classifier Imported successfully
2025-02-27 16:40:56,288:INFO:Starting cross validation
2025-02-27 16:40:56,321:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:56,398:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:56,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:56,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:56,406:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:56,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:56,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:56,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:56,421:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:56,429:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:56,432:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:57,807:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,811:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,816:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,821:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,822:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,822:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,827:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,829:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,834:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,844:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,851:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,858:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,862:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,868:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,876:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,889:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,896:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,904:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,974:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,981:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,983:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,987:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:57,989:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:58,050:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:58,059:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:58,066:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:58,087:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:58,091:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:58,098:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:40:58,119:INFO:Calculating mean and std
2025-02-27 16:40:58,119:INFO:Creating metrics dataframe
2025-02-27 16:40:58,131:INFO:Uploading results into container
2025-02-27 16:40:58,133:INFO:Uploading model into container now
2025-02-27 16:40:58,135:INFO:_master_model_container: 12
2025-02-27 16:40:58,135:INFO:_display_container: 2
2025-02-27 16:40:58,136:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-02-27 16:40:58,137:INFO:create_model() successfully completed......................................
2025-02-27 16:40:58,307:INFO:SubProcess create_model() end ==================================
2025-02-27 16:40:58,307:INFO:Creating metrics dataframe
2025-02-27 16:40:58,348:INFO:Initializing Light Gradient Boosting Machine
2025-02-27 16:40:58,348:INFO:Total runtime is 0.5636343995730083 minutes
2025-02-27 16:40:58,361:INFO:SubProcess create_model() called ==================================
2025-02-27 16:40:58,361:INFO:Initializing create_model()
2025-02-27 16:40:58,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:40:58,361:INFO:Checking exceptions
2025-02-27 16:40:58,361:INFO:Importing libraries
2025-02-27 16:40:58,361:INFO:Copying training dataset
2025-02-27 16:40:58,372:INFO:Defining folds
2025-02-27 16:40:58,372:INFO:Declaring metric variables
2025-02-27 16:40:58,379:INFO:Importing untrained model
2025-02-27 16:40:58,387:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 16:40:58,401:INFO:Starting cross validation
2025-02-27 16:40:58,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:40:58,467:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:58,472:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:58,481:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:58,495:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:58,510:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:58,510:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:58,524:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:58,526:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:58,533:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:40:58,535:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:00,729:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,752:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,764:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,770:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,775:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,808:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,814:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,830:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,844:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,854:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,861:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,884:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,893:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,896:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,898:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,901:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,912:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,923:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,930:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,967:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,971:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,979:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,987:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,991:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:00,997:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:01,011:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:01,016:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:01,021:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:01,039:INFO:Calculating mean and std
2025-02-27 16:41:01,041:INFO:Creating metrics dataframe
2025-02-27 16:41:01,048:INFO:Uploading results into container
2025-02-27 16:41:01,051:INFO:Uploading model into container now
2025-02-27 16:41:01,052:INFO:_master_model_container: 13
2025-02-27 16:41:01,052:INFO:_display_container: 2
2025-02-27 16:41:01,053:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-27 16:41:01,053:INFO:create_model() successfully completed......................................
2025-02-27 16:41:01,204:INFO:SubProcess create_model() end ==================================
2025-02-27 16:41:01,204:INFO:Creating metrics dataframe
2025-02-27 16:41:01,233:INFO:Initializing CatBoost Classifier
2025-02-27 16:41:01,233:INFO:Total runtime is 0.6117133696873984 minutes
2025-02-27 16:41:01,239:INFO:SubProcess create_model() called ==================================
2025-02-27 16:41:01,239:INFO:Initializing create_model()
2025-02-27 16:41:01,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:41:01,239:INFO:Checking exceptions
2025-02-27 16:41:01,239:INFO:Importing libraries
2025-02-27 16:41:01,239:INFO:Copying training dataset
2025-02-27 16:41:01,245:INFO:Defining folds
2025-02-27 16:41:01,245:INFO:Declaring metric variables
2025-02-27 16:41:01,258:INFO:Importing untrained model
2025-02-27 16:41:01,265:INFO:CatBoost Classifier Imported successfully
2025-02-27 16:41:01,279:INFO:Starting cross validation
2025-02-27 16:41:01,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:41:02,497:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:02,548:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:02,573:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:02,573:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:02,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:02,582:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:02,582:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:02,584:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:02,586:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:02,592:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:07,300:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,314:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,321:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,324:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,385:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,387:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,394:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,396:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,448:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,455:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,462:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,484:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,484:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,492:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,494:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,502:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,504:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,541:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,550:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,550:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,558:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,558:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:07,566:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:10,078:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:10,082:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:10,086:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:10,101:INFO:Calculating mean and std
2025-02-27 16:41:10,103:INFO:Creating metrics dataframe
2025-02-27 16:41:10,109:INFO:Uploading results into container
2025-02-27 16:41:10,111:INFO:Uploading model into container now
2025-02-27 16:41:10,112:INFO:_master_model_container: 14
2025-02-27 16:41:10,112:INFO:_display_container: 2
2025-02-27 16:41:10,113:INFO:<catboost.core.CatBoostClassifier object at 0x000001C296F933D0>
2025-02-27 16:41:10,113:INFO:create_model() successfully completed......................................
2025-02-27 16:41:10,240:INFO:SubProcess create_model() end ==================================
2025-02-27 16:41:10,240:INFO:Creating metrics dataframe
2025-02-27 16:41:10,265:INFO:Initializing Dummy Classifier
2025-02-27 16:41:10,266:INFO:Total runtime is 0.7622672875722251 minutes
2025-02-27 16:41:10,275:INFO:SubProcess create_model() called ==================================
2025-02-27 16:41:10,275:INFO:Initializing create_model()
2025-02-27 16:41:10,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001C297037B50>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:41:10,277:INFO:Checking exceptions
2025-02-27 16:41:10,277:INFO:Importing libraries
2025-02-27 16:41:10,277:INFO:Copying training dataset
2025-02-27 16:41:10,286:INFO:Defining folds
2025-02-27 16:41:10,287:INFO:Declaring metric variables
2025-02-27 16:41:10,293:INFO:Importing untrained model
2025-02-27 16:41:10,301:INFO:Dummy Classifier Imported successfully
2025-02-27 16:41:10,315:INFO:Starting cross validation
2025-02-27 16:41:10,334:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:41:10,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:10,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:10,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:10,392:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:10,397:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:10,412:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:10,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:10,426:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:10,429:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:10,439:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:11,352:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,354:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,359:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,360:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,361:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,362:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,366:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,366:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,370:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,377:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,382:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,396:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,405:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,407:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,453:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,459:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,462:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,462:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,464:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,477:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,482:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,485:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,516:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,519:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,522:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,524:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,524:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,528:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,528:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,530:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,537:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,540:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,542:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,553:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,556:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,560:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:41:11,563:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:11,582:INFO:Calculating mean and std
2025-02-27 16:41:11,584:INFO:Creating metrics dataframe
2025-02-27 16:41:11,591:INFO:Uploading results into container
2025-02-27 16:41:11,591:INFO:Uploading model into container now
2025-02-27 16:41:11,594:INFO:_master_model_container: 15
2025-02-27 16:41:11,594:INFO:_display_container: 2
2025-02-27 16:41:11,594:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-02-27 16:41:11,596:INFO:create_model() successfully completed......................................
2025-02-27 16:41:11,819:INFO:SubProcess create_model() end ==================================
2025-02-27 16:41:11,819:INFO:Creating metrics dataframe
2025-02-27 16:41:11,899:INFO:Initializing create_model()
2025-02-27 16:41:11,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:41:11,899:INFO:Checking exceptions
2025-02-27 16:41:11,905:INFO:Importing libraries
2025-02-27 16:41:11,905:INFO:Copying training dataset
2025-02-27 16:41:11,913:INFO:Defining folds
2025-02-27 16:41:11,913:INFO:Declaring metric variables
2025-02-27 16:41:11,913:INFO:Importing untrained model
2025-02-27 16:41:11,913:INFO:Declaring custom model
2025-02-27 16:41:11,913:INFO:Naive Bayes Imported successfully
2025-02-27 16:41:11,951:INFO:Cross validation set to False
2025-02-27 16:41:11,952:INFO:Fitting Model
2025-02-27 16:41:11,981:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:12,429:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.008203 seconds.
2025-02-27 16:41:12,429:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:41:12,429:INFO:[LightGBM] [Info] Total Bins 124
2025-02-27 16:41:12,429:INFO:[LightGBM] [Info] Number of data points in the train set: 139, number of used features: 7
2025-02-27 16:41:12,429:INFO:[LightGBM] [Info] Start training from score -1.105833
2025-02-27 16:41:12,429:INFO:[LightGBM] [Info] Start training from score -1.063273
2025-02-27 16:41:12,429:INFO:[LightGBM] [Info] Start training from score -1.127811
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,445:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,461:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,524:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,540:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,573:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:12,595:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:41:12,595:INFO:create_model() successfully completed......................................
2025-02-27 16:41:12,727:INFO:Creating Dashboard logs
2025-02-27 16:41:12,736:INFO:Model: Naive Bayes
2025-02-27 16:41:12,826:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-02-27 16:41:13,209:INFO:Initializing predict_model()
2025-02-27 16:41:13,209:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C297043A60>)
2025-02-27 16:41:13,209:INFO:Checking exceptions
2025-02-27 16:41:13,209:INFO:Preloading libraries
2025-02-27 16:41:13,303:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:13,307:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:13,313:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:13,452:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-02-27 16:41:13,587:ERROR:_log_model() for GaussianNB(priors=None, var_smoothing=1e-09) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:13,589:INFO:Creating Dashboard logs
2025-02-27 16:41:13,593:INFO:Model: Quadratic Discriminant Analysis
2025-02-27 16:41:13,664:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2025-02-27 16:41:14,230:ERROR:_log_model() for QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:14,230:INFO:Creating Dashboard logs
2025-02-27 16:41:14,238:INFO:Model: Ridge Classifier
2025-02-27 16:41:14,291:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 42, 'solver': 'auto', 'tol': 0.0001}
2025-02-27 16:41:14,908:ERROR:_log_model() for RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:14,912:INFO:Creating Dashboard logs
2025-02-27 16:41:14,917:INFO:Model: Logistic Regression
2025-02-27 16:41:14,966:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-02-27 16:41:15,681:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:15,681:INFO:Creating Dashboard logs
2025-02-27 16:41:15,692:INFO:Model: Linear Discriminant Analysis
2025-02-27 16:41:15,742:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2025-02-27 16:41:16,457:ERROR:_log_model() for LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:16,460:INFO:Creating Dashboard logs
2025-02-27 16:41:16,466:INFO:Model: Ada Boost Classifier
2025-02-27 16:41:16,513:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 42}
2025-02-27 16:41:17,399:ERROR:_log_model() for AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:17,402:INFO:Creating Dashboard logs
2025-02-27 16:41:17,407:INFO:Model: Decision Tree Classifier
2025-02-27 16:41:17,454:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-02-27 16:41:18,379:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:18,381:INFO:Creating Dashboard logs
2025-02-27 16:41:18,387:INFO:Model: Random Forest Classifier
2025-02-27 16:41:18,431:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
2025-02-27 16:41:19,466:ERROR:_log_model() for RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:19,468:INFO:Creating Dashboard logs
2025-02-27 16:41:19,474:INFO:Model: Gradient Boosting Classifier
2025-02-27 16:41:19,521:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 42, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-02-27 16:41:20,544:ERROR:_log_model() for GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:20,546:INFO:Creating Dashboard logs
2025-02-27 16:41:20,552:INFO:Model: Extra Trees Classifier
2025-02-27 16:41:20,599:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
2025-02-27 16:41:21,702:ERROR:_log_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:21,709:INFO:Creating Dashboard logs
2025-02-27 16:41:21,715:INFO:Model: CatBoost Classifier
2025-02-27 16:41:21,758:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\catboost\core.py", line 3476, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-02-27 16:41:21,758:INFO:Logged params: {}
2025-02-27 16:41:22,925:ERROR:_log_model() for <catboost.core.CatBoostClassifier object at 0x000001C296F933D0> raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:22,925:INFO:Creating Dashboard logs
2025-02-27 16:41:22,929:INFO:Model: SVM - Linear Kernel
2025-02-27 16:41:22,978:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 42, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-02-27 16:41:24,079:ERROR:_log_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:24,083:INFO:Creating Dashboard logs
2025-02-27 16:41:24,087:INFO:Model: K Neighbors Classifier
2025-02-27 16:41:24,136:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-02-27 16:41:25,431:ERROR:_log_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:25,433:INFO:Creating Dashboard logs
2025-02-27 16:41:25,439:INFO:Model: Light Gradient Boosting Machine
2025-02-27 16:41:25,491:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 42, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-02-27 16:41:26,743:ERROR:_log_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:26,745:INFO:Creating Dashboard logs
2025-02-27 16:41:26,750:INFO:Model: Dummy Classifier
2025-02-27 16:41:26,810:INFO:Logged params: {'constant': None, 'random_state': 42, 'strategy': 'prior'}
2025-02-27 16:41:28,021:ERROR:_log_model() for DummyClassifier(constant=None, random_state=42, strategy='prior') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:28,051:INFO:_master_model_container: 15
2025-02-27 16:41:28,051:INFO:_display_container: 2
2025-02-27 16:41:28,051:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:41:28,051:INFO:compare_models() successfully completed......................................
2025-02-27 16:41:28,066:INFO:Initializing evaluate_model()
2025-02-27 16:41:28,066:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-27 16:41:28,082:INFO:Initializing plot_model()
2025-02-27 16:41:28,083:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-27 16:41:28,083:INFO:Checking exceptions
2025-02-27 16:41:28,085:INFO:Preloading libraries
2025-02-27 16:41:28,086:INFO:Copying training dataset
2025-02-27 16:41:28,086:INFO:Plot type: pipeline
2025-02-27 16:41:28,714:INFO:Visual Rendered Successfully
2025-02-27 16:41:28,859:INFO:plot_model() successfully completed......................................
2025-02-27 16:41:28,866:INFO:Initializing plot_model()
2025-02-27 16:41:28,867:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-27 16:41:28,867:INFO:Checking exceptions
2025-02-27 16:41:28,871:INFO:Preloading libraries
2025-02-27 16:41:28,874:INFO:Copying training dataset
2025-02-27 16:41:28,874:INFO:Plot type: confusion_matrix
2025-02-27 16:41:28,984:INFO:Fitting Model
2025-02-27 16:41:28,986:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-02-27 16:41:28,987:INFO:Scoring test/hold-out set
2025-02-27 16:41:29,292:INFO:Visual Rendered Successfully
2025-02-27 16:41:29,450:INFO:plot_model() successfully completed......................................
2025-02-27 16:41:29,450:INFO:Initializing plot_model()
2025-02-27 16:41:29,450:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-27 16:41:29,450:INFO:Checking exceptions
2025-02-27 16:41:29,456:INFO:Preloading libraries
2025-02-27 16:41:29,456:INFO:Copying training dataset
2025-02-27 16:41:29,456:INFO:Plot type: auc
2025-02-27 16:41:29,568:INFO:Fitting Model
2025-02-27 16:41:29,568:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-02-27 16:41:29,568:INFO:Scoring test/hold-out set
2025-02-27 16:41:29,971:INFO:Visual Rendered Successfully
2025-02-27 16:41:30,157:INFO:plot_model() successfully completed......................................
2025-02-27 16:41:30,183:INFO:Initializing predict_model()
2025-02-27 16:41:30,183:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001C29962C0E0>)
2025-02-27 16:41:30,183:INFO:Checking exceptions
2025-02-27 16:41:30,183:INFO:Preloading libraries
2025-02-27 16:41:30,287:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:30,287:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:30,295:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:41:31,629:INFO:Initializing finalize_model()
2025-02-27 16:41:31,629:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 16:41:31,634:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:41:31,641:INFO:Initializing create_model()
2025-02-27 16:41:31,641:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001C2959C65D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:41:31,641:INFO:Checking exceptions
2025-02-27 16:41:31,645:INFO:Importing libraries
2025-02-27 16:41:31,645:INFO:Copying training dataset
2025-02-27 16:41:31,645:INFO:Defining folds
2025-02-27 16:41:31,645:INFO:Declaring metric variables
2025-02-27 16:41:31,645:INFO:Importing untrained model
2025-02-27 16:41:31,645:INFO:Declaring custom model
2025-02-27 16:41:31,647:INFO:Naive Bayes Imported successfully
2025-02-27 16:41:31,663:INFO:Cross validation set to False
2025-02-27 16:41:31,663:INFO:Fitting Model
2025-02-27 16:41:31,682:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:41:31,757:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000110 seconds.
2025-02-27 16:41:31,759:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:41:31,759:INFO:[LightGBM] [Info] Total Bins 163
2025-02-27 16:41:31,759:INFO:[LightGBM] [Info] Number of data points in the train set: 199, number of used features: 7
2025-02-27 16:41:31,759:INFO:[LightGBM] [Info] Start training from score -1.103650
2025-02-27 16:41:31,759:INFO:[LightGBM] [Info] Start training from score -1.073797
2025-02-27 16:41:31,759:INFO:[LightGBM] [Info] Start training from score -1.118918
2025-02-27 16:41:31,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,759:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,761:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,763:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,765:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,767:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,769:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,771:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,771:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,775:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,777:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,778:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,779:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,781:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,783:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,785:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,786:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,787:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,790:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,791:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,792:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,793:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,795:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,797:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,799:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,800:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,802:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,804:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,806:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,808:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,810:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,812:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,813:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,814:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,816:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,817:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,818:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,819:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,821:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,822:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,824:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,826:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,828:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,829:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,831:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,833:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,834:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,835:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,837:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,839:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,841:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,842:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,844:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,845:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,847:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,848:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,849:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,850:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,855:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,856:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,857:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,863:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,864:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,870:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,872:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,874:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,876:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,878:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,882:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,885:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,891:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,892:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,898:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,904:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,906:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,907:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,910:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,911:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,912:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,913:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,914:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:31,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:41:32,016:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:41:32,018:INFO:create_model() successfully completed......................................
2025-02-27 16:41:32,155:INFO:Creating Dashboard logs
2025-02-27 16:41:32,157:INFO:Model: Naive Bayes
2025-02-27 16:41:32,261:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-02-27 16:41:33,991:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:41:33,991:INFO:_master_model_container: 15
2025-02-27 16:41:33,991:INFO:_display_container: 3
2025-02-27 16:41:34,017:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:41:34,017:INFO:finalize_model() successfully completed......................................
2025-02-27 16:41:48,356:INFO:Initializing save_model()
2025-02-27 16:41:48,356:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), model_name=final_wheat_seeds_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 16:41:48,357:INFO:Adding model into prep_pipe
2025-02-27 16:41:48,357:WARNING:Only Model saved as it was a pipeline.
2025-02-27 16:41:48,384:INFO:final_wheat_seeds_model.pkl saved in current working directory
2025-02-27 16:41:48,411:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:41:48,413:INFO:save_model() successfully completed......................................
2025-02-27 16:44:22,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:22,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:22,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:22,507:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:44:24,712:INFO:PyCaret ClassificationExperiment
2025-02-27 16:44:24,712:INFO:Logging name: wheatclassification
2025-02-27 16:44:24,712:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 16:44:24,712:INFO:version 3.3.2
2025-02-27 16:44:24,712:INFO:Initializing setup()
2025-02-27 16:44:24,712:INFO:self.USI: cf37
2025-02-27 16:44:24,712:INFO:self._variable_keys: {'memory', 'data', 'logging_param', 'fold_shuffle_param', 'gpu_param', 'X_train', 'n_jobs_param', 'exp_id', 'USI', 'y_train', '_available_plots', '_ml_usecase', 'y', 'target_param', 'X_test', 'idx', 'fold_groups_param', 'seed', 'fold_generator', 'is_multiclass', 'fix_imbalance', 'pipeline', 'gpu_n_jobs_param', 'html_param', 'log_plots_param', 'X', 'exp_name_log', 'y_test'}
2025-02-27 16:44:24,712:INFO:Checking environment
2025-02-27 16:44:24,712:INFO:python_version: 3.11.11
2025-02-27 16:44:24,712:INFO:python_build: ('main', 'Dec 11 2024 16:34:19')
2025-02-27 16:44:24,712:INFO:machine: AMD64
2025-02-27 16:44:24,712:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-27 16:44:24,712:INFO:Memory: svmem(total=16855433216, available=7537938432, percent=55.3, used=9317494784, free=7537938432)
2025-02-27 16:44:24,712:INFO:Physical Core: 10
2025-02-27 16:44:24,712:INFO:Logical Core: 16
2025-02-27 16:44:24,712:INFO:Checking libraries
2025-02-27 16:44:24,712:INFO:System:
2025-02-27 16:44:24,712:INFO:    python: 3.11.11 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:34:19) [MSC v.1929 64 bit (AMD64)]
2025-02-27 16:44:24,712:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\python.exe
2025-02-27 16:44:24,712:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-27 16:44:24,712:INFO:PyCaret required dependencies:
2025-02-27 16:44:24,996:INFO:                 pip: 25.0
2025-02-27 16:44:24,996:INFO:          setuptools: 75.8.2
2025-02-27 16:44:24,996:INFO:             pycaret: 3.3.2
2025-02-27 16:44:24,996:INFO:             IPython: 8.32.0
2025-02-27 16:44:24,996:INFO:          ipywidgets: 8.1.5
2025-02-27 16:44:24,996:INFO:                tqdm: 4.67.1
2025-02-27 16:44:24,996:INFO:               numpy: 1.26.4
2025-02-27 16:44:24,996:INFO:              pandas: 1.5.3
2025-02-27 16:44:24,996:INFO:              jinja2: 3.1.5
2025-02-27 16:44:24,996:INFO:               scipy: 1.11.4
2025-02-27 16:44:24,996:INFO:              joblib: 1.3.2
2025-02-27 16:44:24,996:INFO:             sklearn: 1.4.2
2025-02-27 16:44:24,996:INFO:                pyod: 2.0.3
2025-02-27 16:44:24,996:INFO:            imblearn: 0.13.0
2025-02-27 16:44:24,996:INFO:   category_encoders: 2.7.0
2025-02-27 16:44:24,996:INFO:            lightgbm: 4.6.0
2025-02-27 16:44:24,996:INFO:               numba: 0.61.0
2025-02-27 16:44:24,996:INFO:            requests: 2.32.3
2025-02-27 16:44:24,996:INFO:          matplotlib: 3.7.5
2025-02-27 16:44:24,996:INFO:          scikitplot: 0.3.7
2025-02-27 16:44:24,996:INFO:         yellowbrick: 1.5
2025-02-27 16:44:24,996:INFO:              plotly: 5.24.1
2025-02-27 16:44:24,996:INFO:    plotly-resampler: Not installed
2025-02-27 16:44:24,996:INFO:             kaleido: 0.2.1
2025-02-27 16:44:24,996:INFO:           schemdraw: 0.15
2025-02-27 16:44:24,996:INFO:         statsmodels: 0.14.4
2025-02-27 16:44:24,996:INFO:              sktime: 0.26.0
2025-02-27 16:44:24,996:INFO:               tbats: 1.1.3
2025-02-27 16:44:24,996:INFO:            pmdarima: 2.0.4
2025-02-27 16:44:24,996:INFO:              psutil: 7.0.0
2025-02-27 16:44:24,996:INFO:          markupsafe: 3.0.2
2025-02-27 16:44:24,996:INFO:             pickle5: Not installed
2025-02-27 16:44:25,004:INFO:         cloudpickle: 3.1.1
2025-02-27 16:44:25,004:INFO:         deprecation: 2.1.0
2025-02-27 16:44:25,004:INFO:              xxhash: 3.5.0
2025-02-27 16:44:25,004:INFO:           wurlitzer: Not installed
2025-02-27 16:44:25,004:INFO:PyCaret optional dependencies:
2025-02-27 16:44:25,037:INFO:                shap: Not installed
2025-02-27 16:44:25,037:INFO:           interpret: Not installed
2025-02-27 16:44:25,037:INFO:                umap: Not installed
2025-02-27 16:44:25,037:INFO:     ydata_profiling: Not installed
2025-02-27 16:44:25,037:INFO:  explainerdashboard: Not installed
2025-02-27 16:44:25,037:INFO:             autoviz: Not installed
2025-02-27 16:44:25,037:INFO:           fairlearn: Not installed
2025-02-27 16:44:25,037:INFO:          deepchecks: Not installed
2025-02-27 16:44:25,037:INFO:             xgboost: Not installed
2025-02-27 16:44:25,037:INFO:            catboost: 1.2.3
2025-02-27 16:44:25,037:INFO:              kmodes: Not installed
2025-02-27 16:44:25,037:INFO:             mlxtend: Not installed
2025-02-27 16:44:25,037:INFO:       statsforecast: Not installed
2025-02-27 16:44:25,037:INFO:        tune_sklearn: Not installed
2025-02-27 16:44:25,037:INFO:                 ray: Not installed
2025-02-27 16:44:25,037:INFO:            hyperopt: Not installed
2025-02-27 16:44:25,037:INFO:              optuna: Not installed
2025-02-27 16:44:25,037:INFO:               skopt: Not installed
2025-02-27 16:44:25,037:INFO:              mlflow: 2.20.2
2025-02-27 16:44:25,037:INFO:              gradio: Not installed
2025-02-27 16:44:25,037:INFO:             fastapi: Not installed
2025-02-27 16:44:25,037:INFO:             uvicorn: Not installed
2025-02-27 16:44:25,037:INFO:              m2cgen: Not installed
2025-02-27 16:44:25,037:INFO:           evidently: Not installed
2025-02-27 16:44:25,037:INFO:               fugue: Not installed
2025-02-27 16:44:25,037:INFO:           streamlit: 1.42.2
2025-02-27 16:44:25,037:INFO:             prophet: Not installed
2025-02-27 16:44:25,037:INFO:None
2025-02-27 16:44:25,037:INFO:Set up data.
2025-02-27 16:44:25,053:INFO:Set up folding strategy.
2025-02-27 16:44:25,053:INFO:Set up train/test split.
2025-02-27 16:44:25,053:INFO:Set up index.
2025-02-27 16:44:25,053:INFO:Assigning column types.
2025-02-27 16:44:25,069:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:44:25,281:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:25,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:44:25,403:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:25,403:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:44:25,601:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:44:25,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:44:25,691:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:25,691:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:44:25,691:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:44:25,912:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:44:26,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:26,024:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:44:26,152:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:44:26,281:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:26,281:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:44:26,281:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 16:44:26,632:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:26,632:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:44:26,994:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:26,994:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:44:26,994:INFO:Preparing preprocessing pipeline...
2025-02-27 16:44:26,994:INFO:Set up label encoding.
2025-02-27 16:44:26,994:INFO:Set up simple imputation.
2025-02-27 16:44:26,994:INFO:Set up binning of numerical features.
2025-02-27 16:44:27,010:INFO:Set up feature normalization.
2025-02-27 16:44:27,010:INFO:Set up feature selection.
2025-02-27 16:44:27,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:27,288:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:44:27,445:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:44:27,481:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:44:27,481:INFO:Creating final display dataframe.
2025-02-27 16:44:27,604:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target                 Type
2                   Target type           Multiclass
3                Target mapping     1: 0, 2: 1, 3: 2
4           Original data shape             (199, 8)
5        Transformed data shape             (199, 2)
6   Transformed train set shape             (139, 2)
7    Transformed test set shape              (60, 2)
8              Numeric features                    7
9                    Preprocess                 True
10              Imputation type               simple
11           Numeric imputation                 mean
12       Categorical imputation                 mode
13                    Normalize                 True
14             Normalize method               zscore
15            Feature selection                 True
16     Feature selection method              classic
17  Feature selection estimator             lightgbm
18  Number of features selected                  0.2
19               Fold Generator      StratifiedKFold
20                  Fold Number                   10
21                     CPU Jobs                   -1
22                      Use GPU                False
23               Log Experiment         MlflowLogger
24              Experiment Name  wheatclassification
25                          USI                 cf37
2025-02-27 16:44:27,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:27,728:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:44:27,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-02-27 16:44:27,959:INFO:Soft dependency imported: catboost: 1.2.3
2025-02-27 16:44:27,959:INFO:Logging experiment in loggers
2025-02-27 16:44:28,677:INFO:SubProcess save_model() called ==================================
2025-02-27 16:44:28,769:INFO:Initializing save_model()
2025-02-27 16:44:28,769:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), model_name=C:\Users\JUPYTE~1\AppData\Local\Temp\tmp873as8jh\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 16:44:28,769:INFO:Adding model into prep_pipe
2025-02-27 16:44:28,769:WARNING:Only Model saved as it was a pipeline.
2025-02-27 16:44:28,785:INFO:C:\Users\JUPYTE~1\AppData\Local\Temp\tmp873as8jh\Transformation Pipeline.pkl saved in current working directory
2025-02-27 16:44:28,841:INFO:Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:44:28,841:INFO:save_model() successfully completed......................................
2025-02-27 16:44:28,967:INFO:SubProcess save_model() end ==================================
2025-02-27 16:44:29,034:INFO:setup() successfully completed in 3.3s...............
2025-02-27 16:44:29,051:INFO:Initializing compare_models()
2025-02-27 16:44:29,059:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2025-02-27 16:44:29,059:INFO:Checking exceptions
2025-02-27 16:44:29,067:INFO:Preparing display monitor
2025-02-27 16:44:29,124:INFO:Initializing Logistic Regression
2025-02-27 16:44:29,124:INFO:Total runtime is 0.0 minutes
2025-02-27 16:44:29,128:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:29,128:INFO:Initializing create_model()
2025-02-27 16:44:29,128:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:29,132:INFO:Checking exceptions
2025-02-27 16:44:29,132:INFO:Importing libraries
2025-02-27 16:44:29,132:INFO:Copying training dataset
2025-02-27 16:44:29,141:INFO:Defining folds
2025-02-27 16:44:29,141:INFO:Declaring metric variables
2025-02-27 16:44:29,149:INFO:Importing untrained model
2025-02-27 16:44:29,157:INFO:Logistic Regression Imported successfully
2025-02-27 16:44:29,173:INFO:Starting cross validation
2025-02-27 16:44:29,194:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:34,430:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:34,562:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:34,638:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:34,640:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:34,645:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:34,692:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:34,701:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:34,701:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:34,705:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:34,708:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:35,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,697:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,697:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,703:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,703:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,706:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,706:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,729:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,741:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,745:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,747:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,752:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,756:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,785:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,791:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,795:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,797:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,803:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,814:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,820:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,824:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,830:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,834:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,840:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,844:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,904:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,910:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,914:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,918:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,918:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,921:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,921:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,930:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,951:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:35,955:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,956:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,961:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:35,972:INFO:Calculating mean and std
2025-02-27 16:44:35,975:INFO:Creating metrics dataframe
2025-02-27 16:44:35,986:INFO:Uploading results into container
2025-02-27 16:44:35,989:INFO:Uploading model into container now
2025-02-27 16:44:35,989:INFO:_master_model_container: 1
2025-02-27 16:44:35,989:INFO:_display_container: 2
2025-02-27 16:44:35,989:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-27 16:44:35,989:INFO:create_model() successfully completed......................................
2025-02-27 16:44:36,197:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:36,197:INFO:Creating metrics dataframe
2025-02-27 16:44:36,238:INFO:Initializing K Neighbors Classifier
2025-02-27 16:44:36,238:INFO:Total runtime is 0.1185734232266744 minutes
2025-02-27 16:44:36,250:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:36,250:INFO:Initializing create_model()
2025-02-27 16:44:36,250:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:36,250:INFO:Checking exceptions
2025-02-27 16:44:36,250:INFO:Importing libraries
2025-02-27 16:44:36,250:INFO:Copying training dataset
2025-02-27 16:44:36,256:INFO:Defining folds
2025-02-27 16:44:36,256:INFO:Declaring metric variables
2025-02-27 16:44:36,268:INFO:Importing untrained model
2025-02-27 16:44:36,274:INFO:K Neighbors Classifier Imported successfully
2025-02-27 16:44:36,288:INFO:Starting cross validation
2025-02-27 16:44:36,310:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:36,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:36,390:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:36,390:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:36,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:38,541:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,549:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,556:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,600:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,606:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,614:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,738:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,744:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,748:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,755:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,759:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:38,763:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:42,443:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:42,483:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:42,491:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:42,496:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:42,544:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:42,818:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:43,485:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,492:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,500:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,517:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,523:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,530:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,532:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,536:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,556:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,562:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,568:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,657:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,663:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,671:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,770:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,778:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,786:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:43,814:INFO:Calculating mean and std
2025-02-27 16:44:43,818:INFO:Creating metrics dataframe
2025-02-27 16:44:43,818:INFO:Uploading results into container
2025-02-27 16:44:43,834:INFO:Uploading model into container now
2025-02-27 16:44:43,834:INFO:_master_model_container: 2
2025-02-27 16:44:43,834:INFO:_display_container: 2
2025-02-27 16:44:43,834:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-27 16:44:43,834:INFO:create_model() successfully completed......................................
2025-02-27 16:44:44,053:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:44,053:INFO:Creating metrics dataframe
2025-02-27 16:44:44,083:INFO:Initializing Naive Bayes
2025-02-27 16:44:44,083:INFO:Total runtime is 0.24931092262268068 minutes
2025-02-27 16:44:44,095:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:44,095:INFO:Initializing create_model()
2025-02-27 16:44:44,095:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:44,098:INFO:Checking exceptions
2025-02-27 16:44:44,098:INFO:Importing libraries
2025-02-27 16:44:44,098:INFO:Copying training dataset
2025-02-27 16:44:44,108:INFO:Defining folds
2025-02-27 16:44:44,108:INFO:Declaring metric variables
2025-02-27 16:44:44,116:INFO:Importing untrained model
2025-02-27 16:44:44,124:INFO:Naive Bayes Imported successfully
2025-02-27 16:44:44,148:INFO:Starting cross validation
2025-02-27 16:44:44,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:44,242:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:44,265:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:44,270:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:44,291:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:44,294:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:44,295:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:44,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:44,298:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:44,300:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:44,303:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,186:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,186:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,191:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,199:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,199:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,243:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,256:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,256:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,258:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,266:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,299:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,304:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,306:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,316:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,374:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,379:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,396:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,401:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,405:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,408:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,414:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:45,426:INFO:Calculating mean and std
2025-02-27 16:44:45,428:INFO:Creating metrics dataframe
2025-02-27 16:44:45,436:INFO:Uploading results into container
2025-02-27 16:44:45,436:INFO:Uploading model into container now
2025-02-27 16:44:45,438:INFO:_master_model_container: 3
2025-02-27 16:44:45,438:INFO:_display_container: 2
2025-02-27 16:44:45,438:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:44:45,438:INFO:create_model() successfully completed......................................
2025-02-27 16:44:45,554:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:45,554:INFO:Creating metrics dataframe
2025-02-27 16:44:45,585:INFO:Initializing Decision Tree Classifier
2025-02-27 16:44:45,585:INFO:Total runtime is 0.27435318231582645 minutes
2025-02-27 16:44:45,603:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:45,603:INFO:Initializing create_model()
2025-02-27 16:44:45,603:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:45,603:INFO:Checking exceptions
2025-02-27 16:44:45,603:INFO:Importing libraries
2025-02-27 16:44:45,609:INFO:Copying training dataset
2025-02-27 16:44:45,609:INFO:Defining folds
2025-02-27 16:44:45,609:INFO:Declaring metric variables
2025-02-27 16:44:45,617:INFO:Importing untrained model
2025-02-27 16:44:45,628:INFO:Decision Tree Classifier Imported successfully
2025-02-27 16:44:45,642:INFO:Starting cross validation
2025-02-27 16:44:45,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:45,712:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,716:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,728:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,745:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,752:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,760:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,770:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,775:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,785:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:45,793:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,078:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,087:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,096:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,106:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,112:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,118:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,137:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,143:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,164:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,175:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,182:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,186:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,197:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,204:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,210:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,226:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,233:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,239:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,257:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,261:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,285:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,291:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,297:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,320:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,324:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,332:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:47,353:INFO:Calculating mean and std
2025-02-27 16:44:47,355:INFO:Creating metrics dataframe
2025-02-27 16:44:47,363:INFO:Uploading results into container
2025-02-27 16:44:47,365:INFO:Uploading model into container now
2025-02-27 16:44:47,366:INFO:_master_model_container: 4
2025-02-27 16:44:47,366:INFO:_display_container: 2
2025-02-27 16:44:47,366:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-02-27 16:44:47,366:INFO:create_model() successfully completed......................................
2025-02-27 16:44:47,525:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:47,525:INFO:Creating metrics dataframe
2025-02-27 16:44:47,540:INFO:Initializing SVM - Linear Kernel
2025-02-27 16:44:47,540:INFO:Total runtime is 0.3069390972455343 minutes
2025-02-27 16:44:47,558:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:47,565:INFO:Initializing create_model()
2025-02-27 16:44:47,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:47,565:INFO:Checking exceptions
2025-02-27 16:44:47,565:INFO:Importing libraries
2025-02-27 16:44:47,565:INFO:Copying training dataset
2025-02-27 16:44:47,573:INFO:Defining folds
2025-02-27 16:44:47,573:INFO:Declaring metric variables
2025-02-27 16:44:47,581:INFO:Importing untrained model
2025-02-27 16:44:47,595:INFO:SVM - Linear Kernel Imported successfully
2025-02-27 16:44:47,606:INFO:Starting cross validation
2025-02-27 16:44:47,631:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:47,688:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,688:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,704:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,704:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,720:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,720:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,725:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:47,736:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:48,821:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:48,821:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:48,823:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:48,825:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,825:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,825:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,833:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,835:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:48,840:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,840:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:48,846:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,848:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,864:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:48,868:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,869:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:48,872:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,878:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,878:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,880:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:48,882:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:48,884:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,884:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,886:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:48,890:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,897:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,903:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,941:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:48,943:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,948:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,956:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,964:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:48,968:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,974:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:48,978:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:49,019:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:49,023:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:49,027:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:49,027:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:49,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:49,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:49,033:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:49,033:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:49,037:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:49,039:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:49,053:INFO:Calculating mean and std
2025-02-27 16:44:49,053:INFO:Creating metrics dataframe
2025-02-27 16:44:49,059:INFO:Uploading results into container
2025-02-27 16:44:49,059:INFO:Uploading model into container now
2025-02-27 16:44:49,071:INFO:_master_model_container: 5
2025-02-27 16:44:49,071:INFO:_display_container: 2
2025-02-27 16:44:49,071:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-27 16:44:49,071:INFO:create_model() successfully completed......................................
2025-02-27 16:44:49,185:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:49,185:INFO:Creating metrics dataframe
2025-02-27 16:44:49,203:INFO:Initializing Ridge Classifier
2025-02-27 16:44:49,203:INFO:Total runtime is 0.3346474488576254 minutes
2025-02-27 16:44:49,219:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:49,219:INFO:Initializing create_model()
2025-02-27 16:44:49,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:49,219:INFO:Checking exceptions
2025-02-27 16:44:49,219:INFO:Importing libraries
2025-02-27 16:44:49,219:INFO:Copying training dataset
2025-02-27 16:44:49,227:INFO:Defining folds
2025-02-27 16:44:49,227:INFO:Declaring metric variables
2025-02-27 16:44:49,231:INFO:Importing untrained model
2025-02-27 16:44:49,246:INFO:Ridge Classifier Imported successfully
2025-02-27 16:44:49,256:INFO:Starting cross validation
2025-02-27 16:44:49,281:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:49,321:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:49,338:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:49,362:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:49,373:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:49,383:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:49,383:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:49,394:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:49,394:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:49,403:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:49,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:50,439:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,443:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,447:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,451:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:50,453:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,467:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,471:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,477:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,481:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:50,483:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,528:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,532:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,532:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,534:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,538:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,541:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,543:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:50,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,547:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,567:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,569:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,579:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,582:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,584:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:50,592:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,594:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,598:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,602:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,608:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,612:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,612:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,616:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,622:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,628:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,645:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,649:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,654:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,656:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:50,658:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,724:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:50,728:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,739:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:44:50,743:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:50,763:INFO:Calculating mean and std
2025-02-27 16:44:50,765:INFO:Creating metrics dataframe
2025-02-27 16:44:50,771:INFO:Uploading results into container
2025-02-27 16:44:50,771:INFO:Uploading model into container now
2025-02-27 16:44:50,771:INFO:_master_model_container: 6
2025-02-27 16:44:50,778:INFO:_display_container: 2
2025-02-27 16:44:50,778:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-02-27 16:44:50,778:INFO:create_model() successfully completed......................................
2025-02-27 16:44:50,935:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:50,935:INFO:Creating metrics dataframe
2025-02-27 16:44:50,967:INFO:Initializing Random Forest Classifier
2025-02-27 16:44:50,967:INFO:Total runtime is 0.3640462756156922 minutes
2025-02-27 16:44:50,987:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:50,991:INFO:Initializing create_model()
2025-02-27 16:44:50,991:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:50,991:INFO:Checking exceptions
2025-02-27 16:44:50,991:INFO:Importing libraries
2025-02-27 16:44:50,991:INFO:Copying training dataset
2025-02-27 16:44:51,004:INFO:Defining folds
2025-02-27 16:44:51,004:INFO:Declaring metric variables
2025-02-27 16:44:51,008:INFO:Importing untrained model
2025-02-27 16:44:51,024:INFO:Random Forest Classifier Imported successfully
2025-02-27 16:44:51,033:INFO:Starting cross validation
2025-02-27 16:44:51,057:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:51,104:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:51,106:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:51,114:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:51,130:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:51,146:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:51,146:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:51,162:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:51,162:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:51,162:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:51,177:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:52,766:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,772:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,781:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,809:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,818:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,822:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,828:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,833:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,844:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,849:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,855:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,860:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,986:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:52,994:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,005:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,066:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,070:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,076:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,076:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,082:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,087:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,089:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,089:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,101:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,101:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,113:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,118:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,177:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,180:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,194:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:53,211:INFO:Calculating mean and std
2025-02-27 16:44:53,212:INFO:Creating metrics dataframe
2025-02-27 16:44:53,218:INFO:Uploading results into container
2025-02-27 16:44:53,226:INFO:Uploading model into container now
2025-02-27 16:44:53,226:INFO:_master_model_container: 7
2025-02-27 16:44:53,226:INFO:_display_container: 2
2025-02-27 16:44:53,226:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 16:44:53,226:INFO:create_model() successfully completed......................................
2025-02-27 16:44:53,418:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:53,418:INFO:Creating metrics dataframe
2025-02-27 16:44:53,449:INFO:Initializing Quadratic Discriminant Analysis
2025-02-27 16:44:53,449:INFO:Total runtime is 0.4054191907246908 minutes
2025-02-27 16:44:53,449:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:53,449:INFO:Initializing create_model()
2025-02-27 16:44:53,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:53,449:INFO:Checking exceptions
2025-02-27 16:44:53,449:INFO:Importing libraries
2025-02-27 16:44:53,462:INFO:Copying training dataset
2025-02-27 16:44:53,466:INFO:Defining folds
2025-02-27 16:44:53,471:INFO:Declaring metric variables
2025-02-27 16:44:53,471:INFO:Importing untrained model
2025-02-27 16:44:53,479:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-27 16:44:53,496:INFO:Starting cross validation
2025-02-27 16:44:53,511:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:53,560:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:53,561:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:53,577:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:53,593:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:53,593:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:53,609:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:53,609:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:53,617:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:53,627:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:54,681:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,685:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,691:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,701:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,705:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,710:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,715:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,723:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,733:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,735:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,737:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,741:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,743:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,751:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,773:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,777:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,782:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,782:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,784:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,788:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,791:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,797:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,801:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,807:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,813:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,835:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,837:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,843:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,847:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,883:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,885:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,890:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,896:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,910:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:54,912:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,918:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,923:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:54,941:INFO:Calculating mean and std
2025-02-27 16:44:54,943:INFO:Creating metrics dataframe
2025-02-27 16:44:54,946:INFO:Uploading results into container
2025-02-27 16:44:54,946:INFO:Uploading model into container now
2025-02-27 16:44:54,954:INFO:_master_model_container: 8
2025-02-27 16:44:54,954:INFO:_display_container: 2
2025-02-27 16:44:54,954:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-27 16:44:54,954:INFO:create_model() successfully completed......................................
2025-02-27 16:44:55,137:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:55,137:INFO:Creating metrics dataframe
2025-02-27 16:44:55,169:INFO:Initializing Ada Boost Classifier
2025-02-27 16:44:55,169:INFO:Total runtime is 0.43407971461613976 minutes
2025-02-27 16:44:55,181:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:55,181:INFO:Initializing create_model()
2025-02-27 16:44:55,181:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:55,181:INFO:Checking exceptions
2025-02-27 16:44:55,181:INFO:Importing libraries
2025-02-27 16:44:55,181:INFO:Copying training dataset
2025-02-27 16:44:55,193:INFO:Defining folds
2025-02-27 16:44:55,193:INFO:Declaring metric variables
2025-02-27 16:44:55,201:INFO:Importing untrained model
2025-02-27 16:44:55,210:INFO:Ada Boost Classifier Imported successfully
2025-02-27 16:44:55,226:INFO:Starting cross validation
2025-02-27 16:44:55,242:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:55,303:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:55,305:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:55,308:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:55,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:55,315:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:55,325:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:55,331:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:55,340:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:55,352:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:55,354:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:56,299:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,301:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,357:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,399:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,511:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,568:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,572:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,579:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,579:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,581:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,586:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,598:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,615:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,617:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,623:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,637:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,639:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,643:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,649:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,655:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,660:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,662:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,670:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,674:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,676:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,682:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,692:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,713:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,733:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 16:44:56,779:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,782:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,787:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,792:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,881:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,881:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,891:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,896:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,922:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,922:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,928:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,933:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,933:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:56,944:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,944:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,953:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:56,963:INFO:Calculating mean and std
2025-02-27 16:44:56,963:INFO:Creating metrics dataframe
2025-02-27 16:44:56,963:INFO:Uploading results into container
2025-02-27 16:44:56,963:INFO:Uploading model into container now
2025-02-27 16:44:56,963:INFO:_master_model_container: 9
2025-02-27 16:44:56,963:INFO:_display_container: 2
2025-02-27 16:44:56,963:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-27 16:44:56,963:INFO:create_model() successfully completed......................................
2025-02-27 16:44:57,134:INFO:SubProcess create_model() end ==================================
2025-02-27 16:44:57,134:INFO:Creating metrics dataframe
2025-02-27 16:44:57,166:INFO:Initializing Gradient Boosting Classifier
2025-02-27 16:44:57,166:INFO:Total runtime is 0.46736148198445643 minutes
2025-02-27 16:44:57,166:INFO:SubProcess create_model() called ==================================
2025-02-27 16:44:57,166:INFO:Initializing create_model()
2025-02-27 16:44:57,166:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:44:57,166:INFO:Checking exceptions
2025-02-27 16:44:57,166:INFO:Importing libraries
2025-02-27 16:44:57,166:INFO:Copying training dataset
2025-02-27 16:44:57,189:INFO:Defining folds
2025-02-27 16:44:57,190:INFO:Declaring metric variables
2025-02-27 16:44:57,190:INFO:Importing untrained model
2025-02-27 16:44:57,215:INFO:Gradient Boosting Classifier Imported successfully
2025-02-27 16:44:57,227:INFO:Starting cross validation
2025-02-27 16:44:57,279:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:44:57,324:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:57,324:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:57,351:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:57,351:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:57,367:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:57,372:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:57,372:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:57,393:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:57,393:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:57,393:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:44:59,185:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:59,192:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,198:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,203:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,227:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:59,231:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,238:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:59,241:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,243:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,243:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,246:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,250:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,282:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:59,284:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,296:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,302:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,322:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:59,322:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:59,324:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,330:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,332:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,338:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,579:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:59,579:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,891:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:59,899:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,899:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,907:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,923:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:44:59,930:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,940:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:44:59,940:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:00,001:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:00,002:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:00,012:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:00,014:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:00,032:INFO:Calculating mean and std
2025-02-27 16:45:00,034:INFO:Creating metrics dataframe
2025-02-27 16:45:00,034:INFO:Uploading results into container
2025-02-27 16:45:00,034:INFO:Uploading model into container now
2025-02-27 16:45:00,034:INFO:_master_model_container: 10
2025-02-27 16:45:00,034:INFO:_display_container: 2
2025-02-27 16:45:00,050:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-27 16:45:00,050:INFO:create_model() successfully completed......................................
2025-02-27 16:45:00,225:INFO:SubProcess create_model() end ==================================
2025-02-27 16:45:00,225:INFO:Creating metrics dataframe
2025-02-27 16:45:00,257:INFO:Initializing Linear Discriminant Analysis
2025-02-27 16:45:00,257:INFO:Total runtime is 0.518888262907664 minutes
2025-02-27 16:45:00,265:INFO:SubProcess create_model() called ==================================
2025-02-27 16:45:00,272:INFO:Initializing create_model()
2025-02-27 16:45:00,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:45:00,272:INFO:Checking exceptions
2025-02-27 16:45:00,272:INFO:Importing libraries
2025-02-27 16:45:00,272:INFO:Copying training dataset
2025-02-27 16:45:00,277:INFO:Defining folds
2025-02-27 16:45:00,277:INFO:Declaring metric variables
2025-02-27 16:45:00,290:INFO:Importing untrained model
2025-02-27 16:45:00,292:INFO:Linear Discriminant Analysis Imported successfully
2025-02-27 16:45:00,309:INFO:Starting cross validation
2025-02-27 16:45:00,330:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:45:00,392:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:00,395:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:00,403:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:00,415:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:00,427:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:00,427:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:00,427:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:00,437:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:00,437:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:00,437:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:01,436:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,440:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,446:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,452:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,452:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,454:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,458:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,456:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,462:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,468:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,468:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,473:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,503:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,515:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,517:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,519:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,523:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,525:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,528:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,539:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,544:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,550:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,550:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,554:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,556:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,559:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,564:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,575:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,577:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,582:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,592:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,594:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,600:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,604:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,702:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 16:45:01,706:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,712:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,721:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:01,745:INFO:Calculating mean and std
2025-02-27 16:45:01,747:INFO:Creating metrics dataframe
2025-02-27 16:45:01,747:INFO:Uploading results into container
2025-02-27 16:45:01,747:INFO:Uploading model into container now
2025-02-27 16:45:01,763:INFO:_master_model_container: 11
2025-02-27 16:45:01,763:INFO:_display_container: 2
2025-02-27 16:45:01,763:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-27 16:45:01,763:INFO:create_model() successfully completed......................................
2025-02-27 16:45:01,922:INFO:SubProcess create_model() end ==================================
2025-02-27 16:45:01,922:INFO:Creating metrics dataframe
2025-02-27 16:45:01,970:INFO:Initializing Extra Trees Classifier
2025-02-27 16:45:01,970:INFO:Total runtime is 0.5474282423655192 minutes
2025-02-27 16:45:01,992:INFO:SubProcess create_model() called ==================================
2025-02-27 16:45:01,994:INFO:Initializing create_model()
2025-02-27 16:45:01,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:45:01,994:INFO:Checking exceptions
2025-02-27 16:45:01,994:INFO:Importing libraries
2025-02-27 16:45:01,994:INFO:Copying training dataset
2025-02-27 16:45:02,002:INFO:Defining folds
2025-02-27 16:45:02,002:INFO:Declaring metric variables
2025-02-27 16:45:02,016:INFO:Importing untrained model
2025-02-27 16:45:02,020:INFO:Extra Trees Classifier Imported successfully
2025-02-27 16:45:02,042:INFO:Starting cross validation
2025-02-27 16:45:02,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:45:02,108:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:02,108:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:02,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:02,141:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:02,148:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:02,148:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:02,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:02,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:02,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:02,189:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:03,667:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,675:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,683:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,697:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,703:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,718:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,723:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,734:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,754:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,760:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,766:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,768:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,768:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,779:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,888:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,888:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,899:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,901:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,906:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,909:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,927:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,936:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,940:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,940:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,952:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:03,952:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:04,047:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:04,053:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:04,053:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:04,074:INFO:Calculating mean and std
2025-02-27 16:45:04,074:INFO:Creating metrics dataframe
2025-02-27 16:45:04,079:INFO:Uploading results into container
2025-02-27 16:45:04,079:INFO:Uploading model into container now
2025-02-27 16:45:04,079:INFO:_master_model_container: 12
2025-02-27 16:45:04,079:INFO:_display_container: 2
2025-02-27 16:45:04,079:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-02-27 16:45:04,079:INFO:create_model() successfully completed......................................
2025-02-27 16:45:04,220:INFO:SubProcess create_model() end ==================================
2025-02-27 16:45:04,220:INFO:Creating metrics dataframe
2025-02-27 16:45:04,246:INFO:Initializing Light Gradient Boosting Machine
2025-02-27 16:45:04,246:INFO:Total runtime is 0.5853658318519592 minutes
2025-02-27 16:45:04,255:INFO:SubProcess create_model() called ==================================
2025-02-27 16:45:04,260:INFO:Initializing create_model()
2025-02-27 16:45:04,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:45:04,260:INFO:Checking exceptions
2025-02-27 16:45:04,260:INFO:Importing libraries
2025-02-27 16:45:04,260:INFO:Copying training dataset
2025-02-27 16:45:04,271:INFO:Defining folds
2025-02-27 16:45:04,271:INFO:Declaring metric variables
2025-02-27 16:45:04,282:INFO:Importing untrained model
2025-02-27 16:45:04,290:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 16:45:04,295:INFO:Starting cross validation
2025-02-27 16:45:04,322:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:45:04,369:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:04,369:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:04,374:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:04,385:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:04,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:04,406:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:04,406:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:04,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:04,427:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:04,427:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:06,780:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,786:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,792:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,814:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,819:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,824:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,893:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,901:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,905:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,948:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,958:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,966:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,979:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,985:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,993:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,999:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:06,999:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,003:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,003:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,022:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,035:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,039:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,046:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,066:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,072:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,076:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,149:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,153:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,159:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:07,174:INFO:Calculating mean and std
2025-02-27 16:45:07,175:INFO:Creating metrics dataframe
2025-02-27 16:45:07,183:INFO:Uploading results into container
2025-02-27 16:45:07,185:INFO:Uploading model into container now
2025-02-27 16:45:07,185:INFO:_master_model_container: 13
2025-02-27 16:45:07,187:INFO:_display_container: 2
2025-02-27 16:45:07,187:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-27 16:45:07,189:INFO:create_model() successfully completed......................................
2025-02-27 16:45:07,335:INFO:SubProcess create_model() end ==================================
2025-02-27 16:45:07,335:INFO:Creating metrics dataframe
2025-02-27 16:45:07,367:INFO:Initializing CatBoost Classifier
2025-02-27 16:45:07,367:INFO:Total runtime is 0.6373761574427287 minutes
2025-02-27 16:45:07,386:INFO:SubProcess create_model() called ==================================
2025-02-27 16:45:07,386:INFO:Initializing create_model()
2025-02-27 16:45:07,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:45:07,390:INFO:Checking exceptions
2025-02-27 16:45:07,390:INFO:Importing libraries
2025-02-27 16:45:07,390:INFO:Copying training dataset
2025-02-27 16:45:07,398:INFO:Defining folds
2025-02-27 16:45:07,398:INFO:Declaring metric variables
2025-02-27 16:45:07,412:INFO:Importing untrained model
2025-02-27 16:45:07,422:INFO:CatBoost Classifier Imported successfully
2025-02-27 16:45:07,439:INFO:Starting cross validation
2025-02-27 16:45:07,463:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:45:08,670:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:08,674:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:08,680:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:08,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:08,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:08,696:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:08,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:08,707:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:08,730:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:08,756:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:13,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,392:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,451:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,456:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,463:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,469:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,475:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,479:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,600:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,606:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,609:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,611:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,618:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,631:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,634:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,642:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,652:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,661:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,667:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,681:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,683:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,697:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,786:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,792:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,796:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,871:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,879:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,887:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:13,910:INFO:Calculating mean and std
2025-02-27 16:45:13,910:INFO:Creating metrics dataframe
2025-02-27 16:45:13,923:INFO:Uploading results into container
2025-02-27 16:45:13,925:INFO:Uploading model into container now
2025-02-27 16:45:13,927:INFO:_master_model_container: 14
2025-02-27 16:45:13,927:INFO:_display_container: 2
2025-02-27 16:45:13,927:INFO:<catboost.core.CatBoostClassifier object at 0x00000254F66D8AD0>
2025-02-27 16:45:13,927:INFO:create_model() successfully completed......................................
2025-02-27 16:45:14,077:INFO:SubProcess create_model() end ==================================
2025-02-27 16:45:14,077:INFO:Creating metrics dataframe
2025-02-27 16:45:14,109:INFO:Initializing Dummy Classifier
2025-02-27 16:45:14,109:INFO:Total runtime is 0.7497500459353129 minutes
2025-02-27 16:45:14,124:INFO:SubProcess create_model() called ==================================
2025-02-27 16:45:14,124:INFO:Initializing create_model()
2025-02-27 16:45:14,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000254F62B7750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:45:14,128:INFO:Checking exceptions
2025-02-27 16:45:14,128:INFO:Importing libraries
2025-02-27 16:45:14,128:INFO:Copying training dataset
2025-02-27 16:45:14,131:INFO:Defining folds
2025-02-27 16:45:14,131:INFO:Declaring metric variables
2025-02-27 16:45:14,139:INFO:Importing untrained model
2025-02-27 16:45:14,147:INFO:Dummy Classifier Imported successfully
2025-02-27 16:45:14,169:INFO:Starting cross validation
2025-02-27 16:45:14,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 16:45:14,231:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:14,269:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:14,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:14,325:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:14,331:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:14,357:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:14,357:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:14,377:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:14,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:14,418:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:15,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,565:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,567:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,572:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,595:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,597:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,601:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,603:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,605:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,605:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,607:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,609:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,620:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,625:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,627:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,630:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,656:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,660:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,664:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,666:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,690:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,695:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,697:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,701:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,703:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,713:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,715:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,756:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,761:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,765:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,766:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,766:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,768:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,772:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,772:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,775:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,776:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 16:45:15,778:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,778:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:15,796:INFO:Calculating mean and std
2025-02-27 16:45:15,798:INFO:Creating metrics dataframe
2025-02-27 16:45:15,806:INFO:Uploading results into container
2025-02-27 16:45:15,809:INFO:Uploading model into container now
2025-02-27 16:45:15,809:INFO:_master_model_container: 15
2025-02-27 16:45:15,809:INFO:_display_container: 2
2025-02-27 16:45:15,810:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-02-27 16:45:15,810:INFO:create_model() successfully completed......................................
2025-02-27 16:45:15,932:INFO:SubProcess create_model() end ==================================
2025-02-27 16:45:15,932:INFO:Creating metrics dataframe
2025-02-27 16:45:15,988:INFO:Initializing create_model()
2025-02-27 16:45:15,988:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:45:15,988:INFO:Checking exceptions
2025-02-27 16:45:15,988:INFO:Importing libraries
2025-02-27 16:45:15,988:INFO:Copying training dataset
2025-02-27 16:45:15,996:INFO:Defining folds
2025-02-27 16:45:15,996:INFO:Declaring metric variables
2025-02-27 16:45:16,004:INFO:Importing untrained model
2025-02-27 16:45:16,004:INFO:Declaring custom model
2025-02-27 16:45:16,004:INFO:Naive Bayes Imported successfully
2025-02-27 16:45:16,021:INFO:Cross validation set to False
2025-02-27 16:45:16,021:INFO:Fitting Model
2025-02-27 16:45:16,045:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:16,417:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000102 seconds.
2025-02-27 16:45:16,417:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:45:16,417:INFO:[LightGBM] [Info] Total Bins 124
2025-02-27 16:45:16,417:INFO:[LightGBM] [Info] Number of data points in the train set: 139, number of used features: 7
2025-02-27 16:45:16,419:INFO:[LightGBM] [Info] Start training from score -1.105833
2025-02-27 16:45:16,419:INFO:[LightGBM] [Info] Start training from score -1.063273
2025-02-27 16:45:16,419:INFO:[LightGBM] [Info] Start training from score -1.127811
2025-02-27 16:45:16,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,419:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,421:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,423:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,425:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,427:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,429:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,431:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,432:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,434:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,438:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,440:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,444:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,446:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,448:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,450:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,454:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,456:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,460:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,462:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,464:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,466:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,468:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,470:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,472:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,476:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,478:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,480:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,482:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,484:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,486:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,488:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,490:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,494:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,496:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,498:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,500:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,502:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,504:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,506:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,508:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,510:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,512:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,514:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,516:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,518:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,520:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,522:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,525:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,527:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,529:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,531:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,532:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,532:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,532:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,532:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,534:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,536:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,538:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,538:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:16,562:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:45:16,562:INFO:create_model() successfully completed......................................
2025-02-27 16:45:16,687:INFO:Creating Dashboard logs
2025-02-27 16:45:16,701:INFO:Model: Naive Bayes
2025-02-27 16:45:16,782:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-02-27 16:45:17,261:INFO:Initializing predict_model()
2025-02-27 16:45:17,261:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000254F62C3A60>)
2025-02-27 16:45:17,261:INFO:Checking exceptions
2025-02-27 16:45:17,261:INFO:Preloading libraries
2025-02-27 16:45:17,349:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:17,349:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:17,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:17,534:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\_distutils_hack\__init__.py:30: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-02-27 16:45:17,602:ERROR:_log_model() for GaussianNB(priors=None, var_smoothing=1e-09) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:17,602:INFO:Creating Dashboard logs
2025-02-27 16:45:17,618:INFO:Model: Quadratic Discriminant Analysis
2025-02-27 16:45:17,675:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2025-02-27 16:45:18,287:ERROR:_log_model() for QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:18,287:INFO:Creating Dashboard logs
2025-02-27 16:45:18,295:INFO:Model: Ridge Classifier
2025-02-27 16:45:18,371:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 42, 'solver': 'auto', 'tol': 0.0001}
2025-02-27 16:45:19,073:ERROR:_log_model() for RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:19,075:INFO:Creating Dashboard logs
2025-02-27 16:45:19,081:INFO:Model: Logistic Regression
2025-02-27 16:45:19,152:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-02-27 16:45:19,988:ERROR:_log_model() for LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:19,988:INFO:Creating Dashboard logs
2025-02-27 16:45:19,999:INFO:Model: Linear Discriminant Analysis
2025-02-27 16:45:20,041:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2025-02-27 16:45:20,899:ERROR:_log_model() for LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:20,899:INFO:Creating Dashboard logs
2025-02-27 16:45:20,899:INFO:Model: Ada Boost Classifier
2025-02-27 16:45:20,953:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 42}
2025-02-27 16:45:21,888:ERROR:_log_model() for AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:21,890:INFO:Creating Dashboard logs
2025-02-27 16:45:21,896:INFO:Model: Decision Tree Classifier
2025-02-27 16:45:21,963:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-02-27 16:45:23,030:ERROR:_log_model() for DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:23,032:INFO:Creating Dashboard logs
2025-02-27 16:45:23,038:INFO:Model: Random Forest Classifier
2025-02-27 16:45:23,096:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
2025-02-27 16:45:24,184:ERROR:_log_model() for RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:24,184:INFO:Creating Dashboard logs
2025-02-27 16:45:24,184:INFO:Model: Gradient Boosting Classifier
2025-02-27 16:45:24,247:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 42, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-02-27 16:45:25,370:ERROR:_log_model() for GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:25,372:INFO:Creating Dashboard logs
2025-02-27 16:45:25,378:INFO:Model: Extra Trees Classifier
2025-02-27 16:45:25,439:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
2025-02-27 16:45:26,640:ERROR:_log_model() for ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:26,642:INFO:Creating Dashboard logs
2025-02-27 16:45:26,648:INFO:Model: CatBoost Classifier
2025-02-27 16:45:26,717:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
             ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\catboost\core.py", line 3476, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-02-27 16:45:26,717:INFO:Logged params: {}
2025-02-27 16:45:27,941:ERROR:_log_model() for <catboost.core.CatBoostClassifier object at 0x00000254F66D8AD0> raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:27,941:INFO:Creating Dashboard logs
2025-02-27 16:45:27,956:INFO:Model: SVM - Linear Kernel
2025-02-27 16:45:28,022:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 42, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-02-27 16:45:29,331:ERROR:_log_model() for SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:29,331:INFO:Creating Dashboard logs
2025-02-27 16:45:29,331:INFO:Model: K Neighbors Classifier
2025-02-27 16:45:29,405:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-02-27 16:45:30,951:ERROR:_log_model() for KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:30,951:INFO:Creating Dashboard logs
2025-02-27 16:45:30,960:INFO:Model: Light Gradient Boosting Machine
2025-02-27 16:45:31,015:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 42, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-02-27 16:45:32,093:ERROR:_log_model() for LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:32,093:INFO:Creating Dashboard logs
2025-02-27 16:45:32,108:INFO:Model: Dummy Classifier
2025-02-27 16:45:32,165:INFO:Logged params: {'constant': None, 'random_state': 42, 'strategy': 'prior'}
2025-02-27 16:45:33,765:ERROR:_log_model() for DummyClassifier(constant=None, random_state=42, strategy='prior') raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:33,791:INFO:_master_model_container: 15
2025-02-27 16:45:33,791:INFO:_display_container: 2
2025-02-27 16:45:33,791:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:45:33,793:INFO:compare_models() successfully completed......................................
2025-02-27 16:45:33,803:INFO:Initializing evaluate_model()
2025-02-27 16:45:33,803:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-27 16:45:33,818:INFO:Initializing plot_model()
2025-02-27 16:45:33,818:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2025-02-27 16:45:33,818:INFO:Checking exceptions
2025-02-27 16:45:33,821:INFO:Preloading libraries
2025-02-27 16:45:33,821:INFO:Copying training dataset
2025-02-27 16:45:33,821:INFO:Plot type: pipeline
2025-02-27 16:45:34,449:INFO:Visual Rendered Successfully
2025-02-27 16:45:34,616:INFO:plot_model() successfully completed......................................
2025-02-27 16:45:34,626:INFO:Initializing plot_model()
2025-02-27 16:45:34,626:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-27 16:45:34,626:INFO:Checking exceptions
2025-02-27 16:45:34,638:INFO:Preloading libraries
2025-02-27 16:45:34,640:INFO:Copying training dataset
2025-02-27 16:45:34,640:INFO:Plot type: confusion_matrix
2025-02-27 16:45:34,786:INFO:Fitting Model
2025-02-27 16:45:34,788:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-02-27 16:45:34,790:INFO:Scoring test/hold-out set
2025-02-27 16:45:34,995:INFO:Visual Rendered Successfully
2025-02-27 16:45:35,120:INFO:plot_model() successfully completed......................................
2025-02-27 16:45:35,120:INFO:Initializing plot_model()
2025-02-27 16:45:35,125:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2025-02-27 16:45:35,125:INFO:Checking exceptions
2025-02-27 16:45:35,133:INFO:Preloading libraries
2025-02-27 16:45:35,134:INFO:Copying training dataset
2025-02-27 16:45:35,134:INFO:Plot type: auc
2025-02-27 16:45:35,263:INFO:Fitting Model
2025-02-27 16:45:35,263:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-02-27 16:45:35,263:INFO:Scoring test/hold-out set
2025-02-27 16:45:35,693:INFO:Visual Rendered Successfully
2025-02-27 16:45:35,861:INFO:plot_model() successfully completed......................................
2025-02-27 16:45:35,899:INFO:Initializing predict_model()
2025-02-27 16:45:35,899:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000254F8898FE0>)
2025-02-27 16:45:35,899:INFO:Checking exceptions
2025-02-27 16:45:35,899:INFO:Preloading libraries
2025-02-27 16:45:35,982:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:35,990:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:35,995:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 16:45:37,567:INFO:Initializing finalize_model()
2025-02-27 16:45:37,567:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 16:45:37,569:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:45:37,578:INFO:Initializing create_model()
2025-02-27 16:45:37,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:45:37,578:INFO:Checking exceptions
2025-02-27 16:45:37,582:INFO:Importing libraries
2025-02-27 16:45:37,582:INFO:Copying training dataset
2025-02-27 16:45:37,584:INFO:Defining folds
2025-02-27 16:45:37,584:INFO:Declaring metric variables
2025-02-27 16:45:37,584:INFO:Importing untrained model
2025-02-27 16:45:37,584:INFO:Declaring custom model
2025-02-27 16:45:37,586:INFO:Naive Bayes Imported successfully
2025-02-27 16:45:37,606:INFO:Cross validation set to False
2025-02-27 16:45:37,606:INFO:Fitting Model
2025-02-27 16:45:37,622:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:45:37,678:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000295 seconds.
2025-02-27 16:45:37,678:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:45:37,678:INFO:[LightGBM] [Info] Total Bins 163
2025-02-27 16:45:37,678:INFO:[LightGBM] [Info] Number of data points in the train set: 199, number of used features: 7
2025-02-27 16:45:37,682:INFO:[LightGBM] [Info] Start training from score -1.103650
2025-02-27 16:45:37,682:INFO:[LightGBM] [Info] Start training from score -1.073797
2025-02-27 16:45:37,682:INFO:[LightGBM] [Info] Start training from score -1.118918
2025-02-27 16:45:37,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,726:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,773:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,789:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,805:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,820:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,836:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,852:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,868:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,884:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,900:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:45:37,994:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:45:37,994:INFO:create_model() successfully completed......................................
2025-02-27 16:45:38,141:INFO:Creating Dashboard logs
2025-02-27 16:45:38,143:INFO:Model: Naive Bayes
2025-02-27 16:45:38,241:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-02-27 16:45:40,051:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:45:40,051:INFO:_master_model_container: 15
2025-02-27 16:45:40,051:INFO:_display_container: 3
2025-02-27 16:45:40,084:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:45:40,084:INFO:finalize_model() successfully completed......................................
2025-02-27 16:45:54,691:INFO:Initializing save_model()
2025-02-27 16:45:54,691:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), model_name=final_wheat_seeds_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 16:45:54,691:INFO:Adding model into prep_pipe
2025-02-27 16:45:54,691:WARNING:Only Model saved as it was a pipeline.
2025-02-27 16:45:54,717:INFO:final_wheat_seeds_model.pkl saved in current working directory
2025-02-27 16:45:54,745:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:45:54,745:INFO:save_model() successfully completed......................................
2025-02-27 16:48:39,180:INFO:Initializing finalize_model()
2025-02-27 16:48:39,180:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 16:48:39,180:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:48:39,192:INFO:Initializing create_model()
2025-02-27 16:48:39,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:48:39,194:INFO:Checking exceptions
2025-02-27 16:48:39,198:INFO:Importing libraries
2025-02-27 16:48:39,198:INFO:Copying training dataset
2025-02-27 16:48:39,198:INFO:Defining folds
2025-02-27 16:48:39,198:INFO:Declaring metric variables
2025-02-27 16:48:39,198:INFO:Importing untrained model
2025-02-27 16:48:39,198:INFO:Declaring custom model
2025-02-27 16:48:39,198:INFO:Naive Bayes Imported successfully
2025-02-27 16:48:39,222:INFO:Cross validation set to False
2025-02-27 16:48:39,222:INFO:Fitting Model
2025-02-27 16:48:39,236:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:48:39,300:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000599 seconds.
2025-02-27 16:48:39,300:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:48:39,300:INFO:[LightGBM] [Info] Total Bins 163
2025-02-27 16:48:39,300:INFO:[LightGBM] [Info] Number of data points in the train set: 199, number of used features: 7
2025-02-27 16:48:39,300:INFO:[LightGBM] [Info] Start training from score -1.103650
2025-02-27 16:48:39,300:INFO:[LightGBM] [Info] Start training from score -1.073797
2025-02-27 16:48:39,300:INFO:[LightGBM] [Info] Start training from score -1.118918
2025-02-27 16:48:39,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,333:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,380:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,390:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,396:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,397:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,404:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,412:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,420:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,428:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,436:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,452:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,463:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,492:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,507:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,523:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,539:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,555:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,571:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,586:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,602:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:48:39,657:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:48:39,657:INFO:create_model() successfully completed......................................
2025-02-27 16:48:39,856:INFO:Creating Dashboard logs
2025-02-27 16:48:39,856:INFO:Model: Naive Bayes
2025-02-27 16:48:39,962:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-02-27 16:48:41,425:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    return list(itertools.chain.from_iterable(map(copy_one, names)))
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    file_util.copy_file(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    from distutils._modified import newer
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:48:41,425:INFO:_master_model_container: 15
2025-02-27 16:48:41,425:INFO:_display_container: 3
2025-02-27 16:48:41,451:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:48:41,451:INFO:finalize_model() successfully completed......................................
2025-02-27 16:50:46,441:INFO:Initializing finalize_model()
2025-02-27 16:50:46,441:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 16:50:46,441:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 16:50:46,441:INFO:Initializing create_model()
2025-02-27 16:50:46,441:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000254F4BC8BD0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:50:46,441:INFO:Checking exceptions
2025-02-27 16:50:46,441:INFO:Importing libraries
2025-02-27 16:50:46,441:INFO:Copying training dataset
2025-02-27 16:50:46,441:INFO:Defining folds
2025-02-27 16:50:46,441:INFO:Declaring metric variables
2025-02-27 16:50:46,441:INFO:Importing untrained model
2025-02-27 16:50:46,441:INFO:Declaring custom model
2025-02-27 16:50:46,441:INFO:Naive Bayes Imported successfully
2025-02-27 16:50:46,466:INFO:Cross validation set to False
2025-02-27 16:50:46,466:INFO:Fitting Model
2025-02-27 16:50:46,480:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 16:50:46,542:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000137 seconds.
2025-02-27 16:50:46,544:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 16:50:46,544:INFO:[LightGBM] [Info] Total Bins 163
2025-02-27 16:50:46,544:INFO:[LightGBM] [Info] Number of data points in the train set: 199, number of used features: 7
2025-02-27 16:50:46,544:INFO:[LightGBM] [Info] Start training from score -1.103650
2025-02-27 16:50:46,544:INFO:[LightGBM] [Info] Start training from score -1.073797
2025-02-27 16:50:46,544:INFO:[LightGBM] [Info] Start training from score -1.118918
2025-02-27 16:50:46,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,546:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,548:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,550:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,551:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,552:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,552:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,552:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,554:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,556:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,558:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,558:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,558:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,560:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,562:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,564:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,566:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,568:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,568:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,568:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,570:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,572:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,574:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,576:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,578:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,580:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,582:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,583:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,585:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,587:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,589:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,591:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,593:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,595:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,597:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,599:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,601:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,603:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,605:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,607:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,609:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,611:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,613:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,615:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,616:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,618:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,620:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,621:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,623:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,625:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,627:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,629:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,631:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,633:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,635:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,637:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,639:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,641:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,643:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,645:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,647:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,649:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,651:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,653:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,655:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,657:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,659:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,661:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,663:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,665:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,667:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,669:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,671:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,673:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,675:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,677:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,678:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,680:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,682:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,684:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,686:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,688:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,689:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,691:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,692:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,694:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,696:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,698:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,700:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,710:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,712:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,714:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,717:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,720:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,722:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,724:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,728:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,730:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,732:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,734:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,736:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,738:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,740:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,741:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,743:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,745:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,747:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,749:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,751:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,752:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,753:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,755:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,757:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,758:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,760:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,762:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,764:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,766:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,768:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,770:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,772:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 16:50:46,831:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:50:46,831:INFO:create_model() successfully completed......................................
2025-02-27 16:50:47,093:INFO:Creating Dashboard logs
2025-02-27 16:50:47,095:INFO:Model: Naive Bayes
2025-02-27 16:50:47,171:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-02-27 16:50:48,645:ERROR:_log_model() for Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False) raised an exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pycaret_experiment\tabular_experiment.py", line 186, in _log_model
    self.logging_param.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 184, in log_model
    [
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\dashboard_logger.py", line 185, in <listcomp>
    logger.log_sklearn_pipeline(experiment, pipeline, model, path=tmpdir)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\loggers\mlflow_logger.py", line 166, in log_sklearn_pipeline
    mlflow.sklearn.log_model(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\sklearn\__init__.py", line 407, in log_model
    return Model.log(
           ^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\models\model.py", line 374, in log
    mlflow.tracking.fluent.log_artifacts(local_path, mlflow_model.artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\fluent.py", line 810, in log_artifacts
    MlflowClient().log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\client.py", line 1182, in log_artifacts
    self._tracking_client.log_artifacts(run_id, local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\tracking\_tracking_service\client.py", line 469, in log_artifacts
    self._get_artifact_repo(run_id).log_artifacts(local_dir, artifact_path)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\mlflow\store\artifact\local_artifact_repo.py", line 58, in log_artifacts
    dir_util.copy_tree(src=local_dir, dst=artifact_dir, preserve_mode=0, preserve_times=0)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 150, in copy_tree
    log.info("linking %s -> %s", dst_name, link_dest)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\dir_util.py", line 192, in _copy_one
    for cmd in cmdtuples:
        ^^^^^^^^^^^^^^^^^
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\setuptools\_distutils\file_util.py", line 104, in copy_file
    raise DistutilsFileError(
ModuleNotFoundError: No module named 'distutils._modified'

2025-02-27 16:50:48,649:INFO:_master_model_container: 15
2025-02-27 16:50:48,649:INFO:_display_container: 3
2025-02-27 16:50:48,679:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 16:50:48,679:INFO:finalize_model() successfully completed......................................
2025-02-27 16:50:56,689:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops-env\Lib\site-packages\pycaret\internal\pipeline.py:148: UserWarning: Version mismatch:
current: {'deps_info': {'pip': '25.0', 'setuptools': '58.0.0', 'pycaret': '3.3.2', 'IPython': '8.32.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
pickle: {'deps_info': {'pip': '25.0', 'setuptools': '75.8.2', 'pycaret': '3.3.2', 'IPython': '8.32.0', 'ipywidgets': '8.1.5', 'tqdm': '4.67.1', 'numpy': '1.26.4', 'pandas': '1.5.3', 'jinja2': '3.1.5', 'scipy': '1.11.4', 'joblib': '1.3.2', 'sklearn': '1.4.2', 'pyod': '2.0.3', 'imblearn': '0.13.0', 'category_encoders': '2.7.0', 'lightgbm': '4.6.0', 'numba': '0.61.0', 'requests': '2.32.3', 'matplotlib': '3.7.5', 'scikitplot': '0.3.7', 'yellowbrick': '1.5', 'plotly': '5.24.1', 'plotly-resampler': 'Not installed', 'kaleido': '0.2.1', 'schemdraw': '0.15', 'statsmodels': '0.14.4', 'sktime': '0.26.0', 'tbats': '1.1.3', 'pmdarima': '2.0.4', 'psutil': '7.0.0', 'markupsafe': '3.0.2', 'pickle5': 'Not installed', 'cloudpickle': '3.1.1', 'deprecation': '2.1.0', 'xxhash': '3.5.0', 'wurlitzer': 'Not installed'}, 'python': {'version': '3.11.11', 'machine': 'AMD64'}}
  warnings.warn(

2025-02-27 16:54:44,057:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:54:44,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:54:44,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:54:44,059:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:54:58,635:INFO:PyCaret ClassificationExperiment
2025-02-27 16:54:58,635:INFO:Logging name: wheatclassification
2025-02-27 16:54:58,635:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 16:54:58,635:INFO:version 3.3.2
2025-02-27 16:54:58,641:INFO:Initializing setup()
2025-02-27 16:54:58,641:INFO:self.USI: 7c08
2025-02-27 16:54:58,641:INFO:self._variable_keys: {'y', 'X', 'data', 'idx', 'fold_generator', 'exp_id', 'y_test', 'fold_shuffle_param', 'target_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'seed', 'memory', 'n_jobs_param', 'is_multiclass', 'pipeline', 'logging_param', 'X_train', 'fix_imbalance', 'log_plots_param', 'gpu_param', 'exp_name_log', 'html_param', 'gpu_n_jobs_param', 'X_test', 'USI', 'y_train'}
2025-02-27 16:54:58,641:INFO:Checking environment
2025-02-27 16:54:58,641:INFO:python_version: 3.10.16
2025-02-27 16:54:58,641:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-27 16:54:58,641:INFO:machine: AMD64
2025-02-27 16:54:58,641:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-27 16:54:58,641:INFO:Memory: svmem(total=16855433216, available=7274409984, percent=56.8, used=9581023232, free=7274409984)
2025-02-27 16:54:58,641:INFO:Physical Core: 10
2025-02-27 16:54:58,641:INFO:Logical Core: 16
2025-02-27 16:54:58,641:INFO:Checking libraries
2025-02-27 16:54:58,641:INFO:System:
2025-02-27 16:54:58,641:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-27 16:54:58,641:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops\python.exe
2025-02-27 16:54:58,641:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-27 16:54:58,641:INFO:PyCaret required dependencies:
2025-02-27 16:55:01,607:INFO:                 pip: 24.2
2025-02-27 16:55:01,607:INFO:          setuptools: 75.1.0
2025-02-27 16:55:01,607:INFO:             pycaret: 3.3.2
2025-02-27 16:55:01,607:INFO:             IPython: 8.31.0
2025-02-27 16:55:01,607:INFO:          ipywidgets: 8.1.5
2025-02-27 16:55:01,607:INFO:                tqdm: 4.67.1
2025-02-27 16:55:01,607:INFO:               numpy: 1.26.4
2025-02-27 16:55:01,607:INFO:              pandas: 2.1.4
2025-02-27 16:55:01,607:INFO:              jinja2: 3.1.4
2025-02-27 16:55:01,607:INFO:               scipy: 1.10.1
2025-02-27 16:55:01,607:INFO:              joblib: 1.3.2
2025-02-27 16:55:01,607:INFO:             sklearn: 1.4.2
2025-02-27 16:55:01,607:INFO:                pyod: 2.0.3
2025-02-27 16:55:01,607:INFO:            imblearn: 0.13.0
2025-02-27 16:55:01,607:INFO:   category_encoders: 2.7.0
2025-02-27 16:55:01,607:INFO:            lightgbm: 4.5.0
2025-02-27 16:55:01,607:INFO:               numba: 0.60.0
2025-02-27 16:55:01,607:INFO:            requests: 2.32.3
2025-02-27 16:55:01,607:INFO:          matplotlib: 3.7.5
2025-02-27 16:55:01,607:INFO:          scikitplot: 0.3.7
2025-02-27 16:55:01,607:INFO:         yellowbrick: 1.5
2025-02-27 16:55:01,607:INFO:              plotly: 5.24.1
2025-02-27 16:55:01,607:INFO:    plotly-resampler: Not installed
2025-02-27 16:55:01,607:INFO:             kaleido: 0.2.1
2025-02-27 16:55:01,607:INFO:           schemdraw: 0.15
2025-02-27 16:55:01,607:INFO:         statsmodels: 0.14.4
2025-02-27 16:55:01,607:INFO:              sktime: 0.26.0
2025-02-27 16:55:01,607:INFO:               tbats: 1.1.3
2025-02-27 16:55:01,607:INFO:            pmdarima: 2.0.4
2025-02-27 16:55:01,607:INFO:              psutil: 6.1.1
2025-02-27 16:55:01,607:INFO:          markupsafe: 3.0.2
2025-02-27 16:55:01,607:INFO:             pickle5: Not installed
2025-02-27 16:55:01,607:INFO:         cloudpickle: 3.1.0
2025-02-27 16:55:01,607:INFO:         deprecation: 2.1.0
2025-02-27 16:55:01,607:INFO:              xxhash: 3.5.0
2025-02-27 16:55:01,607:INFO:           wurlitzer: Not installed
2025-02-27 16:55:01,607:INFO:PyCaret optional dependencies:
2025-02-27 16:55:13,402:INFO:                shap: 0.44.1
2025-02-27 16:55:13,402:INFO:           interpret: 0.6.9
2025-02-27 16:55:13,402:INFO:                umap: 0.5.7
2025-02-27 16:55:13,402:INFO:     ydata_profiling: 4.12.2
2025-02-27 16:55:13,402:INFO:  explainerdashboard: 0.4.8
2025-02-27 16:55:13,402:INFO:             autoviz: Not installed
2025-02-27 16:55:13,410:INFO:           fairlearn: 0.7.0
2025-02-27 16:55:13,410:INFO:          deepchecks: Not installed
2025-02-27 16:55:13,410:INFO:             xgboost: 2.1.3
2025-02-27 16:55:13,410:INFO:            catboost: 1.2.7
2025-02-27 16:55:13,410:INFO:              kmodes: 0.12.2
2025-02-27 16:55:13,410:INFO:             mlxtend: 0.23.3
2025-02-27 16:55:13,410:INFO:       statsforecast: 1.5.0
2025-02-27 16:55:13,410:INFO:        tune_sklearn: Not installed
2025-02-27 16:55:13,410:INFO:                 ray: Not installed
2025-02-27 16:55:13,410:INFO:            hyperopt: 0.2.7
2025-02-27 16:55:13,410:INFO:              optuna: 4.2.0
2025-02-27 16:55:13,410:INFO:               skopt: 0.10.2
2025-02-27 16:55:13,410:INFO:              mlflow: 2.15.1
2025-02-27 16:55:13,410:INFO:              gradio: 5.13.1
2025-02-27 16:55:13,410:INFO:             fastapi: 0.115.7
2025-02-27 16:55:13,410:INFO:             uvicorn: 0.34.0
2025-02-27 16:55:13,410:INFO:              m2cgen: 0.10.0
2025-02-27 16:55:13,410:INFO:           evidently: 0.4.40
2025-02-27 16:55:13,410:INFO:               fugue: 0.8.7
2025-02-27 16:55:13,410:INFO:           streamlit: Not installed
2025-02-27 16:55:13,410:INFO:             prophet: Not installed
2025-02-27 16:55:13,410:INFO:None
2025-02-27 16:55:13,410:INFO:Set up data.
2025-02-27 16:55:13,436:INFO:Set up folding strategy.
2025-02-27 16:55:13,436:INFO:Set up train/test split.
2025-02-27 16:55:13,455:INFO:Set up index.
2025-02-27 16:55:13,457:INFO:Assigning column types.
2025-02-27 16:55:13,470:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:55:13,689:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:55:13,705:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:55:13,863:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:55:13,875:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:55:14,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:55:14,309:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:55:14,440:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:55:14,456:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:55:14,460:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:55:14,674:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:55:14,807:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:55:14,819:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:55:15,043:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:55:15,174:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:55:15,186:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:55:15,188:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 16:55:15,546:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:55:15,568:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:55:15,927:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:55:15,940:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:55:15,942:INFO:Preparing preprocessing pipeline...
2025-02-27 16:55:15,954:INFO:Set up label encoding.
2025-02-27 16:55:15,954:INFO:Set up simple imputation.
2025-02-27 16:55:15,954:INFO:Set up binning of numerical features.
2025-02-27 16:55:15,959:INFO:Set up feature normalization.
2025-02-27 16:55:15,959:INFO:Set up feature selection.
2025-02-27 16:55:16,306:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:55:16,322:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:55:16,579:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:55:16,626:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:55:16,626:INFO:Creating final display dataframe.
2025-02-27 16:55:16,922:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target                 Type
2                   Target type           Multiclass
3                Target mapping     1: 0, 2: 1, 3: 2
4           Original data shape             (199, 8)
5        Transformed data shape             (199, 2)
6   Transformed train set shape             (139, 2)
7    Transformed test set shape              (60, 2)
8              Numeric features                    7
9                    Preprocess                 True
10              Imputation type               simple
11           Numeric imputation                 mean
12       Categorical imputation                 mode
13                    Normalize                 True
14             Normalize method               zscore
15            Feature selection                 True
16     Feature selection method              classic
17  Feature selection estimator             lightgbm
18  Number of features selected                  0.2
19               Fold Generator      StratifiedKFold
20                  Fold Number                   10
21                     CPU Jobs                   -1
22                      Use GPU                False
23               Log Experiment         MlflowLogger
24              Experiment Name  wheatclassification
25                          USI                 7c08
2025-02-27 16:55:17,288:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:55:17,298:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:55:17,641:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:55:17,653:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:55:17,653:INFO:Logging experiment in loggers
2025-02-27 16:56:37,753:INFO:PyCaret ClassificationExperiment
2025-02-27 16:56:37,753:INFO:Logging name: wheatclassification
2025-02-27 16:56:37,753:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 16:56:37,753:INFO:version 3.3.2
2025-02-27 16:56:37,753:INFO:Initializing setup()
2025-02-27 16:56:37,753:INFO:self.USI: 04d2
2025-02-27 16:56:37,753:INFO:self._variable_keys: {'y', 'X', 'data', 'idx', 'fold_generator', 'exp_id', 'y_test', 'fold_shuffle_param', 'target_param', '_ml_usecase', '_available_plots', 'fold_groups_param', 'seed', 'memory', 'n_jobs_param', 'is_multiclass', 'pipeline', 'logging_param', 'X_train', 'fix_imbalance', 'log_plots_param', 'gpu_param', 'exp_name_log', 'html_param', 'gpu_n_jobs_param', 'X_test', 'USI', 'y_train'}
2025-02-27 16:56:37,753:INFO:Checking environment
2025-02-27 16:56:37,753:INFO:python_version: 3.10.16
2025-02-27 16:56:37,753:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-27 16:56:37,753:INFO:machine: AMD64
2025-02-27 16:56:37,753:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-27 16:56:37,753:INFO:Memory: svmem(total=16855433216, available=7056863232, percent=58.1, used=9798569984, free=7056863232)
2025-02-27 16:56:37,753:INFO:Physical Core: 10
2025-02-27 16:56:37,753:INFO:Logical Core: 16
2025-02-27 16:56:37,753:INFO:Checking libraries
2025-02-27 16:56:37,753:INFO:System:
2025-02-27 16:56:37,753:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-27 16:56:37,753:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops\python.exe
2025-02-27 16:56:37,753:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-27 16:56:37,753:INFO:PyCaret required dependencies:
2025-02-27 16:56:37,762:INFO:                 pip: 24.2
2025-02-27 16:56:37,762:INFO:          setuptools: 75.1.0
2025-02-27 16:56:37,762:INFO:             pycaret: 3.3.2
2025-02-27 16:56:37,762:INFO:             IPython: 8.31.0
2025-02-27 16:56:37,762:INFO:          ipywidgets: 8.1.5
2025-02-27 16:56:37,762:INFO:                tqdm: 4.67.1
2025-02-27 16:56:37,762:INFO:               numpy: 1.26.4
2025-02-27 16:56:37,762:INFO:              pandas: 2.1.4
2025-02-27 16:56:37,762:INFO:              jinja2: 3.1.4
2025-02-27 16:56:37,762:INFO:               scipy: 1.10.1
2025-02-27 16:56:37,762:INFO:              joblib: 1.3.2
2025-02-27 16:56:37,762:INFO:             sklearn: 1.4.2
2025-02-27 16:56:37,762:INFO:                pyod: 2.0.3
2025-02-27 16:56:37,762:INFO:            imblearn: 0.13.0
2025-02-27 16:56:37,762:INFO:   category_encoders: 2.7.0
2025-02-27 16:56:37,762:INFO:            lightgbm: 4.5.0
2025-02-27 16:56:37,762:INFO:               numba: 0.60.0
2025-02-27 16:56:37,762:INFO:            requests: 2.32.3
2025-02-27 16:56:37,762:INFO:          matplotlib: 3.7.5
2025-02-27 16:56:37,762:INFO:          scikitplot: 0.3.7
2025-02-27 16:56:37,762:INFO:         yellowbrick: 1.5
2025-02-27 16:56:37,762:INFO:              plotly: 5.24.1
2025-02-27 16:56:37,762:INFO:    plotly-resampler: Not installed
2025-02-27 16:56:37,762:INFO:             kaleido: 0.2.1
2025-02-27 16:56:37,762:INFO:           schemdraw: 0.15
2025-02-27 16:56:37,762:INFO:         statsmodels: 0.14.4
2025-02-27 16:56:37,762:INFO:              sktime: 0.26.0
2025-02-27 16:56:37,762:INFO:               tbats: 1.1.3
2025-02-27 16:56:37,762:INFO:            pmdarima: 2.0.4
2025-02-27 16:56:37,762:INFO:              psutil: 6.1.1
2025-02-27 16:56:37,762:INFO:          markupsafe: 3.0.2
2025-02-27 16:56:37,762:INFO:             pickle5: Not installed
2025-02-27 16:56:37,762:INFO:         cloudpickle: 3.1.0
2025-02-27 16:56:37,762:INFO:         deprecation: 2.1.0
2025-02-27 16:56:37,762:INFO:              xxhash: 3.5.0
2025-02-27 16:56:37,762:INFO:           wurlitzer: Not installed
2025-02-27 16:56:37,762:INFO:PyCaret optional dependencies:
2025-02-27 16:56:37,762:INFO:                shap: 0.44.1
2025-02-27 16:56:37,762:INFO:           interpret: 0.6.9
2025-02-27 16:56:37,762:INFO:                umap: 0.5.7
2025-02-27 16:56:37,770:INFO:     ydata_profiling: 4.12.2
2025-02-27 16:56:37,770:INFO:  explainerdashboard: 0.4.8
2025-02-27 16:56:37,770:INFO:             autoviz: Not installed
2025-02-27 16:56:37,770:INFO:           fairlearn: 0.7.0
2025-02-27 16:56:37,770:INFO:          deepchecks: Not installed
2025-02-27 16:56:37,770:INFO:             xgboost: 2.1.3
2025-02-27 16:56:37,770:INFO:            catboost: 1.2.7
2025-02-27 16:56:37,770:INFO:              kmodes: 0.12.2
2025-02-27 16:56:37,770:INFO:             mlxtend: 0.23.3
2025-02-27 16:56:37,771:INFO:       statsforecast: 1.5.0
2025-02-27 16:56:37,771:INFO:        tune_sklearn: Not installed
2025-02-27 16:56:37,771:INFO:                 ray: Not installed
2025-02-27 16:56:37,771:INFO:            hyperopt: 0.2.7
2025-02-27 16:56:37,771:INFO:              optuna: 4.2.0
2025-02-27 16:56:37,771:INFO:               skopt: 0.10.2
2025-02-27 16:56:37,771:INFO:              mlflow: 2.15.1
2025-02-27 16:56:37,771:INFO:              gradio: 5.13.1
2025-02-27 16:56:37,771:INFO:             fastapi: 0.115.7
2025-02-27 16:56:37,771:INFO:             uvicorn: 0.34.0
2025-02-27 16:56:37,771:INFO:              m2cgen: 0.10.0
2025-02-27 16:56:37,771:INFO:           evidently: 0.4.40
2025-02-27 16:56:37,771:INFO:               fugue: 0.8.7
2025-02-27 16:56:37,771:INFO:           streamlit: Not installed
2025-02-27 16:56:37,771:INFO:             prophet: Not installed
2025-02-27 16:56:37,771:INFO:None
2025-02-27 16:56:37,771:INFO:Set up data.
2025-02-27 16:56:37,785:INFO:Set up folding strategy.
2025-02-27 16:56:37,785:INFO:Set up train/test split.
2025-02-27 16:56:37,799:INFO:Set up index.
2025-02-27 16:56:37,799:INFO:Assigning column types.
2025-02-27 16:56:37,814:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:56:38,029:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:56:38,029:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:56:38,169:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:56:38,183:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:56:38,412:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:56:38,418:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:56:38,551:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:56:38,565:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:56:38,567:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:56:38,793:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:56:38,931:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:56:38,945:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:56:39,174:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:56:39,324:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:56:39,338:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:56:39,342:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 16:56:39,722:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:56:39,734:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:56:40,128:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:56:40,145:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:56:40,151:INFO:Preparing preprocessing pipeline...
2025-02-27 16:56:40,153:INFO:Set up label encoding.
2025-02-27 16:56:40,155:INFO:Set up simple imputation.
2025-02-27 16:56:40,155:INFO:Set up binning of numerical features.
2025-02-27 16:56:40,159:INFO:Set up feature normalization.
2025-02-27 16:56:40,159:INFO:Set up feature selection.
2025-02-27 16:56:40,500:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:56:40,513:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:56:40,700:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:56:40,741:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:56:40,743:INFO:Creating final display dataframe.
2025-02-27 16:56:40,957:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target                 Type
2                   Target type           Multiclass
3                Target mapping     1: 0, 2: 1, 3: 2
4           Original data shape             (199, 8)
5        Transformed data shape             (199, 2)
6   Transformed train set shape             (139, 2)
7    Transformed test set shape              (60, 2)
8              Numeric features                    7
9                    Preprocess                 True
10              Imputation type               simple
11           Numeric imputation                 mean
12       Categorical imputation                 mode
13                    Normalize                 True
14             Normalize method               zscore
15            Feature selection                 True
16     Feature selection method              classic
17  Feature selection estimator             lightgbm
18  Number of features selected                  0.2
19               Fold Generator      StratifiedKFold
20                  Fold Number                   10
21                     CPU Jobs                   -1
22                      Use GPU                False
23               Log Experiment         MlflowLogger
24              Experiment Name  wheatclassification
25                          USI                 04d2
2025-02-27 16:56:41,307:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:56:41,315:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:56:41,823:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:56:41,849:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:56:41,855:INFO:Logging experiment in loggers
2025-02-27 16:59:33,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:59:33,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:59:33,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:59:33,240:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-02-27 16:59:36,365:INFO:PyCaret ClassificationExperiment
2025-02-27 16:59:36,373:INFO:Logging name: wheatclassification
2025-02-27 16:59:36,373:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-02-27 16:59:36,373:INFO:version 3.3.2
2025-02-27 16:59:36,373:INFO:Initializing setup()
2025-02-27 16:59:36,373:INFO:self.USI: 9b3c
2025-02-27 16:59:36,373:INFO:self._variable_keys: {'y', 'logging_param', '_available_plots', 'y_train', 'gpu_param', 'idx', 'target_param', 'exp_name_log', 'X_train', 'gpu_n_jobs_param', 'html_param', 'fold_shuffle_param', 'fix_imbalance', 'memory', 'X', 'exp_id', 'X_test', 'log_plots_param', 'n_jobs_param', 'pipeline', 'data', 'is_multiclass', 'USI', 'fold_generator', 'fold_groups_param', 'seed', '_ml_usecase', 'y_test'}
2025-02-27 16:59:36,373:INFO:Checking environment
2025-02-27 16:59:36,373:INFO:python_version: 3.10.16
2025-02-27 16:59:36,373:INFO:python_build: ('main', 'Dec 11 2024 16:19:12')
2025-02-27 16:59:36,373:INFO:machine: AMD64
2025-02-27 16:59:36,373:INFO:platform: Windows-10-10.0.26100-SP0
2025-02-27 16:59:36,373:INFO:Memory: svmem(total=16855433216, available=7140327424, percent=57.6, used=9715105792, free=7140327424)
2025-02-27 16:59:36,373:INFO:Physical Core: 10
2025-02-27 16:59:36,373:INFO:Logical Core: 16
2025-02-27 16:59:36,373:INFO:Checking libraries
2025-02-27 16:59:36,373:INFO:System:
2025-02-27 16:59:36,373:INFO:    python: 3.10.16 | packaged by Anaconda, Inc. | (main, Dec 11 2024, 16:19:12) [MSC v.1929 64 bit (AMD64)]
2025-02-27 16:59:36,373:INFO:executable: C:\Users\Jupyter Files Only\anaconda3\envs\mlops\python.exe
2025-02-27 16:59:36,373:INFO:   machine: Windows-10-10.0.26100-SP0
2025-02-27 16:59:36,373:INFO:PyCaret required dependencies:
2025-02-27 16:59:39,835:INFO:                 pip: 24.2
2025-02-27 16:59:39,835:INFO:          setuptools: 75.1.0
2025-02-27 16:59:39,835:INFO:             pycaret: 3.3.2
2025-02-27 16:59:39,835:INFO:             IPython: 8.31.0
2025-02-27 16:59:39,835:INFO:          ipywidgets: 8.1.5
2025-02-27 16:59:39,835:INFO:                tqdm: 4.67.1
2025-02-27 16:59:39,835:INFO:               numpy: 1.26.4
2025-02-27 16:59:39,835:INFO:              pandas: 2.1.4
2025-02-27 16:59:39,835:INFO:              jinja2: 3.1.4
2025-02-27 16:59:39,835:INFO:               scipy: 1.10.1
2025-02-27 16:59:39,835:INFO:              joblib: 1.3.2
2025-02-27 16:59:39,835:INFO:             sklearn: 1.4.2
2025-02-27 16:59:39,835:INFO:                pyod: 2.0.3
2025-02-27 16:59:39,835:INFO:            imblearn: 0.13.0
2025-02-27 16:59:39,835:INFO:   category_encoders: 2.7.0
2025-02-27 16:59:39,835:INFO:            lightgbm: 4.5.0
2025-02-27 16:59:39,835:INFO:               numba: 0.60.0
2025-02-27 16:59:39,835:INFO:            requests: 2.32.3
2025-02-27 16:59:39,835:INFO:          matplotlib: 3.7.5
2025-02-27 16:59:39,835:INFO:          scikitplot: 0.3.7
2025-02-27 16:59:39,835:INFO:         yellowbrick: 1.5
2025-02-27 16:59:39,835:INFO:              plotly: 5.24.1
2025-02-27 16:59:39,835:INFO:    plotly-resampler: Not installed
2025-02-27 16:59:39,835:INFO:             kaleido: 0.2.1
2025-02-27 16:59:39,835:INFO:           schemdraw: 0.15
2025-02-27 16:59:39,835:INFO:         statsmodels: 0.14.4
2025-02-27 16:59:39,835:INFO:              sktime: 0.26.0
2025-02-27 16:59:39,835:INFO:               tbats: 1.1.3
2025-02-27 16:59:39,835:INFO:            pmdarima: 2.0.4
2025-02-27 16:59:39,835:INFO:              psutil: 6.1.1
2025-02-27 16:59:39,835:INFO:          markupsafe: 3.0.2
2025-02-27 16:59:39,835:INFO:             pickle5: Not installed
2025-02-27 16:59:39,835:INFO:         cloudpickle: 3.1.0
2025-02-27 16:59:39,835:INFO:         deprecation: 2.1.0
2025-02-27 16:59:39,835:INFO:              xxhash: 3.5.0
2025-02-27 16:59:39,835:INFO:           wurlitzer: Not installed
2025-02-27 16:59:39,835:INFO:PyCaret optional dependencies:
2025-02-27 16:59:50,064:INFO:                shap: 0.44.1
2025-02-27 16:59:50,064:INFO:           interpret: 0.6.9
2025-02-27 16:59:50,064:INFO:                umap: 0.5.7
2025-02-27 16:59:50,064:INFO:     ydata_profiling: 4.12.2
2025-02-27 16:59:50,064:INFO:  explainerdashboard: 0.4.8
2025-02-27 16:59:50,064:INFO:             autoviz: Not installed
2025-02-27 16:59:50,064:INFO:           fairlearn: 0.7.0
2025-02-27 16:59:50,064:INFO:          deepchecks: Not installed
2025-02-27 16:59:50,064:INFO:             xgboost: 2.1.3
2025-02-27 16:59:50,064:INFO:            catboost: 1.2.7
2025-02-27 16:59:50,064:INFO:              kmodes: 0.12.2
2025-02-27 16:59:50,064:INFO:             mlxtend: 0.23.3
2025-02-27 16:59:50,064:INFO:       statsforecast: 1.5.0
2025-02-27 16:59:50,064:INFO:        tune_sklearn: Not installed
2025-02-27 16:59:50,064:INFO:                 ray: Not installed
2025-02-27 16:59:50,064:INFO:            hyperopt: 0.2.7
2025-02-27 16:59:50,064:INFO:              optuna: 4.2.0
2025-02-27 16:59:50,064:INFO:               skopt: 0.10.2
2025-02-27 16:59:50,064:INFO:              mlflow: 2.15.1
2025-02-27 16:59:50,064:INFO:              gradio: 5.13.1
2025-02-27 16:59:50,064:INFO:             fastapi: 0.115.7
2025-02-27 16:59:50,064:INFO:             uvicorn: 0.34.0
2025-02-27 16:59:50,064:INFO:              m2cgen: 0.10.0
2025-02-27 16:59:50,064:INFO:           evidently: 0.4.40
2025-02-27 16:59:50,064:INFO:               fugue: 0.8.7
2025-02-27 16:59:50,064:INFO:           streamlit: Not installed
2025-02-27 16:59:50,064:INFO:             prophet: Not installed
2025-02-27 16:59:50,064:INFO:None
2025-02-27 16:59:50,064:INFO:Set up data.
2025-02-27 16:59:50,080:INFO:Set up folding strategy.
2025-02-27 16:59:50,080:INFO:Set up train/test split.
2025-02-27 16:59:50,096:INFO:Set up index.
2025-02-27 16:59:50,096:INFO:Assigning column types.
2025-02-27 16:59:50,096:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-02-27 16:59:50,302:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:59:50,315:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:59:50,477:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:59:50,489:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:59:50,745:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-02-27 16:59:50,745:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:59:50,872:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:59:50,872:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:59:50,887:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-02-27 16:59:51,092:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:59:51,218:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:59:51,234:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:59:51,440:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-02-27 16:59:51,583:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:59:51,599:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:59:51,599:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-02-27 16:59:51,933:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:59:51,949:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:59:52,269:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:59:52,281:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:59:52,297:INFO:Preparing preprocessing pipeline...
2025-02-27 16:59:52,297:INFO:Set up label encoding.
2025-02-27 16:59:52,297:INFO:Set up simple imputation.
2025-02-27 16:59:52,297:INFO:Set up binning of numerical features.
2025-02-27 16:59:52,297:INFO:Set up feature normalization.
2025-02-27 16:59:52,297:INFO:Set up feature selection.
2025-02-27 16:59:52,661:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:59:52,669:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:59:52,857:INFO:Finished creating preprocessing pipeline.
2025-02-27 16:59:52,904:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:59:52,906:INFO:Creating final display dataframe.
2025-02-27 16:59:53,151:INFO:Setup _display_container:                     Description                Value
0                    Session id                   42
1                        Target                 Type
2                   Target type           Multiclass
3                Target mapping     1: 0, 2: 1, 3: 2
4           Original data shape             (199, 8)
5        Transformed data shape             (199, 2)
6   Transformed train set shape             (139, 2)
7    Transformed test set shape              (60, 2)
8              Numeric features                    7
9                    Preprocess                 True
10              Imputation type               simple
11           Numeric imputation                 mean
12       Categorical imputation                 mode
13                    Normalize                 True
14             Normalize method               zscore
15            Feature selection                 True
16     Feature selection method              classic
17  Feature selection estimator             lightgbm
18  Number of features selected                  0.2
19               Fold Generator      StratifiedKFold
20                  Fold Number                   10
21                     CPU Jobs                   -1
22                      Use GPU                False
23               Log Experiment         MlflowLogger
24              Experiment Name  wheatclassification
25                          USI                 9b3c
2025-02-27 16:59:53,593:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:59:53,603:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:59:53,992:INFO:Soft dependency imported: xgboost: 2.1.3
2025-02-27 16:59:54,005:INFO:Soft dependency imported: catboost: 1.2.7
2025-02-27 16:59:54,011:INFO:Logging experiment in loggers
2025-02-27 16:59:54,818:INFO:SubProcess save_model() called ==================================
2025-02-27 16:59:54,904:INFO:Initializing save_model()
2025-02-27 16:59:54,904:INFO:save_model(model=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), model_name=C:\Users\JUPYTE~1\AppData\Local\Temp\tmpfbwzrzff\Transformation Pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=False, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 16:59:54,904:INFO:Adding model into prep_pipe
2025-02-27 16:59:54,904:WARNING:Only Model saved as it was a pipeline.
2025-02-27 16:59:54,941:INFO:C:\Users\JUPYTE~1\AppData\Local\Temp\tmpfbwzrzff\Transformation Pipeline.pkl saved in current working directory
2025-02-27 16:59:54,990:INFO:Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False)
2025-02-27 16:59:54,990:INFO:save_model() successfully completed......................................
2025-02-27 16:59:55,191:INFO:SubProcess save_model() end ==================================
2025-02-27 16:59:55,400:INFO:setup() successfully completed in 17.7s...............
2025-02-27 16:59:55,435:INFO:Initializing compare_models()
2025-02-27 16:59:55,435:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-02-27 16:59:55,435:INFO:Checking exceptions
2025-02-27 16:59:55,453:INFO:Preparing display monitor
2025-02-27 16:59:55,550:INFO:Initializing Logistic Regression
2025-02-27 16:59:55,550:INFO:Total runtime is 0.0 minutes
2025-02-27 16:59:55,577:INFO:SubProcess create_model() called ==================================
2025-02-27 16:59:55,577:INFO:Initializing create_model()
2025-02-27 16:59:55,579:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 16:59:55,579:INFO:Checking exceptions
2025-02-27 16:59:55,579:INFO:Importing libraries
2025-02-27 16:59:55,580:INFO:Copying training dataset
2025-02-27 16:59:55,593:INFO:Defining folds
2025-02-27 16:59:55,593:INFO:Declaring metric variables
2025-02-27 16:59:55,600:INFO:Importing untrained model
2025-02-27 16:59:55,620:INFO:Logistic Regression Imported successfully
2025-02-27 16:59:55,648:INFO:Starting cross validation
2025-02-27 16:59:55,677:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:00:04,323:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:05,077:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:05,352:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:05,686:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:05,796:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:05,800:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:05,858:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:05,892:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:05,904:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:06,244:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:09,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:09,440:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,465:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,489:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,515:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:09,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,549:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,554:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:09,568:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,576:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,600:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,618:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,640:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:09,660:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,674:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:09,686:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,697:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,717:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:09,740:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,085:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:10,097:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,111:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,122:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,364:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:10,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:10,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,390:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,408:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:10,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,417:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,422:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:10,428:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,436:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,444:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,450:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,469:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:10,506:INFO:Calculating mean and std
2025-02-27 17:00:10,514:INFO:Creating metrics dataframe
2025-02-27 17:00:10,528:INFO:Uploading results into container
2025-02-27 17:00:10,533:INFO:Uploading model into container now
2025-02-27 17:00:10,535:INFO:_master_model_container: 1
2025-02-27 17:00:10,535:INFO:_display_container: 2
2025-02-27 17:00:10,539:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=42, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-02-27 17:00:10,541:INFO:create_model() successfully completed......................................
2025-02-27 17:00:10,833:INFO:SubProcess create_model() end ==================================
2025-02-27 17:00:10,833:INFO:Creating metrics dataframe
2025-02-27 17:00:10,865:INFO:Initializing K Neighbors Classifier
2025-02-27 17:00:10,865:INFO:Total runtime is 0.25524011452992756 minutes
2025-02-27 17:00:10,865:INFO:SubProcess create_model() called ==================================
2025-02-27 17:00:10,877:INFO:Initializing create_model()
2025-02-27 17:00:10,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:00:10,877:INFO:Checking exceptions
2025-02-27 17:00:10,877:INFO:Importing libraries
2025-02-27 17:00:10,877:INFO:Copying training dataset
2025-02-27 17:00:10,881:INFO:Defining folds
2025-02-27 17:00:10,881:INFO:Declaring metric variables
2025-02-27 17:00:10,906:INFO:Importing untrained model
2025-02-27 17:00:10,920:INFO:K Neighbors Classifier Imported successfully
2025-02-27 17:00:10,944:INFO:Starting cross validation
2025-02-27 17:00:10,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:00:11,142:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:11,164:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:11,170:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:11,193:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:22,576:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:22,595:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:22,613:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:22,732:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:22,750:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:22,762:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:24,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:24,363:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:24,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:24,675:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:24,703:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:24,726:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:37,070:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:37,281:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:37,363:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:37,363:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:37,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:37,453:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:39,556:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,566:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,570:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,580:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,585:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,597:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,754:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,768:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,785:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,874:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,887:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,900:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,906:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,922:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:39,939:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:40,140:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:40,149:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:40,157:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:40,189:INFO:Calculating mean and std
2025-02-27 17:00:40,193:INFO:Creating metrics dataframe
2025-02-27 17:00:40,203:INFO:Uploading results into container
2025-02-27 17:00:40,206:INFO:Uploading model into container now
2025-02-27 17:00:40,208:INFO:_master_model_container: 2
2025-02-27 17:00:40,209:INFO:_display_container: 2
2025-02-27 17:00:40,212:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-02-27 17:00:40,213:INFO:create_model() successfully completed......................................
2025-02-27 17:00:40,448:INFO:SubProcess create_model() end ==================================
2025-02-27 17:00:40,448:INFO:Creating metrics dataframe
2025-02-27 17:00:40,473:INFO:Initializing Naive Bayes
2025-02-27 17:00:40,473:INFO:Total runtime is 0.7487125515937805 minutes
2025-02-27 17:00:40,490:INFO:SubProcess create_model() called ==================================
2025-02-27 17:00:40,490:INFO:Initializing create_model()
2025-02-27 17:00:40,490:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:00:40,490:INFO:Checking exceptions
2025-02-27 17:00:40,494:INFO:Importing libraries
2025-02-27 17:00:40,494:INFO:Copying training dataset
2025-02-27 17:00:40,510:INFO:Defining folds
2025-02-27 17:00:40,510:INFO:Declaring metric variables
2025-02-27 17:00:40,526:INFO:Importing untrained model
2025-02-27 17:00:40,538:INFO:Naive Bayes Imported successfully
2025-02-27 17:00:40,558:INFO:Starting cross validation
2025-02-27 17:00:40,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:00:40,725:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:40,798:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:40,873:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:40,887:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:40,891:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:40,900:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:40,907:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:40,941:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:40,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:40,991:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:44,536:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,551:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,564:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,588:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,603:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,615:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,619:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,630:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,644:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,663:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,670:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,679:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,696:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,707:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,723:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,800:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,809:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,819:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,824:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,845:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:44,857:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,008:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,020:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,024:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,028:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,030:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,034:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,038:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,046:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,046:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:45,086:INFO:Calculating mean and std
2025-02-27 17:00:45,086:INFO:Creating metrics dataframe
2025-02-27 17:00:45,086:INFO:Uploading results into container
2025-02-27 17:00:45,086:INFO:Uploading model into container now
2025-02-27 17:00:45,098:INFO:_master_model_container: 3
2025-02-27 17:00:45,098:INFO:_display_container: 2
2025-02-27 17:00:45,098:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 17:00:45,098:INFO:create_model() successfully completed......................................
2025-02-27 17:00:45,327:INFO:SubProcess create_model() end ==================================
2025-02-27 17:00:45,327:INFO:Creating metrics dataframe
2025-02-27 17:00:45,357:INFO:Initializing Decision Tree Classifier
2025-02-27 17:00:45,357:INFO:Total runtime is 0.8301062782605488 minutes
2025-02-27 17:00:45,367:INFO:SubProcess create_model() called ==================================
2025-02-27 17:00:45,367:INFO:Initializing create_model()
2025-02-27 17:00:45,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:00:45,367:INFO:Checking exceptions
2025-02-27 17:00:45,367:INFO:Importing libraries
2025-02-27 17:00:45,367:INFO:Copying training dataset
2025-02-27 17:00:45,375:INFO:Defining folds
2025-02-27 17:00:45,375:INFO:Declaring metric variables
2025-02-27 17:00:45,392:INFO:Importing untrained model
2025-02-27 17:00:45,400:INFO:Decision Tree Classifier Imported successfully
2025-02-27 17:00:45,417:INFO:Starting cross validation
2025-02-27 17:00:45,450:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:00:45,557:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:45,573:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:45,573:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:45,589:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:45,620:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:45,636:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:45,652:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:45,657:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:45,667:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:45,683:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:48,964:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:48,975:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:48,987:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,015:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,029:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,036:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,112:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,119:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,134:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,192:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,192:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,228:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,245:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,258:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,322:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,336:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,349:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,356:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,365:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,376:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,426:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,432:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,440:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,448:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,456:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,467:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,495:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,501:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,509:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:49,530:INFO:Calculating mean and std
2025-02-27 17:00:49,530:INFO:Creating metrics dataframe
2025-02-27 17:00:49,536:INFO:Uploading results into container
2025-02-27 17:00:49,544:INFO:Uploading model into container now
2025-02-27 17:00:49,544:INFO:_master_model_container: 4
2025-02-27 17:00:49,544:INFO:_display_container: 2
2025-02-27 17:00:49,544:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=42, splitter='best')
2025-02-27 17:00:49,544:INFO:create_model() successfully completed......................................
2025-02-27 17:00:49,772:INFO:SubProcess create_model() end ==================================
2025-02-27 17:00:49,775:INFO:Creating metrics dataframe
2025-02-27 17:00:49,800:INFO:Initializing SVM - Linear Kernel
2025-02-27 17:00:49,800:INFO:Total runtime is 0.9041635513305664 minutes
2025-02-27 17:00:49,809:INFO:SubProcess create_model() called ==================================
2025-02-27 17:00:49,809:INFO:Initializing create_model()
2025-02-27 17:00:49,809:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:00:49,809:INFO:Checking exceptions
2025-02-27 17:00:49,809:INFO:Importing libraries
2025-02-27 17:00:49,809:INFO:Copying training dataset
2025-02-27 17:00:49,825:INFO:Defining folds
2025-02-27 17:00:49,825:INFO:Declaring metric variables
2025-02-27 17:00:49,842:INFO:Importing untrained model
2025-02-27 17:00:49,850:INFO:SVM - Linear Kernel Imported successfully
2025-02-27 17:00:49,877:INFO:Starting cross validation
2025-02-27 17:00:49,899:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:00:50,005:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:50,020:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:50,020:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:50,036:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:50,067:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:50,083:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:50,083:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:50,115:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:50,131:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:50,131:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:53,396:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:53,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:53,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,420:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,420:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,428:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:53,428:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:53,436:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,438:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,629:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:53,637:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,640:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:53,646:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,646:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,654:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:53,662:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,662:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,670:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:53,670:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:53,683:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,679:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,704:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,720:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:53,728:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,779:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:53,784:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,806:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,828:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,865:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:53,876:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,886:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:53,898:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,009:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:54,017:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,030:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:54,030:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,037:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,043:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,051:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,067:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,253:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:54,253:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,265:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,265:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:54,274:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:54,298:INFO:Calculating mean and std
2025-02-27 17:00:54,298:INFO:Creating metrics dataframe
2025-02-27 17:00:54,307:INFO:Uploading results into container
2025-02-27 17:00:54,314:INFO:Uploading model into container now
2025-02-27 17:00:54,315:INFO:_master_model_container: 5
2025-02-27 17:00:54,315:INFO:_display_container: 2
2025-02-27 17:00:54,315:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=42, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-02-27 17:00:54,315:INFO:create_model() successfully completed......................................
2025-02-27 17:00:54,564:INFO:SubProcess create_model() end ==================================
2025-02-27 17:00:54,564:INFO:Creating metrics dataframe
2025-02-27 17:00:54,595:INFO:Initializing Ridge Classifier
2025-02-27 17:00:54,598:INFO:Total runtime is 0.984079623222351 minutes
2025-02-27 17:00:54,605:INFO:SubProcess create_model() called ==================================
2025-02-27 17:00:54,605:INFO:Initializing create_model()
2025-02-27 17:00:54,605:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:00:54,605:INFO:Checking exceptions
2025-02-27 17:00:54,605:INFO:Importing libraries
2025-02-27 17:00:54,605:INFO:Copying training dataset
2025-02-27 17:00:54,619:INFO:Defining folds
2025-02-27 17:00:54,619:INFO:Declaring metric variables
2025-02-27 17:00:54,628:INFO:Importing untrained model
2025-02-27 17:00:54,643:INFO:Ridge Classifier Imported successfully
2025-02-27 17:00:54,660:INFO:Starting cross validation
2025-02-27 17:00:54,682:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:00:54,786:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:54,810:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:54,820:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:54,852:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:54,859:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:54,883:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:54,921:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:54,946:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:54,956:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:54,975:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:58,303:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,319:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,339:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,352:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,352:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,360:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,368:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,368:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,368:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,400:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,416:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,426:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,432:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:58,440:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,464:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,480:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,486:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,496:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:58,512:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,568:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,568:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,586:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,600:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,600:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,616:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,616:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,632:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:58,632:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,695:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,695:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,711:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,711:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:58,727:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,767:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,783:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:00:58,783:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,787:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,787:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:58,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:00:58,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:00:58,831:INFO:Calculating mean and std
2025-02-27 17:00:58,831:INFO:Creating metrics dataframe
2025-02-27 17:00:58,831:INFO:Uploading results into container
2025-02-27 17:00:58,831:INFO:Uploading model into container now
2025-02-27 17:00:58,831:INFO:_master_model_container: 6
2025-02-27 17:00:58,831:INFO:_display_container: 2
2025-02-27 17:00:58,831:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=42, solver='auto',
                tol=0.0001)
2025-02-27 17:00:58,831:INFO:create_model() successfully completed......................................
2025-02-27 17:00:59,084:INFO:SubProcess create_model() end ==================================
2025-02-27 17:00:59,084:INFO:Creating metrics dataframe
2025-02-27 17:00:59,121:INFO:Initializing Random Forest Classifier
2025-02-27 17:00:59,121:INFO:Total runtime is 1.0595203359921772 minutes
2025-02-27 17:00:59,133:INFO:SubProcess create_model() called ==================================
2025-02-27 17:00:59,133:INFO:Initializing create_model()
2025-02-27 17:00:59,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:00:59,133:INFO:Checking exceptions
2025-02-27 17:00:59,141:INFO:Importing libraries
2025-02-27 17:00:59,141:INFO:Copying training dataset
2025-02-27 17:00:59,154:INFO:Defining folds
2025-02-27 17:00:59,154:INFO:Declaring metric variables
2025-02-27 17:00:59,165:INFO:Importing untrained model
2025-02-27 17:00:59,189:INFO:Random Forest Classifier Imported successfully
2025-02-27 17:00:59,211:INFO:Starting cross validation
2025-02-27 17:00:59,240:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:00:59,352:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:59,368:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:59,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:59,399:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:59,415:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:59,431:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:59,447:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:59,489:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:59,494:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:00:59,510:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:04,515:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,546:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,562:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,562:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,578:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,578:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,594:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,609:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,625:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,753:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,769:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,802:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,817:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,833:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,849:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:04,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,008:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,017:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,038:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,052:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,072:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,080:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,091:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,281:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,303:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,757:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,773:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,773:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:05,804:INFO:Calculating mean and std
2025-02-27 17:01:05,804:INFO:Creating metrics dataframe
2025-02-27 17:01:05,804:INFO:Uploading results into container
2025-02-27 17:01:05,804:INFO:Uploading model into container now
2025-02-27 17:01:05,804:INFO:_master_model_container: 7
2025-02-27 17:01:05,820:INFO:_display_container: 2
2025-02-27 17:01:05,820:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=42, verbose=0,
                       warm_start=False)
2025-02-27 17:01:05,820:INFO:create_model() successfully completed......................................
2025-02-27 17:01:06,078:INFO:SubProcess create_model() end ==================================
2025-02-27 17:01:06,078:INFO:Creating metrics dataframe
2025-02-27 17:01:06,105:INFO:Initializing Quadratic Discriminant Analysis
2025-02-27 17:01:06,105:INFO:Total runtime is 1.1759142597516377 minutes
2025-02-27 17:01:06,122:INFO:SubProcess create_model() called ==================================
2025-02-27 17:01:06,122:INFO:Initializing create_model()
2025-02-27 17:01:06,122:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:01:06,122:INFO:Checking exceptions
2025-02-27 17:01:06,122:INFO:Importing libraries
2025-02-27 17:01:06,122:INFO:Copying training dataset
2025-02-27 17:01:06,137:INFO:Defining folds
2025-02-27 17:01:06,140:INFO:Declaring metric variables
2025-02-27 17:01:06,147:INFO:Importing untrained model
2025-02-27 17:01:06,160:INFO:Quadratic Discriminant Analysis Imported successfully
2025-02-27 17:01:06,185:INFO:Starting cross validation
2025-02-27 17:01:06,215:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:01:06,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:06,341:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:06,357:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:06,389:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:06,405:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:06,406:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:06,428:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:06,435:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:06,442:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:06,463:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:09,705:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:09,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:09,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,715:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,724:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,730:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,739:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,744:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,744:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:09,754:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,771:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,793:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,899:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:09,915:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,915:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,931:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,962:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:09,962:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,979:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,995:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:09,995:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:10,003:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,015:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,019:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,146:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:10,154:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,162:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,178:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,226:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:10,242:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,242:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,258:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,305:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:10,316:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,321:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,337:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,405:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:10,409:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,424:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,431:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:10,450:INFO:Calculating mean and std
2025-02-27 17:01:10,450:INFO:Creating metrics dataframe
2025-02-27 17:01:10,458:INFO:Uploading results into container
2025-02-27 17:01:10,458:INFO:Uploading model into container now
2025-02-27 17:01:10,458:INFO:_master_model_container: 8
2025-02-27 17:01:10,466:INFO:_display_container: 2
2025-02-27 17:01:10,466:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-02-27 17:01:10,466:INFO:create_model() successfully completed......................................
2025-02-27 17:01:10,706:INFO:SubProcess create_model() end ==================================
2025-02-27 17:01:10,706:INFO:Creating metrics dataframe
2025-02-27 17:01:10,732:INFO:Initializing Ada Boost Classifier
2025-02-27 17:01:10,732:INFO:Total runtime is 1.2530266642570493 minutes
2025-02-27 17:01:10,739:INFO:SubProcess create_model() called ==================================
2025-02-27 17:01:10,739:INFO:Initializing create_model()
2025-02-27 17:01:10,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:01:10,744:INFO:Checking exceptions
2025-02-27 17:01:10,744:INFO:Importing libraries
2025-02-27 17:01:10,744:INFO:Copying training dataset
2025-02-27 17:01:10,756:INFO:Defining folds
2025-02-27 17:01:10,756:INFO:Declaring metric variables
2025-02-27 17:01:10,772:INFO:Importing untrained model
2025-02-27 17:01:10,780:INFO:Ada Boost Classifier Imported successfully
2025-02-27 17:01:10,804:INFO:Starting cross validation
2025-02-27 17:01:10,829:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:01:10,933:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:10,965:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:10,965:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:10,983:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:10,989:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:11,005:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:11,005:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:11,021:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:11,037:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:11,053:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:14,767:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:14,783:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:14,799:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:14,853:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:14,965:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:15,238:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:15,370:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:15,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:15,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,375:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,397:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,397:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,410:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,421:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,438:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:15,445:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,461:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,475:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:15,480:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,480:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,509:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,529:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,530:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:15,544:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:15,627:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:15,639:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,653:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,670:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,670:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:15,813:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:15,820:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,828:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,917:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-02-27 17:01:15,957:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:15,957:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,973:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,980:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:15,982:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,982:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,990:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:15,998:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:16,062:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:16,062:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:16,078:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:16,078:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:16,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:16,252:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:16,260:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:16,266:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:16,288:INFO:Calculating mean and std
2025-02-27 17:01:16,288:INFO:Creating metrics dataframe
2025-02-27 17:01:16,300:INFO:Uploading results into container
2025-02-27 17:01:16,302:INFO:Uploading model into container now
2025-02-27 17:01:16,302:INFO:_master_model_container: 9
2025-02-27 17:01:16,302:INFO:_display_container: 2
2025-02-27 17:01:16,305:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=42)
2025-02-27 17:01:16,305:INFO:create_model() successfully completed......................................
2025-02-27 17:01:16,530:INFO:SubProcess create_model() end ==================================
2025-02-27 17:01:16,530:INFO:Creating metrics dataframe
2025-02-27 17:01:16,562:INFO:Initializing Gradient Boosting Classifier
2025-02-27 17:01:16,562:INFO:Total runtime is 1.3501884341239927 minutes
2025-02-27 17:01:16,577:INFO:SubProcess create_model() called ==================================
2025-02-27 17:01:16,577:INFO:Initializing create_model()
2025-02-27 17:01:16,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:01:16,583:INFO:Checking exceptions
2025-02-27 17:01:16,583:INFO:Importing libraries
2025-02-27 17:01:16,583:INFO:Copying training dataset
2025-02-27 17:01:16,601:INFO:Defining folds
2025-02-27 17:01:16,601:INFO:Declaring metric variables
2025-02-27 17:01:16,614:INFO:Importing untrained model
2025-02-27 17:01:16,620:INFO:Gradient Boosting Classifier Imported successfully
2025-02-27 17:01:16,646:INFO:Starting cross validation
2025-02-27 17:01:16,674:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:01:16,786:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:16,817:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:16,817:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:16,833:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:16,833:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:16,865:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:16,865:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:16,865:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:16,881:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:16,896:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:22,048:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:22,064:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,080:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:22,095:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,095:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,111:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,111:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:22,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,143:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,159:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,294:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:22,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,310:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,326:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,343:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:22,343:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,358:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:22,374:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,567:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:23,567:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,583:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,599:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,615:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:23,615:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,631:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,631:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:23,709:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,725:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,725:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,741:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:23,748:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,757:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,757:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:23,788:INFO:Calculating mean and std
2025-02-27 17:01:23,788:INFO:Creating metrics dataframe
2025-02-27 17:01:23,788:INFO:Uploading results into container
2025-02-27 17:01:23,804:INFO:Uploading model into container now
2025-02-27 17:01:23,805:INFO:_master_model_container: 10
2025-02-27 17:01:23,806:INFO:_display_container: 2
2025-02-27 17:01:23,808:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=42, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-02-27 17:01:23,808:INFO:create_model() successfully completed......................................
2025-02-27 17:01:24,036:INFO:SubProcess create_model() end ==================================
2025-02-27 17:01:24,036:INFO:Creating metrics dataframe
2025-02-27 17:01:24,068:INFO:Initializing Linear Discriminant Analysis
2025-02-27 17:01:24,068:INFO:Total runtime is 1.4752900282541908 minutes
2025-02-27 17:01:24,068:INFO:SubProcess create_model() called ==================================
2025-02-27 17:01:24,083:INFO:Initializing create_model()
2025-02-27 17:01:24,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:01:24,083:INFO:Checking exceptions
2025-02-27 17:01:24,083:INFO:Importing libraries
2025-02-27 17:01:24,083:INFO:Copying training dataset
2025-02-27 17:01:24,098:INFO:Defining folds
2025-02-27 17:01:24,099:INFO:Declaring metric variables
2025-02-27 17:01:24,105:INFO:Importing untrained model
2025-02-27 17:01:24,119:INFO:Linear Discriminant Analysis Imported successfully
2025-02-27 17:01:24,148:INFO:Starting cross validation
2025-02-27 17:01:24,188:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:01:24,283:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:24,313:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:24,322:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:24,370:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:24,370:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:24,386:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:24,401:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:24,401:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:24,417:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:24,449:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:28,016:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,016:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,032:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,032:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,048:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,048:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,064:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,064:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,064:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,080:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,080:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,096:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,096:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,111:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,111:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,127:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,260:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,270:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,270:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,270:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,270:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,286:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,286:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,301:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,333:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,333:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,349:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,366:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,389:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,420:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,420:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,436:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,436:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,452:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,499:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2025-02-27 17:01:28,515:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,515:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,531:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:28,562:INFO:Calculating mean and std
2025-02-27 17:01:28,562:INFO:Creating metrics dataframe
2025-02-27 17:01:28,562:INFO:Uploading results into container
2025-02-27 17:01:28,562:INFO:Uploading model into container now
2025-02-27 17:01:28,576:INFO:_master_model_container: 11
2025-02-27 17:01:28,576:INFO:_display_container: 2
2025-02-27 17:01:28,576:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-02-27 17:01:28,576:INFO:create_model() successfully completed......................................
2025-02-27 17:01:28,788:INFO:SubProcess create_model() end ==================================
2025-02-27 17:01:28,805:INFO:Creating metrics dataframe
2025-02-27 17:01:28,836:INFO:Initializing Extra Trees Classifier
2025-02-27 17:01:28,836:INFO:Total runtime is 1.5547659834225969 minutes
2025-02-27 17:01:28,848:INFO:SubProcess create_model() called ==================================
2025-02-27 17:01:28,848:INFO:Initializing create_model()
2025-02-27 17:01:28,848:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:01:28,848:INFO:Checking exceptions
2025-02-27 17:01:28,848:INFO:Importing libraries
2025-02-27 17:01:28,848:INFO:Copying training dataset
2025-02-27 17:01:28,868:INFO:Defining folds
2025-02-27 17:01:28,868:INFO:Declaring metric variables
2025-02-27 17:01:28,892:INFO:Importing untrained model
2025-02-27 17:01:28,903:INFO:Extra Trees Classifier Imported successfully
2025-02-27 17:01:28,931:INFO:Starting cross validation
2025-02-27 17:01:28,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:01:29,083:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:29,099:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:29,115:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:29,115:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:29,130:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:29,146:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:29,146:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:29,162:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:29,178:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:29,209:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:34,141:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,175:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,204:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,236:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,236:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,251:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,275:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,299:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,362:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,362:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,378:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,394:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,394:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,529:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,545:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,560:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,560:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,576:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,624:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,639:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,639:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,655:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,655:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:34,655:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:35,139:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:35,139:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:35,156:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:35,187:INFO:Calculating mean and std
2025-02-27 17:01:35,187:INFO:Creating metrics dataframe
2025-02-27 17:01:35,200:INFO:Uploading results into container
2025-02-27 17:01:35,202:INFO:Uploading model into container now
2025-02-27 17:01:35,204:INFO:_master_model_container: 12
2025-02-27 17:01:35,204:INFO:_display_container: 2
2025-02-27 17:01:35,204:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=42, verbose=0,
                     warm_start=False)
2025-02-27 17:01:35,204:INFO:create_model() successfully completed......................................
2025-02-27 17:01:35,424:INFO:SubProcess create_model() end ==================================
2025-02-27 17:01:35,424:INFO:Creating metrics dataframe
2025-02-27 17:01:35,472:INFO:Initializing Extreme Gradient Boosting
2025-02-27 17:01:35,472:INFO:Total runtime is 1.6653593937555946 minutes
2025-02-27 17:01:35,489:INFO:SubProcess create_model() called ==================================
2025-02-27 17:01:35,489:INFO:Initializing create_model()
2025-02-27 17:01:35,489:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:01:35,489:INFO:Checking exceptions
2025-02-27 17:01:35,489:INFO:Importing libraries
2025-02-27 17:01:35,489:INFO:Copying training dataset
2025-02-27 17:01:35,507:INFO:Defining folds
2025-02-27 17:01:35,507:INFO:Declaring metric variables
2025-02-27 17:01:35,533:INFO:Importing untrained model
2025-02-27 17:01:35,583:INFO:Extreme Gradient Boosting Imported successfully
2025-02-27 17:01:35,615:INFO:Starting cross validation
2025-02-27 17:01:35,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:01:35,941:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:35,997:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:36,081:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:36,108:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:36,108:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:36,124:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:36,124:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:36,155:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:36,181:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:36,187:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,160:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,176:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,176:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,176:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,176:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,176:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,176:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,192:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,197:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,197:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,207:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,223:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,239:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:43,271:INFO:Calculating mean and std
2025-02-27 17:01:43,271:INFO:Creating metrics dataframe
2025-02-27 17:01:43,285:INFO:Uploading results into container
2025-02-27 17:01:43,286:INFO:Uploading model into container now
2025-02-27 17:01:43,286:INFO:_master_model_container: 13
2025-02-27 17:01:43,289:INFO:_display_container: 2
2025-02-27 17:01:43,289:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2025-02-27 17:01:43,292:INFO:create_model() successfully completed......................................
2025-02-27 17:01:43,498:INFO:SubProcess create_model() end ==================================
2025-02-27 17:01:43,498:INFO:Creating metrics dataframe
2025-02-27 17:01:43,523:INFO:Initializing Light Gradient Boosting Machine
2025-02-27 17:01:43,523:INFO:Total runtime is 1.7995486219724017 minutes
2025-02-27 17:01:43,523:INFO:SubProcess create_model() called ==================================
2025-02-27 17:01:43,523:INFO:Initializing create_model()
2025-02-27 17:01:43,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:01:43,523:INFO:Checking exceptions
2025-02-27 17:01:43,523:INFO:Importing libraries
2025-02-27 17:01:43,523:INFO:Copying training dataset
2025-02-27 17:01:43,544:INFO:Defining folds
2025-02-27 17:01:43,544:INFO:Declaring metric variables
2025-02-27 17:01:43,553:INFO:Importing untrained model
2025-02-27 17:01:43,562:INFO:Light Gradient Boosting Machine Imported successfully
2025-02-27 17:01:43,578:INFO:Starting cross validation
2025-02-27 17:01:43,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:01:43,680:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,698:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,712:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,728:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,744:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,744:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,744:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:43,759:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:50,839:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:50,855:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:50,871:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,133:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,149:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,149:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,165:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,183:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,197:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,357:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,372:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,372:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,388:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,404:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,417:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,417:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,420:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,436:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,436:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,617:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,628:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,628:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,644:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,660:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,660:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:01:51,691:INFO:Calculating mean and std
2025-02-27 17:01:51,691:INFO:Creating metrics dataframe
2025-02-27 17:01:51,700:INFO:Uploading results into container
2025-02-27 17:01:51,700:INFO:Uploading model into container now
2025-02-27 17:01:51,700:INFO:_master_model_container: 14
2025-02-27 17:01:51,700:INFO:_display_container: 2
2025-02-27 17:01:51,709:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=42, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-02-27 17:01:51,709:INFO:create_model() successfully completed......................................
2025-02-27 17:01:51,947:INFO:SubProcess create_model() end ==================================
2025-02-27 17:01:51,948:INFO:Creating metrics dataframe
2025-02-27 17:01:51,980:INFO:Initializing CatBoost Classifier
2025-02-27 17:01:51,980:INFO:Total runtime is 1.9404957771301268 minutes
2025-02-27 17:01:51,996:INFO:SubProcess create_model() called ==================================
2025-02-27 17:01:51,996:INFO:Initializing create_model()
2025-02-27 17:01:51,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:01:51,996:INFO:Checking exceptions
2025-02-27 17:01:51,996:INFO:Importing libraries
2025-02-27 17:01:51,996:INFO:Copying training dataset
2025-02-27 17:01:52,010:INFO:Defining folds
2025-02-27 17:01:52,010:INFO:Declaring metric variables
2025-02-27 17:01:52,023:INFO:Importing untrained model
2025-02-27 17:01:52,028:INFO:CatBoost Classifier Imported successfully
2025-02-27 17:01:52,055:INFO:Starting cross validation
2025-02-27 17:01:52,081:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:01:56,543:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:56,590:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:56,629:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:56,747:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:56,763:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:56,830:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:56,842:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:56,930:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:56,995:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:01:57,074:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:10,706:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:10,739:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:10,770:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,217:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,265:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,281:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,296:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,312:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,344:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,376:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,392:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,392:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,424:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,456:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,488:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,520:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,520:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,536:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,536:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,536:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,552:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,568:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,775:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,791:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,806:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:11,838:INFO:Calculating mean and std
2025-02-27 17:02:11,838:INFO:Creating metrics dataframe
2025-02-27 17:02:11,838:INFO:Uploading results into container
2025-02-27 17:02:11,838:INFO:Uploading model into container now
2025-02-27 17:02:11,854:INFO:_master_model_container: 15
2025-02-27 17:02:11,854:INFO:_display_container: 2
2025-02-27 17:02:11,855:INFO:<catboost.core.CatBoostClassifier object at 0x00000204BE97E890>
2025-02-27 17:02:11,855:INFO:create_model() successfully completed......................................
2025-02-27 17:02:12,085:INFO:SubProcess create_model() end ==================================
2025-02-27 17:02:12,085:INFO:Creating metrics dataframe
2025-02-27 17:02:12,132:INFO:Initializing Dummy Classifier
2025-02-27 17:02:12,132:INFO:Total runtime is 2.2763631860415137 minutes
2025-02-27 17:02:12,145:INFO:SubProcess create_model() called ==================================
2025-02-27 17:02:12,145:INFO:Initializing create_model()
2025-02-27 17:02:12,145:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000204BA1AAE30>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:02:12,145:INFO:Checking exceptions
2025-02-27 17:02:12,145:INFO:Importing libraries
2025-02-27 17:02:12,145:INFO:Copying training dataset
2025-02-27 17:02:12,155:INFO:Defining folds
2025-02-27 17:02:12,155:INFO:Declaring metric variables
2025-02-27 17:02:12,168:INFO:Importing untrained model
2025-02-27 17:02:12,192:INFO:Dummy Classifier Imported successfully
2025-02-27 17:02:12,222:INFO:Starting cross validation
2025-02-27 17:02:12,245:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-02-27 17:02:12,387:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:12,387:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:12,387:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:12,403:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:12,419:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:12,435:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:12,466:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:12,466:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:12,466:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:12,498:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:15,891:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:15,907:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:15,923:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:15,923:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:15,939:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:15,955:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:15,955:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:15,976:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:15,976:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:15,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:15,988:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:15,992:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:15,999:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,011:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,011:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:16,026:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,058:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,058:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,074:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:16,076:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,090:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,090:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,106:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:16,106:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,216:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,232:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,232:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:16,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,248:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,264:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,264:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:16,264:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,311:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,327:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,327:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:16,343:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,390:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,406:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,406:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-02-27 17:02:16,406:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:16,438:INFO:Calculating mean and std
2025-02-27 17:02:16,438:INFO:Creating metrics dataframe
2025-02-27 17:02:16,448:INFO:Uploading results into container
2025-02-27 17:02:16,448:INFO:Uploading model into container now
2025-02-27 17:02:16,451:INFO:_master_model_container: 16
2025-02-27 17:02:16,451:INFO:_display_container: 2
2025-02-27 17:02:16,451:INFO:DummyClassifier(constant=None, random_state=42, strategy='prior')
2025-02-27 17:02:16,451:INFO:create_model() successfully completed......................................
2025-02-27 17:02:16,647:INFO:SubProcess create_model() end ==================================
2025-02-27 17:02:16,663:INFO:Creating metrics dataframe
2025-02-27 17:02:16,710:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:323: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  master_display_.apply(

2025-02-27 17:02:16,749:INFO:Initializing create_model()
2025-02-27 17:02:16,749:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:02:16,749:INFO:Checking exceptions
2025-02-27 17:02:16,757:INFO:Importing libraries
2025-02-27 17:02:16,757:INFO:Copying training dataset
2025-02-27 17:02:16,769:INFO:Defining folds
2025-02-27 17:02:16,769:INFO:Declaring metric variables
2025-02-27 17:02:16,771:INFO:Importing untrained model
2025-02-27 17:02:16,771:INFO:Declaring custom model
2025-02-27 17:02:16,771:INFO:Naive Bayes Imported successfully
2025-02-27 17:02:16,810:INFO:Cross validation set to False
2025-02-27 17:02:16,810:INFO:Fitting Model
2025-02-27 17:02:16,825:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:17,056:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:17,074:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:17,083:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:17,083:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:17,096:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:17,143:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000214 seconds.
2025-02-27 17:02:17,143:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 17:02:17,143:INFO:[LightGBM] [Info] Total Bins 124
2025-02-27 17:02:17,143:INFO:[LightGBM] [Info] Number of data points in the train set: 139, number of used features: 7
2025-02-27 17:02:17,143:INFO:[LightGBM] [Info] Start training from score -1.105833
2025-02-27 17:02:17,143:INFO:[LightGBM] [Info] Start training from score -1.063273
2025-02-27 17:02:17,143:INFO:[LightGBM] [Info] Start training from score -1.127811
2025-02-27 17:02:17,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,143:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,159:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,175:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,178:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,191:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,206:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,222:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,238:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,254:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,269:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,279:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,285:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,301:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,317:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,332:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,348:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,364:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,379:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,395:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,411:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,426:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,442:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,458:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,474:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,479:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,489:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,505:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:17,552:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 17:02:17,552:INFO:create_model() successfully completed......................................
2025-02-27 17:02:17,798:INFO:Creating Dashboard logs
2025-02-27 17:02:17,810:INFO:Model: Naive Bayes
2025-02-27 17:02:18,034:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-02-27 17:02:18,711:INFO:Initializing predict_model()
2025-02-27 17:02:18,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=False, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000204BEC8D120>)
2025-02-27 17:02:18,711:INFO:Checking exceptions
2025-02-27 17:02:18,711:INFO:Preloading libraries
2025-02-27 17:02:18,870:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:18,878:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:18,886:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:19,194:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\_distutils_hack\__init__.py:31: UserWarning: Setuptools is replacing distutils. Support for replacing an already imported distutils is deprecated. In the future, this condition will fail. Register concerns at https://github.com/pypa/setuptools/issues/new?template=distutils-deprecation.yml
  warnings.warn(

2025-02-27 17:02:30,299:INFO:Creating Dashboard logs
2025-02-27 17:02:30,302:INFO:Model: Quadratic Discriminant Analysis
2025-02-27 17:02:30,417:INFO:Logged params: {'priors': None, 'reg_param': 0.0, 'store_covariance': False, 'tol': 0.0001}
2025-02-27 17:02:31,314:INFO:Creating Dashboard logs
2025-02-27 17:02:31,321:INFO:Model: Ridge Classifier
2025-02-27 17:02:31,472:INFO:Logged params: {'alpha': 1.0, 'class_weight': None, 'copy_X': True, 'fit_intercept': True, 'max_iter': None, 'positive': False, 'random_state': 42, 'solver': 'auto', 'tol': 0.0001}
2025-02-27 17:02:32,395:INFO:Creating Dashboard logs
2025-02-27 17:02:32,401:INFO:Model: Logistic Regression
2025-02-27 17:02:32,525:INFO:Logged params: {'C': 1.0, 'class_weight': None, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 1000, 'multi_class': 'auto', 'n_jobs': None, 'penalty': 'l2', 'random_state': 42, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
2025-02-27 17:02:33,405:INFO:Creating Dashboard logs
2025-02-27 17:02:33,410:INFO:Model: Linear Discriminant Analysis
2025-02-27 17:02:33,542:INFO:Logged params: {'covariance_estimator': None, 'n_components': None, 'priors': None, 'shrinkage': None, 'solver': 'svd', 'store_covariance': False, 'tol': 0.0001}
2025-02-27 17:02:34,360:INFO:Creating Dashboard logs
2025-02-27 17:02:34,371:INFO:Model: Extreme Gradient Boosting
2025-02-27 17:02:34,507:INFO:Logged params: {'objective': 'binary:logistic', 'base_score': None, 'booster': 'gbtree', 'callbacks': None, 'colsample_bylevel': None, 'colsample_bynode': None, 'colsample_bytree': None, 'device': 'cpu', 'early_stopping_rounds': None, 'enable_categorical': False, 'eval_metric': None, 'feature_types': None, 'gamma': None, 'grow_policy': None, 'importance_type': None, 'interaction_constraints': None, 'learning_rate': None, 'max_bin': None, 'max_cat_threshold': None, 'max_cat_to_onehot': None, 'max_delta_step': None, 'max_depth': None, 'max_leaves': None, 'min_child_weight': None, 'missing': nan, 'monotone_constraints': None, 'multi_strategy': None, 'n_estimators': None, 'n_jobs': -1, 'num_parallel_tree': None, 'random_state': 42, 'reg_alpha': None, 'reg_lambda': None, 'sampling_method': None, 'scale_pos_weight': None, 'subsample': None, 'tree_method': 'auto', 'validate_parameters': None, 'verbosity': 0}
2025-02-27 17:02:35,482:INFO:Creating Dashboard logs
2025-02-27 17:02:35,487:INFO:Model: Ada Boost Classifier
2025-02-27 17:02:35,624:INFO:Logged params: {'algorithm': 'SAMME.R', 'estimator': None, 'learning_rate': 1.0, 'n_estimators': 50, 'random_state': 42}
2025-02-27 17:02:36,500:INFO:Creating Dashboard logs
2025-02-27 17:02:36,511:INFO:Model: Decision Tree Classifier
2025-02-27 17:02:36,644:INFO:Logged params: {'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'random_state': 42, 'splitter': 'best'}
2025-02-27 17:02:37,500:INFO:Creating Dashboard logs
2025-02-27 17:02:37,500:INFO:Model: Random Forest Classifier
2025-02-27 17:02:37,629:INFO:Logged params: {'bootstrap': True, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
2025-02-27 17:02:38,506:INFO:Creating Dashboard logs
2025-02-27 17:02:38,515:INFO:Model: Gradient Boosting Classifier
2025-02-27 17:02:38,636:INFO:Logged params: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.1, 'loss': 'log_loss', 'max_depth': 3, 'max_features': None, 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_iter_no_change': None, 'random_state': 42, 'subsample': 1.0, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-02-27 17:02:39,499:INFO:Creating Dashboard logs
2025-02-27 17:02:39,499:INFO:Model: Extra Trees Classifier
2025-02-27 17:02:39,638:INFO:Logged params: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': None, 'criterion': 'gini', 'max_depth': None, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 2, 'min_weight_fraction_leaf': 0.0, 'monotonic_cst': None, 'n_estimators': 100, 'n_jobs': -1, 'oob_score': False, 'random_state': 42, 'verbose': 0, 'warm_start': False}
2025-02-27 17:02:40,592:INFO:Creating Dashboard logs
2025-02-27 17:02:40,592:INFO:Model: CatBoost Classifier
2025-02-27 17:02:40,722:WARNING:Couldn't get params for model. Exception:
Traceback (most recent call last):
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\pycaret\loggers\dashboard_logger.py", line 78, in log_model
    params = params.get_all_params()
  File "C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\catboost\core.py", line 3504, in get_all_params
    raise CatBoostError("There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.")
_catboost.CatBoostError: There is no trained model to use get_all_params(). Use fit() to train model. Then use this method.

2025-02-27 17:02:40,722:INFO:Logged params: {}
2025-02-27 17:02:41,526:INFO:Creating Dashboard logs
2025-02-27 17:02:41,533:INFO:Model: SVM - Linear Kernel
2025-02-27 17:02:41,657:INFO:Logged params: {'alpha': 0.0001, 'average': False, 'class_weight': None, 'early_stopping': False, 'epsilon': 0.1, 'eta0': 0.001, 'fit_intercept': True, 'l1_ratio': 0.15, 'learning_rate': 'optimal', 'loss': 'hinge', 'max_iter': 1000, 'n_iter_no_change': 5, 'n_jobs': -1, 'penalty': 'l2', 'power_t': 0.5, 'random_state': 42, 'shuffle': True, 'tol': 0.001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
2025-02-27 17:02:42,584:INFO:Creating Dashboard logs
2025-02-27 17:02:42,589:INFO:Model: K Neighbors Classifier
2025-02-27 17:02:42,728:INFO:Logged params: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'minkowski', 'metric_params': None, 'n_jobs': -1, 'n_neighbors': 5, 'p': 2, 'weights': 'uniform'}
2025-02-27 17:02:43,617:INFO:Creating Dashboard logs
2025-02-27 17:02:43,624:INFO:Model: Light Gradient Boosting Machine
2025-02-27 17:02:43,751:INFO:Logged params: {'boosting_type': 'gbdt', 'class_weight': None, 'colsample_bytree': 1.0, 'importance_type': 'split', 'learning_rate': 0.1, 'max_depth': -1, 'min_child_samples': 20, 'min_child_weight': 0.001, 'min_split_gain': 0.0, 'n_estimators': 100, 'n_jobs': -1, 'num_leaves': 31, 'objective': None, 'random_state': 42, 'reg_alpha': 0.0, 'reg_lambda': 0.0, 'subsample': 1.0, 'subsample_for_bin': 200000, 'subsample_freq': 0}
2025-02-27 17:02:44,584:INFO:Creating Dashboard logs
2025-02-27 17:02:44,591:INFO:Model: Dummy Classifier
2025-02-27 17:02:44,714:INFO:Logged params: {'constant': None, 'random_state': 42, 'strategy': 'prior'}
2025-02-27 17:02:45,549:INFO:_master_model_container: 16
2025-02-27 17:02:45,549:INFO:_display_container: 2
2025-02-27 17:02:45,549:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 17:02:45,549:INFO:compare_models() successfully completed......................................
2025-02-27 17:02:45,562:INFO:Initializing evaluate_model()
2025-02-27 17:02:45,562:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2025-02-27 17:02:45,590:INFO:Initializing plot_model()
2025-02-27 17:02:45,590:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), verbose=False, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, system=True)
2025-02-27 17:02:45,590:INFO:Checking exceptions
2025-02-27 17:02:45,590:INFO:Preloading libraries
2025-02-27 17:02:45,590:INFO:Copying training dataset
2025-02-27 17:02:45,590:INFO:Plot type: pipeline
2025-02-27 17:02:46,004:INFO:Visual Rendered Successfully
2025-02-27 17:02:46,147:INFO:plot_model() successfully completed......................................
2025-02-27 17:02:46,152:INFO:Initializing plot_model()
2025-02-27 17:02:46,152:INFO:plot_model(plot=confusion_matrix, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, system=True)
2025-02-27 17:02:46,152:INFO:Checking exceptions
2025-02-27 17:02:46,152:INFO:Preloading libraries
2025-02-27 17:02:46,152:INFO:Copying training dataset
2025-02-27 17:02:46,152:INFO:Plot type: confusion_matrix
2025-02-27 17:02:46,277:INFO:Fitting Model
2025-02-27 17:02:46,277:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-02-27 17:02:46,277:INFO:Scoring test/hold-out set
2025-02-27 17:02:46,511:INFO:Visual Rendered Successfully
2025-02-27 17:02:46,654:INFO:plot_model() successfully completed......................................
2025-02-27 17:02:46,654:INFO:Initializing plot_model()
2025-02-27 17:02:46,655:INFO:plot_model(plot=auc, fold=None, verbose=True, display=None, display_format=None, estimator=GaussianNB(priors=None, var_smoothing=1e-09), feature_name=None, fit_kwargs=None, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, system=True)
2025-02-27 17:02:46,655:INFO:Checking exceptions
2025-02-27 17:02:46,661:INFO:Preloading libraries
2025-02-27 17:02:46,662:INFO:Copying training dataset
2025-02-27 17:02:46,662:INFO:Plot type: auc
2025-02-27 17:02:46,780:INFO:Fitting Model
2025-02-27 17:02:46,780:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2025-02-27 17:02:46,781:INFO:Scoring test/hold-out set
2025-02-27 17:02:47,150:INFO:Visual Rendered Successfully
2025-02-27 17:02:47,290:INFO:plot_model() successfully completed......................................
2025-02-27 17:02:47,312:INFO:Initializing predict_model()
2025-02-27 17:02:47,312:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000204BEB57F40>)
2025-02-27 17:02:47,312:INFO:Checking exceptions
2025-02-27 17:02:47,312:INFO:Preloading libraries
2025-02-27 17:02:47,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:47,402:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:47,409:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 3) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-02-27 17:02:47,625:WARNING:C:\Users\Jupyter Files Only\AppData\Local\Temp\ipykernel_20504\3395214271.py:3: DeprecationWarning: The distutils package is deprecated and slated for removal in Python 3.12. Use setuptools or check PEP 632 for potential alternatives
  import distutils

2025-02-27 17:02:47,775:INFO:Initializing finalize_model()
2025-02-27 17:02:47,775:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2025-02-27 17:02:47,775:INFO:Finalizing GaussianNB(priors=None, var_smoothing=1e-09)
2025-02-27 17:02:47,781:INFO:Initializing create_model()
2025-02-27 17:02:47,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000204BA1AA830>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2025-02-27 17:02:47,781:INFO:Checking exceptions
2025-02-27 17:02:47,784:INFO:Importing libraries
2025-02-27 17:02:47,784:INFO:Copying training dataset
2025-02-27 17:02:47,784:INFO:Defining folds
2025-02-27 17:02:47,784:INFO:Declaring metric variables
2025-02-27 17:02:47,785:INFO:Importing untrained model
2025-02-27 17:02:47,785:INFO:Declaring custom model
2025-02-27 17:02:47,785:INFO:Naive Bayes Imported successfully
2025-02-27 17:02:47,797:INFO:Cross validation set to False
2025-02-27 17:02:47,797:INFO:Fitting Model
2025-02-27 17:02:47,805:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\preprocessing\_discretization.py:248: FutureWarning: In version 1.5 onwards, subsample=200_000 will be used by default. Set subsample explicitly to silence this warning in the mean time. Set subsample=None to disable subsampling explicitly.
  warnings.warn(

2025-02-27 17:02:47,805:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:47,812:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:47,820:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:47,826:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:47,826:WARNING:C:\Users\Jupyter Files Only\anaconda3\envs\mlops\lib\site-packages\sklearn\cluster\_kmeans.py:1446: UserWarning: KMeans is known to have a memory leak on Windows with MKL, when there are less chunks than available threads. You can avoid it by setting the environment variable OMP_NUM_THREADS=1.
  warnings.warn(

2025-02-27 17:02:47,846:INFO:[LightGBM] [Info] Auto-choosing col-wise multi-threading, the overhead of testing was 0.000123 seconds.
2025-02-27 17:02:47,846:INFO:You can set `force_col_wise=true` to remove the overhead.
2025-02-27 17:02:47,846:INFO:[LightGBM] [Info] Total Bins 163
2025-02-27 17:02:47,846:INFO:[LightGBM] [Info] Number of data points in the train set: 199, number of used features: 7
2025-02-27 17:02:47,846:INFO:[LightGBM] [Info] Start training from score -1.103650
2025-02-27 17:02:47,853:INFO:[LightGBM] [Info] Start training from score -1.073797
2025-02-27 17:02:47,853:INFO:[LightGBM] [Info] Start training from score -1.118918
2025-02-27 17:02:47,853:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,854:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,859:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,861:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,866:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,867:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,873:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,875:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,880:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,881:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,887:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,888:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,889:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,894:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,896:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,901:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,902:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,908:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,909:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,915:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,916:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,917:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,918:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,920:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,921:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,922:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,923:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,924:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,925:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,926:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,927:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,928:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,929:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,930:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,931:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,933:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,934:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,935:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,936:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,937:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,938:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,939:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,941:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,942:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,943:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,944:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,945:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,947:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,948:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,949:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,950:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,951:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,952:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,953:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,954:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,956:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,957:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,958:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,959:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,961:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,962:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,963:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,964:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,965:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,966:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,967:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,968:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,969:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,971:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,972:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,973:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,974:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,975:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,976:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,978:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,979:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,980:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,981:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,982:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,983:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,984:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,985:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,986:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,987:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,988:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,989:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,991:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,992:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,993:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,994:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,995:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,996:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,997:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,998:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:47,999:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,001:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,002:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,003:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,004:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,005:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,006:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,007:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,008:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,009:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,010:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,011:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,013:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,014:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,015:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,016:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,017:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,018:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,019:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,020:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,021:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,022:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,024:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,025:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,026:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,028:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,029:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,030:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,031:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,032:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,033:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,035:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,036:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,037:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,038:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,039:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,040:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,041:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,043:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,044:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,045:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,046:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,047:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,048:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,049:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,051:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,052:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,053:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,054:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,055:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,056:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,058:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,059:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,060:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,061:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,062:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,063:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,065:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,066:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,067:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,068:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,069:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,070:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,071:INFO:[LightGBM] [Warning] No further splits with positive gain, best gain: -inf
2025-02-27 17:02:48,114:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 17:02:48,114:INFO:create_model() successfully completed......................................
2025-02-27 17:02:48,254:INFO:Creating Dashboard logs
2025-02-27 17:02:48,255:INFO:Model: Naive Bayes
2025-02-27 17:02:48,377:INFO:Logged params: {'priors': None, 'var_smoothing': 1e-09}
2025-02-27 17:02:49,078:INFO:_master_model_container: 16
2025-02-27 17:02:49,078:INFO:_display_container: 3
2025-02-27 17:02:49,093:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 17:02:49,093:INFO:finalize_model() successfully completed......................................
2025-02-27 17:02:55,743:INFO:Initializing save_model()
2025-02-27 17:02:55,743:INFO:save_model(model=Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False), model_name=final_wheat_seeds_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\JUPYTE~1\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleIm...
                                                                                         learning_rate=0.1,
                                                                                         max_depth=-1,
                                                                                         min_child_samples=20,
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-02-27 17:02:55,744:INFO:Adding model into prep_pipe
2025-02-27 17:02:55,744:WARNING:Only Model saved as it was a pipeline.
2025-02-27 17:02:55,760:INFO:final_wheat_seeds_model.pkl saved in current working directory
2025-02-27 17:02:55,785:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Area', 'Perimeter', 'Compactness',
                                             'Length', 'Width',
                                             'AsymmetryCoeff', 'Groove'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_va...
                                                                                         min_child_weight=0.001,
                                                                                         min_split_gain=0.0,
                                                                                         n_estimators=100,
                                                                                         n_jobs=None,
                                                                                         num_leaves=31,
                                                                                         objective=None,
                                                                                         random_state=None,
                                                                                         reg_alpha=0.0,
                                                                                         reg_lambda=0.0,
                                                                                         subsample=1.0,
                                                                                         subsample_for_bin=200000,
                                                                                         subsample_freq=0),
                                                                importance_getter='auto',
                                                                max_features=1,
                                                                norm_order=1,
                                                                prefit=False,
                                                                threshold=-inf))),
                ('actual_estimator',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2025-02-27 17:02:55,786:INFO:save_model() successfully completed......................................
